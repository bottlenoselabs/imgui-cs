
//-------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the following tool:
//        https://github.com/lithiumtoast/c2cs (v1.3.17.0)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ReSharper disable All
//-------------------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.Numerics;
using C2CS;

#nullable enable
#pragma warning disable 1591

public static unsafe partial class imgui
{
    private const string LibraryName = "cimgui";

    // Function @ cimgui.h:3390:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImVector_ImWchar_UnInit(ImVector_ImWchar* p);

    // Function @ cimgui.h:3389:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImVector_ImWchar_Init(ImVector_ImWchar* p);

    // Function @ cimgui.h:3388:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImVector_ImWchar_destroy(ImVector_ImWchar* self);

    // Function @ cimgui.h:3387:30 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImVector_ImWchar* ImVector_ImWchar_create();

    // Function @ cimgui.h:3384:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGET_FLT_MIN();

    // Function @ cimgui.h:3382:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGET_FLT_MAX();

    // Function @ cimgui.h:3380:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTextBuffer_appendf(ImGuiTextBuffer* buffer, CString8U fmt);

    // Function @ cimgui.h:3378:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLogText(CString8U fmt);

    // Function @ cimgui.h:3373:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImFontAtlasBuildMultiplyRectAlpha8(byte* table, ulong* pixels, int x, int y, int w, int h, int stride);

    // Function @ cimgui.h:3372:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImFontAtlasBuildMultiplyCalcLookupTable(byte* out_table, float in_multiply_factor);

    // Function @ cimgui.h:3371:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImFontAtlasBuildRender32bppRectFromString(ImFontAtlas* atlas, int x, int y, int w, int h, CString8U in_str, byte in_marker_char, uint in_marker_pixel_value);

    // Function @ cimgui.h:3370:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImFontAtlasBuildRender8bppRectFromString(ImFontAtlas* atlas, int x, int y, int w, int h, CString8U in_str, byte in_marker_char, byte in_marker_pixel_value);

    // Function @ cimgui.h:3369:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImFontAtlasBuildFinish(ImFontAtlas* atlas);

    // Function @ cimgui.h:3368:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImFontAtlasBuildPackCustomRects(ImFontAtlas* atlas, void* stbrp_context_opaque);

    // Function @ cimgui.h:3367:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImFontAtlasBuildSetupFont(ImFontAtlas* atlas, ImFont* font, ImFontConfig* font_config, float ascent, float descent);

    // Function @ cimgui.h:3366:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImFontAtlasBuildInit(ImFontAtlas* atlas);

    // Function @ cimgui.h:3365:35 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFontBuilderIO* igImFontAtlasGetBuilderForStbTruetype();

    // Function @ cimgui.h:3364:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDebugRenderViewportThumbnail(ImDrawList* draw_list, ImGuiViewportP* viewport, ImRect bb);

    // Function @ cimgui.h:3363:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDebugNodeViewport(ImGuiViewportP* viewport);

    // Function @ cimgui.h:3362:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDebugNodeWindowsList(ImVector_ImGuiWindowPtr* windows, CString8U label);

    // Function @ cimgui.h:3361:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDebugNodeWindowSettings(ImGuiWindowSettings* settings);

    // Function @ cimgui.h:3360:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDebugNodeWindow(ImGuiWindow* window, CString8U label);

    // Function @ cimgui.h:3359:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDebugNodeTableSettings(ImGuiTableSettings* settings);

    // Function @ cimgui.h:3358:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDebugNodeTable(ImGuiTable* table);

    // Function @ cimgui.h:3357:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDebugNodeTabBar(ImGuiTabBar* tab_bar, CString8U label);

    // Function @ cimgui.h:3356:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDebugNodeStorage(ImGuiStorage* storage, CString8U label);

    // Function @ cimgui.h:3355:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDebugNodeDrawCmdShowMeshAndBoundingBox(ImDrawList* out_draw_list, ImDrawList* draw_list, ImDrawCmd* draw_cmd, CBool show_mesh, CBool show_aabb);

    // Function @ cimgui.h:3354:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDebugNodeDrawList(ImGuiWindow* window, ImDrawList* draw_list, CString8U label);

    // Function @ cimgui.h:3353:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDebugNodeColumns(ImGuiOldColumns* columns);

    // Function @ cimgui.h:3352:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDebugStartItemPicker();

    // Function @ cimgui.h:3351:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDebugDrawItemRect(uint col);

    // Function @ cimgui.h:3350:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igErrorCheckEndFrameRecover(ImGuiErrorLogCallback log_callback, void* user_data);

    // Function @ cimgui.h:3349:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGcAwakeTransientWindowBuffers(ImGuiWindow* window);

    // Function @ cimgui.h:3348:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGcCompactTransientWindowBuffers(ImGuiWindow* window);

    // Function @ cimgui.h:3347:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGcCompactTransientMiscBuffers();

    // Function @ cimgui.h:3346:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igShadeVertsLinearUV(ImDrawList* draw_list, int vert_start_idx, int vert_end_idx, Vector2 a, Vector2 b, Vector2 uv_a, Vector2 uv_b, CBool clamp);

    // Function @ cimgui.h:3345:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igShadeVertsLinearColorGradientKeepAlpha(ImDrawList* draw_list, int vert_start_idx, int vert_end_idx, Vector2 gradient_p0, Vector2 gradient_p1, uint col0, uint col1);

    // Function @ cimgui.h:3344:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igPlotEx(ImGuiPlotType plot_type, CString8U label, FnPtr_IMGUI_VoidPtr_Int_Float values_getter, void* data, int values_count, int values_offset, CString8U overlay_text, float scale_min, float scale_max, Vector2 frame_size);

    // Function @ cimgui.h:3343:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igColorPickerOptionsPopup(float* ref_col, ImGuiColorEditFlags flags);

    // Function @ cimgui.h:3342:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igColorEditOptionsPopup(float* col, ImGuiColorEditFlags flags);

    // Function @ cimgui.h:3341:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igColorTooltip(CString8U text, float* col, ImGuiColorEditFlags flags);

    // Function @ cimgui.h:3340:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiInputTextState* igGetInputTextState(ImGuiID id);

    // Function @ cimgui.h:3339:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTempInputIsActive(ImGuiID id);

    // Function @ cimgui.h:3338:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTempInputScalar(ImRect bb, ImGuiID id, CString8U label, ImGuiDataType data_type, void* p_data, CString8U format, void* p_clamp_min, void* p_clamp_max);

    // Function @ cimgui.h:3337:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTempInputText(ImRect bb, ImGuiID id, CString8U label, CString8U buf, int buf_size, ImGuiInputTextFlags flags);

    // Function @ cimgui.h:3336:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputTextEx(CString8U label, CString8U hint, CString8U buf, int buf_size, Vector2 size_arg, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* user_data);

    // Function @ cimgui.h:3335:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDataTypeClamp(ImGuiDataType data_type, void* p_data, void* p_min, void* p_max);

    // Function @ cimgui.h:3334:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igDataTypeCompare(ImGuiDataType data_type, void* arg_1, void* arg_2);

    // Function @ cimgui.h:3333:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDataTypeApplyOpFromText(CString8U buf, CString8U initial_value_buf, ImGuiDataType data_type, void* p_data, CString8U format);

    // Function @ cimgui.h:3332:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDataTypeApplyOp(ImGuiDataType data_type, int op, void* output, void* arg_1, void* arg_2);

    // Function @ cimgui.h:3331:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igDataTypeFormatString(CString8U buf, int buf_size, ImGuiDataType data_type, void* p_data, CString8U format);

    // Function @ cimgui.h:3330:37 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiDataTypeInfo* igDataTypeGetInfo(ImGuiDataType data_type);

    // Function @ cimgui.h:3329:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTreePushOverrideID(ImGuiID id);

    // Function @ cimgui.h:3328:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTreeNodeBehaviorIsOpen(ImGuiID id, ImGuiTreeNodeFlags flags);

    // Function @ cimgui.h:3327:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTreeNodeBehavior(ImGuiID id, ImGuiTreeNodeFlags flags, CString8U label, CString8U label_end);

    // Function @ cimgui.h:3326:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSplitterBehavior(ImRect bb, ImGuiID id, ImGuiAxis axis, float* size1, float* size2, float min_size1, float min_size2, float hover_extend, float hover_visibility_delay);

    // Function @ cimgui.h:3325:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSliderBehavior(ImRect bb, ImGuiID id, ImGuiDataType data_type, void* p_v, void* p_min, void* p_max, CString8U format, ImGuiSliderFlags flags, ImRect* out_grab_bb);

    // Function @ cimgui.h:3324:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDragBehavior(ImGuiID id, ImGuiDataType data_type, void* p_v, float v_speed, void* p_min, void* p_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:3323:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igButtonBehavior(ImRect bb, ImGuiID id, CBool* out_hovered, CBool* out_held, ImGuiButtonFlags flags);

    // Function @ cimgui.h:3322:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igCheckboxFlags_U64Ptr(CString8U label, ulong* flags, ulong flags_value);

    // Function @ cimgui.h:3321:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igCheckboxFlags_S64Ptr(CString8U label, long* flags, long flags_value);

    // Function @ cimgui.h:3320:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSeparatorEx(ImGuiSeparatorFlags flags);

    // Function @ cimgui.h:3319:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igGetWindowResizeID(ImGuiWindow* window, int n);

    // Function @ cimgui.h:3318:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igGetWindowScrollbarID(ImGuiWindow* window, ImGuiAxis axis);

    // Function @ cimgui.h:3317:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetWindowScrollbarRect(ImRect* pOut, ImGuiWindow* window, ImGuiAxis axis);

    // Function @ cimgui.h:3316:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igImageButtonEx(ImGuiID id, ImTextureID texture_id, Vector2 size, Vector2 uv0, Vector2 uv1, Vector2 padding, Vector4 bg_col, Vector4 tint_col);

    // Function @ cimgui.h:3315:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igScrollbarEx(ImRect bb, ImGuiID id, ImGuiAxis axis, float* p_scroll_v, float avail_v, float contents_v, ImDrawFlags flags);

    // Function @ cimgui.h:3314:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igScrollbar(ImGuiAxis axis);

    // Function @ cimgui.h:3313:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igArrowButtonEx(CString8U str_id, ImGuiDir dir, Vector2 size_arg, ImGuiButtonFlags flags);

    // Function @ cimgui.h:3312:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igCollapseButton(ImGuiID id, Vector2 pos);

    // Function @ cimgui.h:3311:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igCloseButton(ImGuiID id, Vector2 pos);

    // Function @ cimgui.h:3310:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igButtonEx(CString8U label, Vector2 size_arg, ImGuiButtonFlags flags);

    // Function @ cimgui.h:3309:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTextEx(CString8U text, CString8U text_end, ImGuiTextFlags flags);

    // Function @ cimgui.h:3308:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderRectFilledWithHole(ImDrawList* draw_list, ImRect outer, ImRect inner, uint col, float rounding);

    // Function @ cimgui.h:3307:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderRectFilledRangeH(ImDrawList* draw_list, ImRect rect, uint col, float x_start_norm, float x_end_norm, float rounding);

    // Function @ cimgui.h:3306:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderArrowPointingAt(ImDrawList* draw_list, Vector2 pos, Vector2 half_sz, ImGuiDir direction, uint col);

    // Function @ cimgui.h:3305:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderMouseCursor(ImDrawList* draw_list, Vector2 pos, float scale, ImGuiMouseCursor mouse_cursor, uint col_fill, uint col_border, uint col_shadow);

    // Function @ cimgui.h:3304:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderCheckMark(ImDrawList* draw_list, Vector2 pos, uint col, float sz);

    // Function @ cimgui.h:3303:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderBullet(ImDrawList* draw_list, Vector2 pos, uint col);

    // Function @ cimgui.h:3302:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderArrow(ImDrawList* draw_list, Vector2 pos, uint col, ImGuiDir dir, float scale);

    // Function @ cimgui.h:3301:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igFindRenderedTextEnd(CString8U text, CString8U text_end);

    // Function @ cimgui.h:3300:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderNavHighlight(ImRect bb, ImGuiID id, ImGuiNavHighlightFlags flags);

    // Function @ cimgui.h:3299:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderColorRectWithAlphaCheckerboard(ImDrawList* draw_list, Vector2 p_min, Vector2 p_max, uint fill_col, float grid_step, Vector2 grid_off, float rounding, ImDrawFlags flags);

    // Function @ cimgui.h:3298:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderFrameBorder(Vector2 p_min, Vector2 p_max, float rounding);

    // Function @ cimgui.h:3297:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderFrame(Vector2 p_min, Vector2 p_max, uint fill_col, CBool border, float rounding);

    // Function @ cimgui.h:3296:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderTextEllipsis(ImDrawList* draw_list, Vector2 pos_min, Vector2 pos_max, float clip_max_x, float ellipsis_max_x, CString8U text, CString8U text_end, Vector2* text_size_if_known);

    // Function @ cimgui.h:3295:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderTextClippedEx(ImDrawList* draw_list, Vector2 pos_min, Vector2 pos_max, CString8U text, CString8U text_end, Vector2* text_size_if_known, Vector2 align, ImRect* clip_rect);

    // Function @ cimgui.h:3294:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderTextClipped(Vector2 pos_min, Vector2 pos_max, CString8U text, CString8U text_end, Vector2* text_size_if_known, Vector2 align, ImRect* clip_rect);

    // Function @ cimgui.h:3293:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderTextWrapped(Vector2 pos, CString8U text, CString8U text_end, float wrap_width);

    // Function @ cimgui.h:3292:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRenderText(Vector2 pos, CString8U text, CString8U text_end, CBool hide_text_after_hash);

    // Function @ cimgui.h:3291:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTabItemLabelAndCloseButton(ImDrawList* draw_list, ImRect bb, ImGuiTabItemFlags flags, Vector2 frame_padding, CString8U label, ImGuiID tab_id, ImGuiID close_button_id, CBool is_contents_visible, CBool* out_just_closed, CBool* out_text_clipped);

    // Function @ cimgui.h:3290:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTabItemBackground(ImDrawList* draw_list, ImRect bb, ImGuiTabItemFlags flags, uint col);

    // Function @ cimgui.h:3289:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTabItemCalcSize(Vector2* pOut, CString8U label, CBool has_close_button);

    // Function @ cimgui.h:3288:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTabItemEx(ImGuiTabBar* tab_bar, CString8U label, CBool* p_open, ImGuiTabItemFlags flags);

    // Function @ cimgui.h:3287:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTabBarProcessReorder(ImGuiTabBar* tab_bar);

    // Function @ cimgui.h:3286:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTabBarQueueReorder(ImGuiTabBar* tab_bar, ImGuiTabItem* tab, int dir);

    // Function @ cimgui.h:3285:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTabBarCloseTab(ImGuiTabBar* tab_bar, ImGuiTabItem* tab);

    // Function @ cimgui.h:3284:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTabBarRemoveTab(ImGuiTabBar* tab_bar, ImGuiID tab_id);

    // Function @ cimgui.h:3283:26 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTabItem* igTabBarFindTabByID(ImGuiTabBar* tab_bar, ImGuiID tab_id);

    // Function @ cimgui.h:3282:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginTabBarEx(ImGuiTabBar* tab_bar, ImRect bb, ImGuiTabBarFlags flags);

    // Function @ cimgui.h:3281:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTableSettings* igTableSettingsFindByID(ImGuiID id);

    // Function @ cimgui.h:3280:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTableSettings* igTableSettingsCreate(ImGuiID id, int columns_count);

    // Function @ cimgui.h:3279:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableSettingsInstallHandler(ImGuiContext* context);

    // Function @ cimgui.h:3278:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTableSettings* igTableGetBoundSettings(ImGuiTable* table);

    // Function @ cimgui.h:3277:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableResetSettings(ImGuiTable* table);

    // Function @ cimgui.h:3276:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableSaveSettings(ImGuiTable* table);

    // Function @ cimgui.h:3275:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableLoadSettings(ImGuiTable* table);

    // Function @ cimgui.h:3274:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableGcCompactSettings();

    // Function @ cimgui.h:3273:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableGcCompactTransientBuffers(ImGuiTable* table);

    // Function @ cimgui.h:3272:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableRemove(ImGuiTable* table);

    // Function @ cimgui.h:3271:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableSetColumnWidthAutoAll(ImGuiTable* table);

    // Function @ cimgui.h:3270:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableSetColumnWidthAutoSingle(ImGuiTable* table, int column_n);

    // Function @ cimgui.h:3269:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igTableGetMaxColumnWidth(ImGuiTable* table, int column_n);

    // Function @ cimgui.h:3268:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igTableGetColumnResizeID(ImGuiTable* table, int column_n, int instance_no);

    // Function @ cimgui.h:3267:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igTableGetColumnName_TablePtr(ImGuiTable* table, int column_n);

    // Function @ cimgui.h:3266:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableGetCellBgRect(ImRect* pOut, ImGuiTable* table, int column_n);

    // Function @ cimgui.h:3265:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableEndCell(ImGuiTable* table);

    // Function @ cimgui.h:3264:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableBeginCell(ImGuiTable* table, int column_n);

    // Function @ cimgui.h:3263:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableEndRow(ImGuiTable* table);

    // Function @ cimgui.h:3262:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableBeginRow(ImGuiTable* table);

    // Function @ cimgui.h:3261:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igTableGetColumnWidthAuto(ImGuiTable* table, ImGuiTableColumn* column);

    // Function @ cimgui.h:3260:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableFixColumnSortDirection(ImGuiTable* table, ImGuiTableColumn* column);

    // Function @ cimgui.h:3259:31 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiSortDirection igTableGetColumnNextSortDirection(ImGuiTableColumn* column);

    // Function @ cimgui.h:3258:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableSortSpecsBuild(ImGuiTable* table);

    // Function @ cimgui.h:3257:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableSortSpecsSanitize(ImGuiTable* table);

    // Function @ cimgui.h:3256:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableMergeDrawChannels(ImGuiTable* table);

    // Function @ cimgui.h:3255:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableDrawContextMenu(ImGuiTable* table);

    // Function @ cimgui.h:3254:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableDrawBorders(ImGuiTable* table);

    // Function @ cimgui.h:3253:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableUpdateColumnsWeightFromWidth(ImGuiTable* table);

    // Function @ cimgui.h:3252:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableUpdateBorders(ImGuiTable* table);

    // Function @ cimgui.h:3251:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableUpdateLayout(ImGuiTable* table);

    // Function @ cimgui.h:3250:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableSetupDrawChannels(ImGuiTable* table);

    // Function @ cimgui.h:3249:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableBeginApplyRequests(ImGuiTable* table);

    // Function @ cimgui.h:3248:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableBeginInitMemory(ImGuiTable* table, int columns_count);

    // Function @ cimgui.h:3247:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginTableEx(CString8U name, ImGuiID id, int columns_count, ImGuiTableFlags flags, Vector2 outer_size, float inner_width);

    // Function @ cimgui.h:3246:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTable* igTableFindByID(ImGuiID id);

    // Function @ cimgui.h:3245:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTable* igGetCurrentTable();

    // Function @ cimgui.h:3244:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTablePopBackgroundChannel();

    // Function @ cimgui.h:3243:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTablePushBackgroundChannel();

    // Function @ cimgui.h:3242:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igTableGetHeaderRowHeight();

    // Function @ cimgui.h:3241:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igTableGetHoveredColumn();

    // Function @ cimgui.h:3240:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableSetColumnSortDirection(int column_n, ImGuiSortDirection sort_direction, CBool append_to_sort_specs);

    // Function @ cimgui.h:3239:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableSetColumnWidth(int column_n, float width);

    // Function @ cimgui.h:3238:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableSetColumnEnabled(int column_n, CBool enabled);

    // Function @ cimgui.h:3237:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableOpenContextMenu(int column_n);

    // Function @ cimgui.h:3236:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetColumnNormFromOffset(ImGuiOldColumns* columns, float offset);

    // Function @ cimgui.h:3235:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetColumnOffsetFromNorm(ImGuiOldColumns* columns, float offset_norm);

    // Function @ cimgui.h:3234:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiOldColumns* igFindOrCreateColumns(ImGuiWindow* window, ImGuiID id);

    // Function @ cimgui.h:3233:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igGetColumnsID(CString8U str_id, int count);

    // Function @ cimgui.h:3232:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPopColumnsBackground();

    // Function @ cimgui.h:3231:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushColumnsBackground();

    // Function @ cimgui.h:3230:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushColumnClipRect(int column_index);

    // Function @ cimgui.h:3229:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndColumns();

    // Function @ cimgui.h:3228:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igBeginColumns(CString8U str_id, int count, ImGuiOldColumnFlags flags);

    // Function @ cimgui.h:3227:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetWindowClipRectBeforeSetChannel(ImGuiWindow* window, ImRect clip_rect);

    // Function @ cimgui.h:3226:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsDragDropPayloadBeingAccepted();

    // Function @ cimgui.h:3225:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igClearDragDrop();

    // Function @ cimgui.h:3224:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginDragDropTargetCustom(ImRect bb, ImGuiID id);

    // Function @ cimgui.h:3223:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiKeyModFlags igGetMergedKeyModFlags();

    // Function @ cimgui.h:3222:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsNavInputTest(ImGuiNavInput n, ImGuiInputReadMode rm);

    // Function @ cimgui.h:3221:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsNavInputDown(ImGuiNavInput n);

    // Function @ cimgui.h:3220:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsKeyPressedMap(ImGuiKey key, CBool repeat);

    // Function @ cimgui.h:3219:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsMouseDragPastThreshold(ImGuiMouseButton button, float lock_threshold);

    // Function @ cimgui.h:3218:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsActiveIdUsingKey(ImGuiKey key);

    // Function @ cimgui.h:3217:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsActiveIdUsingNavInput(ImGuiNavInput input);

    // Function @ cimgui.h:3216:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsActiveIdUsingNavDir(ImGuiDir dir);

    // Function @ cimgui.h:3215:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetItemUsingMouseWheel();

    // Function @ cimgui.h:3214:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igGetFocusScope();

    // Function @ cimgui.h:3213:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igGetFocusedFocusScope();

    // Function @ cimgui.h:3212:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPopFocusScope();

    // Function @ cimgui.h:3211:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushFocusScope(ImGuiID id);

    // Function @ cimgui.h:3210:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetNavID(ImGuiID id, int nav_layer, ImGuiID focus_scope_id, ImRect rect_rel);

    // Function @ cimgui.h:3209:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igActivateItem(ImGuiID id);

    // Function @ cimgui.h:3208:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igCalcTypematicRepeatAmount(float t0, float t1, float repeat_delay, float repeat_rate);

    // Function @ cimgui.h:3207:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetNavInputAmount2d(Vector2* pOut, ImGuiNavDirSourceFlags dir_sources, ImGuiInputReadMode mode, float slow_factor, float fast_factor);

    // Function @ cimgui.h:3206:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetNavInputAmount(ImGuiNavInput n, ImGuiInputReadMode mode);

    // Function @ cimgui.h:3205:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igNavMoveRequestTryWrapping(ImGuiWindow* window, ImGuiNavMoveFlags move_flags);

    // Function @ cimgui.h:3204:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igNavMoveRequestForward(ImGuiDir move_dir, ImGuiDir clip_dir, ImRect bb_rel, ImGuiNavMoveFlags move_flags);

    // Function @ cimgui.h:3203:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igNavMoveRequestCancel();

    // Function @ cimgui.h:3202:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igNavMoveRequestButNoResultYet();

    // Function @ cimgui.h:3201:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igNavInitWindow(ImGuiWindow* window, CBool force_reinit);

    // Function @ cimgui.h:3200:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igFindBestWindowPosForPopupEx(Vector2* pOut, Vector2 ref_pos, Vector2 size, ImGuiDir* last_dir, ImRect r_outer, ImRect r_avoid, ImGuiPopupPositionPolicy policy);

    // Function @ cimgui.h:3199:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igFindBestWindowPosForPopup(Vector2* pOut, ImGuiWindow* window);

    // Function @ cimgui.h:3198:25 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiWindow* igGetTopMostPopupModal();

    // Function @ cimgui.h:3197:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igBeginTooltipEx(ImGuiWindowFlags extra_flags, ImGuiTooltipFlags tooltip_flags);

    // Function @ cimgui.h:3196:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginPopupEx(ImGuiID id, ImGuiWindowFlags extra_flags);

    // Function @ cimgui.h:3195:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsPopupOpen_ID(ImGuiID id, ImGuiPopupFlags popup_flags);

    // Function @ cimgui.h:3194:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igClosePopupsOverWindow(ImGuiWindow* ref_window, CBool restore_focus_to_window_under_popup);

    // Function @ cimgui.h:3193:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igClosePopupToLevel(int remaining, CBool restore_focus_to_window_under_popup);

    // Function @ cimgui.h:3192:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igOpenPopupEx(ImGuiID id, ImGuiPopupFlags popup_flags);

    // Function @ cimgui.h:3191:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginChildEx(CString8U name, ImGuiID id, Vector2 size_arg, CBool border, ImGuiWindowFlags flags);

    // Function @ cimgui.h:3190:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLogSetNextTextDecoration(CString8U prefix, CString8U suffix);

    // Function @ cimgui.h:3189:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLogRenderedText(Vector2* ref_pos, CString8U text, CString8U text_end);

    // Function @ cimgui.h:3188:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLogToBuffer(int auto_open_depth);

    // Function @ cimgui.h:3187:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLogBegin(ImGuiLogType type, int auto_open_depth);

    // Function @ cimgui.h:3186:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igShrinkWidths(ImGuiShrinkWidthItem* items, int count, float width_excess);

    // Function @ cimgui.h:3185:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetContentRegionMaxAbs(Vector2* pOut);

    // Function @ cimgui.h:3184:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsItemToggledSelection();

    // Function @ cimgui.h:3183:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPopItemFlag();

    // Function @ cimgui.h:3182:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushItemFlag(ImGuiItemFlags option, CBool enabled);

    // Function @ cimgui.h:3181:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushMultiItemsWidths(int components, float width_full);

    // Function @ cimgui.h:3180:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igCalcWrapWidthForPos(Vector2 pos, float wrap_pos_x);

    // Function @ cimgui.h:3179:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igCalcItemSize(Vector2* pOut, Vector2 size, float default_w, float default_h);

    // Function @ cimgui.h:3178:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igFocusableItemUnregister(ImGuiWindow* window);

    // Function @ cimgui.h:3177:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igFocusableItemRegister(ImGuiWindow* window, ImGuiID id);

    // Function @ cimgui.h:3176:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetLastItemData(ImGuiWindow* window, ImGuiID item_id, ImGuiItemStatusFlags status_flags, ImRect item_rect);

    // Function @ cimgui.h:3175:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsClippedEx(ImRect bb, ImGuiID id, CBool clip_even_when_logged);

    // Function @ cimgui.h:3174:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igItemHoverable(ImRect bb, ImGuiID id);

    // Function @ cimgui.h:3173:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igItemAdd(ImRect bb, ImGuiID id, ImRect* nav_bb);

    // Function @ cimgui.h:3172:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igItemSize_Rect(ImRect bb, float text_baseline_y);

    // Function @ cimgui.h:3171:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igItemSize_Vec2(Vector2 size, float text_baseline_y);

    // Function @ cimgui.h:3170:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igGetIDWithSeed(CString8U str_id_begin, CString8U str_id_end, ImGuiID seed);

    // Function @ cimgui.h:3169:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushOverrideID(ImGuiID id);

    // Function @ cimgui.h:3168:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igMarkItemEdited(ImGuiID id);

    // Function @ cimgui.h:3167:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igKeepAliveID(ImGuiID id);

    // Function @ cimgui.h:3166:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetHoveredID(ImGuiID id);

    // Function @ cimgui.h:3165:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igGetHoveredID();

    // Function @ cimgui.h:3164:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igClearActiveID();

    // Function @ cimgui.h:3163:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetFocusID(ImGuiID id, ImGuiWindow* window);

    // Function @ cimgui.h:3162:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetActiveID(ImGuiID id, ImGuiWindow* window);

    // Function @ cimgui.h:3161:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiItemFlags igGetItemsFlags();

    // Function @ cimgui.h:3160:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igGetFocusID();

    // Function @ cimgui.h:3159:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igGetActiveID();

    // Function @ cimgui.h:3158:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiItemStatusFlags igGetItemStatusFlags();

    // Function @ cimgui.h:3157:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igGetItemID();

    // Function @ cimgui.h:3156:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igScrollToBringRectIntoView(Vector2* pOut, ImGuiWindow* window, ImRect item_rect);

    // Function @ cimgui.h:3155:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetScrollFromPosY_WindowPtr(ImGuiWindow* window, float local_y, float center_y_ratio);

    // Function @ cimgui.h:3154:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetScrollFromPosX_WindowPtr(ImGuiWindow* window, float local_x, float center_x_ratio);

    // Function @ cimgui.h:3153:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetScrollY_WindowPtr(ImGuiWindow* window, float scroll_y);

    // Function @ cimgui.h:3152:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetScrollX_WindowPtr(ImGuiWindow* window, float scroll_x);

    // Function @ cimgui.h:3151:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetNextWindowScroll(Vector2 scroll);

    // Function @ cimgui.h:3150:34 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiSettingsHandler* igFindSettingsHandler(CString8U type_name);

    // Function @ cimgui.h:3149:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiWindowSettings* igFindOrCreateWindowSettings(CString8U name);

    // Function @ cimgui.h:3148:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiWindowSettings* igFindWindowSettings(ImGuiID id);

    // Function @ cimgui.h:3147:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiWindowSettings* igCreateNewWindowSettings(CString8U name);

    // Function @ cimgui.h:3146:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igClearIniSettings();

    // Function @ cimgui.h:3145:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igMarkIniSettingsDirty_WindowPtr(ImGuiWindow* window);

    // Function @ cimgui.h:3144:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igMarkIniSettingsDirty_Nil();

    // Function @ cimgui.h:3143:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igCallContextHooks(ImGuiContext* context, ImGuiContextHookType type);

    // Function @ cimgui.h:3142:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRemoveContextHook(ImGuiContext* context, ImGuiID hook_to_remove);

    // Function @ cimgui.h:3141:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igAddContextHook(ImGuiContext* context, ImGuiContextHook* hook);

    // Function @ cimgui.h:3140:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igUpdateMouseMovingWindowEndFrame();

    // Function @ cimgui.h:3139:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igUpdateMouseMovingWindowNewFrame();

    // Function @ cimgui.h:3138:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igStartMouseMovingWindow(ImGuiWindow* window);

    // Function @ cimgui.h:3137:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igUpdateHoveredWindowAndCaptureFlags();

    // Function @ cimgui.h:3136:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igShutdown(ImGuiContext* context);

    // Function @ cimgui.h:3135:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igInitialize(ImGuiContext* context);

    // Function @ cimgui.h:3134:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImDrawList* igGetForegroundDrawList_ViewportPtr(ImGuiViewport* viewport);

    // Function @ cimgui.h:3133:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImDrawList* igGetBackgroundDrawList_ViewportPtr(ImGuiViewport* viewport);

    // Function @ cimgui.h:3132:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImDrawList* igGetForegroundDrawList_WindowPtr(ImGuiWindow* window);

    // Function @ cimgui.h:3131:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFont* igGetDefaultFont();

    // Function @ cimgui.h:3130:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetCurrentFont(ImFont* font);

    // Function @ cimgui.h:3129:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igBringWindowToDisplayBack(ImGuiWindow* window);

    // Function @ cimgui.h:3128:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igBringWindowToDisplayFront(ImGuiWindow* window);

    // Function @ cimgui.h:3127:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igBringWindowToFocusFront(ImGuiWindow* window);

    // Function @ cimgui.h:3126:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igFocusTopMostWindowUnderOne(ImGuiWindow* under_this_window, ImGuiWindow* ignore_window);

    // Function @ cimgui.h:3125:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igFocusWindow(ImGuiWindow* window);

    // Function @ cimgui.h:3124:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetWindowHitTestHole(ImGuiWindow* window, Vector2 pos, Vector2 size);

    // Function @ cimgui.h:3123:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetWindowCollapsed_WindowPtr(ImGuiWindow* window, CBool collapsed, ImGuiCond cond);

    // Function @ cimgui.h:3122:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetWindowSize_WindowPtr(ImGuiWindow* window, Vector2 size, ImGuiCond cond);

    // Function @ cimgui.h:3121:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetWindowPos_WindowPtr(ImGuiWindow* window, Vector2 pos, ImGuiCond cond);

    // Function @ cimgui.h:3120:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetWindowAllowedExtentRect(ImRect* pOut, ImGuiWindow* window);

    // Function @ cimgui.h:3119:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsWindowNavFocusable(ImGuiWindow* window);

    // Function @ cimgui.h:3118:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsWindowAbove(ImGuiWindow* potential_above, ImGuiWindow* potential_below);

    // Function @ cimgui.h:3117:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsWindowChildOf(ImGuiWindow* window, ImGuiWindow* potential_parent);

    // Function @ cimgui.h:3116:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igCalcWindowNextAutoFitSize(Vector2* pOut, ImGuiWindow* window);

    // Function @ cimgui.h:3115:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igUpdateWindowParentAndRootLinks(ImGuiWindow* window, ImGuiWindowFlags flags, ImGuiWindow* parent_window);

    // Function @ cimgui.h:3114:25 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiWindow* igFindWindowByName(CString8U name);

    // Function @ cimgui.h:3113:25 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiWindow* igFindWindowByID(ImGuiID id);

    // Function @ cimgui.h:3112:25 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiWindow* igGetCurrentWindow();

    // Function @ cimgui.h:3111:25 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiWindow* igGetCurrentWindowRead();

    // Function @ cimgui.h:3110:38 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTableColumnSettings* ImGuiTableSettings_GetColumnSettings(ImGuiTableSettings* self);

    // Function @ cimgui.h:3109:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTableSettings_destroy(ImGuiTableSettings* self);

    // Function @ cimgui.h:3108:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTableSettings* ImGuiTableSettings_ImGuiTableSettings();

    // Function @ cimgui.h:3107:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTableColumnSettings_destroy(ImGuiTableColumnSettings* self);

    // Function @ cimgui.h:3106:38 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTableColumnSettings* ImGuiTableColumnSettings_ImGuiTableColumnSettings();

    // Function @ cimgui.h:3105:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTable_destroy(ImGuiTable* self);

    // Function @ cimgui.h:3104:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTable* ImGuiTable_ImGuiTable();

    // Function @ cimgui.h:3103:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTableColumn_destroy(ImGuiTableColumn* self);

    // Function @ cimgui.h:3102:30 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTableColumn* ImGuiTableColumn_ImGuiTableColumn();

    // Function @ cimgui.h:3101:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U ImGuiTabBar_GetTabName(ImGuiTabBar* self, ImGuiTabItem* tab);

    // Function @ cimgui.h:3100:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int ImGuiTabBar_GetTabOrder(ImGuiTabBar* self, ImGuiTabItem* tab);

    // Function @ cimgui.h:3099:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTabBar_destroy(ImGuiTabBar* self);

    // Function @ cimgui.h:3098:25 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTabBar* ImGuiTabBar_ImGuiTabBar();

    // Function @ cimgui.h:3097:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTabItem_destroy(ImGuiTabItem* self);

    // Function @ cimgui.h:3096:26 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTabItem* ImGuiTabItem_ImGuiTabItem();

    // Function @ cimgui.h:3095:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiLastItemDataBackup_Restore(ImGuiLastItemDataBackup* self);

    // Function @ cimgui.h:3094:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiLastItemDataBackup_Backup(ImGuiLastItemDataBackup* self);

    // Function @ cimgui.h:3093:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiLastItemDataBackup_destroy(ImGuiLastItemDataBackup* self);

    // Function @ cimgui.h:3092:37 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiLastItemDataBackup* ImGuiLastItemDataBackup_ImGuiLastItemDataBackup();

    // Function @ cimgui.h:3091:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiWindow_MenuBarRect(ImRect* pOut, ImGuiWindow* self);

    // Function @ cimgui.h:3090:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float ImGuiWindow_MenuBarHeight(ImGuiWindow* self);

    // Function @ cimgui.h:3089:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiWindow_TitleBarRect(ImRect* pOut, ImGuiWindow* self);

    // Function @ cimgui.h:3088:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float ImGuiWindow_TitleBarHeight(ImGuiWindow* self);

    // Function @ cimgui.h:3087:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float ImGuiWindow_CalcFontSize(ImGuiWindow* self);

    // Function @ cimgui.h:3086:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiWindow_Rect(ImRect* pOut, ImGuiWindow* self);

    // Function @ cimgui.h:3085:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID ImGuiWindow_GetIDFromRectangle(ImGuiWindow* self, ImRect r_abs);

    // Function @ cimgui.h:3084:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID ImGuiWindow_GetIDNoKeepAlive_Int(ImGuiWindow* self, int n);

    // Function @ cimgui.h:3083:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID ImGuiWindow_GetIDNoKeepAlive_Ptr(ImGuiWindow* self, void* ptr);

    // Function @ cimgui.h:3082:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID ImGuiWindow_GetIDNoKeepAlive_Str(ImGuiWindow* self, CString8U str, CString8U str_end);

    // Function @ cimgui.h:3081:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID ImGuiWindow_GetID_Int(ImGuiWindow* self, int n);

    // Function @ cimgui.h:3080:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID ImGuiWindow_GetID_Ptr(ImGuiWindow* self, void* ptr);

    // Function @ cimgui.h:3079:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID ImGuiWindow_GetID_Str(ImGuiWindow* self, CString8U str, CString8U str_end);

    // Function @ cimgui.h:3078:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiWindow_destroy(ImGuiWindow* self);

    // Function @ cimgui.h:3077:25 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiWindow* ImGuiWindow_ImGuiWindow(ImGuiContext* context, CString8U name);

    // Function @ cimgui.h:3076:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiContext_destroy(ImGuiContext* self);

    // Function @ cimgui.h:3075:26 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiContext* ImGuiContext_ImGuiContext(ImFontAtlas* shared_font_atlas);

    // Function @ cimgui.h:3074:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiContextHook_destroy(ImGuiContextHook* self);

    // Function @ cimgui.h:3073:30 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiContextHook* ImGuiContextHook_ImGuiContextHook();

    // Function @ cimgui.h:3072:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiStackSizes_CompareWithCurrentState(ImGuiStackSizes* self);

    // Function @ cimgui.h:3071:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiStackSizes_SetToCurrentState(ImGuiStackSizes* self);

    // Function @ cimgui.h:3070:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiStackSizes_destroy(ImGuiStackSizes* self);

    // Function @ cimgui.h:3069:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiStackSizes* ImGuiStackSizes_ImGuiStackSizes();

    // Function @ cimgui.h:3068:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiMetricsConfig_destroy(ImGuiMetricsConfig* self);

    // Function @ cimgui.h:3067:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiMetricsConfig* ImGuiMetricsConfig_ImGuiMetricsConfig();

    // Function @ cimgui.h:3066:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiSettingsHandler_destroy(ImGuiSettingsHandler* self);

    // Function @ cimgui.h:3065:34 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiSettingsHandler* ImGuiSettingsHandler_ImGuiSettingsHandler();

    // Function @ cimgui.h:3064:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U ImGuiWindowSettings_GetName(ImGuiWindowSettings* self);

    // Function @ cimgui.h:3063:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiWindowSettings_destroy(ImGuiWindowSettings* self);

    // Function @ cimgui.h:3062:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiWindowSettings* ImGuiWindowSettings_ImGuiWindowSettings();

    // Function @ cimgui.h:3061:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiViewportP_UpdateWorkRect(ImGuiViewportP* self);

    // Function @ cimgui.h:3060:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiViewportP_GetWorkRect(ImRect* pOut, ImGuiViewportP* self);

    // Function @ cimgui.h:3059:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiViewportP_GetMainRect(ImRect* pOut, ImGuiViewportP* self);

    // Function @ cimgui.h:3058:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiViewportP_destroy(ImGuiViewportP* self);

    // Function @ cimgui.h:3057:28 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiViewportP* ImGuiViewportP_ImGuiViewportP();

    // Function @ cimgui.h:3056:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiOldColumns_destroy(ImGuiOldColumns* self);

    // Function @ cimgui.h:3055:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiOldColumns* ImGuiOldColumns_ImGuiOldColumns();

    // Function @ cimgui.h:3054:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiOldColumnData_destroy(ImGuiOldColumnData* self);

    // Function @ cimgui.h:3053:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiOldColumnData* ImGuiOldColumnData_ImGuiOldColumnData();

    // Function @ cimgui.h:3052:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiPtrOrIndex* ImGuiPtrOrIndex_ImGuiPtrOrIndex_Int(int index);

    // Function @ cimgui.h:3051:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiPtrOrIndex_destroy(ImGuiPtrOrIndex* self);

    // Function @ cimgui.h:3050:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiPtrOrIndex* ImGuiPtrOrIndex_ImGuiPtrOrIndex_Ptr(void* ptr);

    // Function @ cimgui.h:3049:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiNextItemData_ClearFlags(ImGuiNextItemData* self);

    // Function @ cimgui.h:3048:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiNextItemData_destroy(ImGuiNextItemData* self);

    // Function @ cimgui.h:3047:31 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiNextItemData* ImGuiNextItemData_ImGuiNextItemData();

    // Function @ cimgui.h:3046:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiNextWindowData_ClearFlags(ImGuiNextWindowData* self);

    // Function @ cimgui.h:3045:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiNextWindowData_destroy(ImGuiNextWindowData* self);

    // Function @ cimgui.h:3044:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiNextWindowData* ImGuiNextWindowData_ImGuiNextWindowData();

    // Function @ cimgui.h:3043:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiNavMoveResult_Clear(ImGuiNavMoveResult* self);

    // Function @ cimgui.h:3042:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiNavMoveResult_destroy(ImGuiNavMoveResult* self);

    // Function @ cimgui.h:3041:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiNavMoveResult* ImGuiNavMoveResult_ImGuiNavMoveResult();

    // Function @ cimgui.h:3040:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiPopupData_destroy(ImGuiPopupData* self);

    // Function @ cimgui.h:3039:28 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiPopupData* ImGuiPopupData_ImGuiPopupData();

    // Function @ cimgui.h:3038:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiInputTextState_SelectAll(ImGuiInputTextState* self);

    // Function @ cimgui.h:3037:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiInputTextState_ClearSelection(ImGuiInputTextState* self);

    // Function @ cimgui.h:3036:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImGuiInputTextState_HasSelection(ImGuiInputTextState* self);

    // Function @ cimgui.h:3035:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiInputTextState_CursorClamp(ImGuiInputTextState* self);

    // Function @ cimgui.h:3034:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiInputTextState_CursorAnimReset(ImGuiInputTextState* self);

    // Function @ cimgui.h:3033:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiInputTextState_OnKeyPressed(ImGuiInputTextState* self, int key);

    // Function @ cimgui.h:3032:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int ImGuiInputTextState_GetRedoAvailCount(ImGuiInputTextState* self);

    // Function @ cimgui.h:3031:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int ImGuiInputTextState_GetUndoAvailCount(ImGuiInputTextState* self);

    // Function @ cimgui.h:3030:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiInputTextState_ClearFreeMemory(ImGuiInputTextState* self);

    // Function @ cimgui.h:3029:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiInputTextState_ClearText(ImGuiInputTextState* self);

    // Function @ cimgui.h:3028:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiInputTextState_destroy(ImGuiInputTextState* self);

    // Function @ cimgui.h:3027:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiInputTextState* ImGuiInputTextState_ImGuiInputTextState();

    // Function @ cimgui.h:3026:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float ImGuiMenuColumns_CalcExtraSpace(ImGuiMenuColumns* self, float avail_w);

    // Function @ cimgui.h:3025:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float ImGuiMenuColumns_DeclColumns(ImGuiMenuColumns* self, float w0, float w1, float w2);

    // Function @ cimgui.h:3024:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiMenuColumns_Update(ImGuiMenuColumns* self, int count, float spacing, CBool clear);

    // Function @ cimgui.h:3023:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiMenuColumns_destroy(ImGuiMenuColumns* self);

    // Function @ cimgui.h:3022:30 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiMenuColumns* ImGuiMenuColumns_ImGuiMenuColumns();

    // Function @ cimgui.h:3021:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiStyleMod* ImGuiStyleMod_ImGuiStyleMod_Vec2(ImGuiStyleVar idx, Vector2 v);

    // Function @ cimgui.h:3020:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiStyleMod* ImGuiStyleMod_ImGuiStyleMod_Float(ImGuiStyleVar idx, float v);

    // Function @ cimgui.h:3019:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiStyleMod_destroy(ImGuiStyleMod* self);

    // Function @ cimgui.h:3018:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiStyleMod* ImGuiStyleMod_ImGuiStyleMod_Int(ImGuiStyleVar idx, int v);

    // Function @ cimgui.h:3017:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawDataBuilder_FlattenIntoSingleLayer(ImDrawDataBuilder* self);

    // Function @ cimgui.h:3016:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int ImDrawDataBuilder_GetDrawListCount(ImDrawDataBuilder* self);

    // Function @ cimgui.h:3015:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawDataBuilder_ClearFreeMemory(ImDrawDataBuilder* self);

    // Function @ cimgui.h:3014:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawDataBuilder_Clear(ImDrawDataBuilder* self);

    // Function @ cimgui.h:3013:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawListSharedData_SetCircleTessellationMaxError(ImDrawListSharedData* self, float max_error);

    // Function @ cimgui.h:3012:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawListSharedData_destroy(ImDrawListSharedData* self);

    // Function @ cimgui.h:3011:34 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImDrawListSharedData* ImDrawListSharedData_ImDrawListSharedData();

    // Function @ cimgui.h:3010:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImBitVector_ClearBit(ImBitVector* self, int n);

    // Function @ cimgui.h:3009:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImBitVector_SetBit(ImBitVector* self, int n);

    // Function @ cimgui.h:3008:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImBitVector_TestBit(ImBitVector* self, int n);

    // Function @ cimgui.h:3007:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImBitVector_Clear(ImBitVector* self);

    // Function @ cimgui.h:3006:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImBitVector_Create(ImBitVector* self, int sz);

    // Function @ cimgui.h:3005:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImBitArraySetBitRange(uint* arr, int n, int n2);

    // Function @ cimgui.h:3004:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImBitArraySetBit(uint* arr, int n);

    // Function @ cimgui.h:3003:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImBitArrayClearBit(uint* arr, int n);

    // Function @ cimgui.h:3002:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igImBitArrayTestBit(uint* arr, int n);

    // Function @ cimgui.h:3001:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_ToVec4(Vector4* pOut, ImRect* self);

    // Function @ cimgui.h:3000:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImRect_IsInverted(ImRect* self);

    // Function @ cimgui.h:2999:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_Floor(ImRect* self);

    // Function @ cimgui.h:2998:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_ClipWithFull(ImRect* self, ImRect r);

    // Function @ cimgui.h:2997:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_ClipWith(ImRect* self, ImRect r);

    // Function @ cimgui.h:2996:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_TranslateY(ImRect* self, float dy);

    // Function @ cimgui.h:2995:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_TranslateX(ImRect* self, float dx);

    // Function @ cimgui.h:2994:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_Translate(ImRect* self, Vector2 d);

    // Function @ cimgui.h:2993:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_Expand_Vec2(ImRect* self, Vector2 amount);

    // Function @ cimgui.h:2992:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_Expand_Float(ImRect* self, float amount);

    // Function @ cimgui.h:2991:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_Add_Rect(ImRect* self, ImRect r);

    // Function @ cimgui.h:2990:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_Add_Vec2(ImRect* self, Vector2 p);

    // Function @ cimgui.h:2989:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImRect_Overlaps(ImRect* self, ImRect r);

    // Function @ cimgui.h:2988:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImRect_Contains_Rect(ImRect* self, ImRect r);

    // Function @ cimgui.h:2987:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImRect_Contains_Vec2(ImRect* self, Vector2 p);

    // Function @ cimgui.h:2986:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_GetBR(Vector2* pOut, ImRect* self);

    // Function @ cimgui.h:2985:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_GetBL(Vector2* pOut, ImRect* self);

    // Function @ cimgui.h:2984:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_GetTR(Vector2* pOut, ImRect* self);

    // Function @ cimgui.h:2983:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_GetTL(Vector2* pOut, ImRect* self);

    // Function @ cimgui.h:2982:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float ImRect_GetArea(ImRect* self);

    // Function @ cimgui.h:2981:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float ImRect_GetHeight(ImRect* self);

    // Function @ cimgui.h:2980:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float ImRect_GetWidth(ImRect* self);

    // Function @ cimgui.h:2979:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_GetSize(Vector2* pOut, ImRect* self);

    // Function @ cimgui.h:2978:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_GetCenter(Vector2* pOut, ImRect* self);

    // Function @ cimgui.h:2977:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImRect* ImRect_ImRect_Float(float x1, float y1, float x2, float y2);

    // Function @ cimgui.h:2976:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImRect* ImRect_ImRect_Vec4(Vector4 v);

    // Function @ cimgui.h:2975:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImRect* ImRect_ImRect_Vec2(Vector2 min, Vector2 max);

    // Function @ cimgui.h:2974:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImRect_destroy(ImRect* self);

    // Function @ cimgui.h:2973:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImRect* ImRect_ImRect_Nil();

    // Function @ cimgui.h:2972:22 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImVec2ih* ImVec2ih_ImVec2ih_Vec2(Vector2 rhs);

    // Function @ cimgui.h:2971:22 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImVec2ih* ImVec2ih_ImVec2ih_short(short _x, short _y);

    // Function @ cimgui.h:2970:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImVec2ih_destroy(ImVec2ih* self);

    // Function @ cimgui.h:2969:22 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImVec2ih* ImVec2ih_ImVec2ih_Nil();

    // Function @ cimgui.h:2968:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float* ImVec1_ImVec1_Float(float _x);

    // Function @ cimgui.h:2967:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImVec1_destroy(float* self);

    // Function @ cimgui.h:2966:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float* ImVec1_ImVec1_Nil();

    // Function @ cimgui.h:2965:21 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiDir igImGetDirQuadrantFromDelta(float dx, float dy);

    // Function @ cimgui.h:2964:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igImTriangleArea(Vector2 a, Vector2 b, Vector2 c);

    // Function @ cimgui.h:2963:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImTriangleBarycentricCoords(Vector2 a, Vector2 b, Vector2 c, Vector2 p, float* out_u, float* out_v, float* out_w);

    // Function @ cimgui.h:2962:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImTriangleClosestPoint(Vector2* pOut, Vector2 a, Vector2 b, Vector2 c, Vector2 p);

    // Function @ cimgui.h:2961:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igImTriangleContainsPoint(Vector2 a, Vector2 b, Vector2 c, Vector2 p);

    // Function @ cimgui.h:2960:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImLineClosestPoint(Vector2* pOut, Vector2 a, Vector2 b, Vector2 p);

    // Function @ cimgui.h:2959:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImBezierQuadraticCalc(Vector2* pOut, Vector2 p1, Vector2 p2, Vector2 p3, float t);

    // Function @ cimgui.h:2958:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImBezierCubicClosestPointCasteljau(Vector2* pOut, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, Vector2 p, float tess_tol);

    // Function @ cimgui.h:2957:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImBezierCubicClosestPoint(Vector2* pOut, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, Vector2 p, int num_segments);

    // Function @ cimgui.h:2956:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImBezierCubicCalc(Vector2* pOut, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, float t);

    // Function @ cimgui.h:2955:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImMul(Vector2* pOut, Vector2 lhs, Vector2 rhs);

    // Function @ cimgui.h:2954:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igImLinearSweep(float current, float target, float speed);

    // Function @ cimgui.h:2953:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImRotate(Vector2* pOut, Vector2 v, float cos_a, float sin_a);

    // Function @ cimgui.h:2952:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igImDot(Vector2 a, Vector2 b);

    // Function @ cimgui.h:2951:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igImModPositive(int a, int b);

    // Function @ cimgui.h:2950:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImFloor_Vec2(Vector2* pOut, Vector2 v);

    // Function @ cimgui.h:2949:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igImFloor_Float(float f);

    // Function @ cimgui.h:2948:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igImInvLength(Vector2 lhs, float fail_value);

    // Function @ cimgui.h:2947:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igImLengthSqr_Vec4(Vector4 lhs);

    // Function @ cimgui.h:2946:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igImLengthSqr_Vec2(Vector2 lhs);

    // Function @ cimgui.h:2945:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igImSaturate(float f);

    // Function @ cimgui.h:2944:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImLerp_Vec4(Vector4* pOut, Vector4 a, Vector4 b, float t);

    // Function @ cimgui.h:2943:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImLerp_Vec2Vec2(Vector2* pOut, Vector2 a, Vector2 b, Vector2 t);

    // Function @ cimgui.h:2942:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImLerp_Vec2Float(Vector2* pOut, Vector2 a, Vector2 b, float t);

    // Function @ cimgui.h:2941:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImClamp(Vector2* pOut, Vector2 v, Vector2 mn, Vector2 mx);

    // Function @ cimgui.h:2940:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImMax(Vector2* pOut, Vector2 lhs, Vector2 rhs);

    // Function @ cimgui.h:2939:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImMin(Vector2* pOut, Vector2 lhs, Vector2 rhs);

    // Function @ cimgui.h:2938:19 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern double igImSign_double(double x);

    // Function @ cimgui.h:2937:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igImSign_Float(float x);

    // Function @ cimgui.h:2936:19 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern double igImAbs_double(double x);

    // Function @ cimgui.h:2935:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igImAbs_Float(float x);

    // Function @ cimgui.h:2934:19 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern double igImLog_double(double x);

    // Function @ cimgui.h:2933:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igImLog_Float(float x);

    // Function @ cimgui.h:2932:19 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern double igImPow_double(double x, double y);

    // Function @ cimgui.h:2931:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igImPow_Float(float x, float y);

    // Function @ cimgui.h:2930:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void* igImFileLoadToMemory(CString8U filename, CString8U mode, ulong* out_file_size, int padding_bytes);

    // Function @ cimgui.h:2929:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ulong igImFileWrite(void* data, ulong size, ulong count, ImFileHandle file);

    // Function @ cimgui.h:2928:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ulong igImFileRead(void* data, ulong size, ulong count, ImFileHandle file);

    // Function @ cimgui.h:2927:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ulong igImFileGetSize(ImFileHandle file);

    // Function @ cimgui.h:2926:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igImFileClose(ImFileHandle file);

    // Function @ cimgui.h:2925:25 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFileHandle igImFileOpen(CString8U filename, CString8U mode);

    // Function @ cimgui.h:2924:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igImTextCountUtf8BytesFromStr(char* in_text, char* in_text_end);

    // Function @ cimgui.h:2923:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igImTextCountUtf8BytesFromChar(CString8U in_text, CString8U in_text_end);

    // Function @ cimgui.h:2922:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igImTextCountCharsFromUtf8(CString8U in_text, CString8U in_text_end);

    // Function @ cimgui.h:2921:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igImTextStrFromUtf8(char* buf, int buf_size, CString8U in_text, CString8U in_text_end, CString8U* in_remaining);

    // Function @ cimgui.h:2920:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igImTextCharFromUtf8(ulong* out_char, CString8U in_text, CString8U in_text_end);

    // Function @ cimgui.h:2919:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igImTextStrToUtf8(CString8U buf, int buf_size, char* in_text, char* in_text_end);

    // Function @ cimgui.h:2918:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igImCharIsBlankW(uint c);

    // Function @ cimgui.h:2917:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igImCharIsBlankA(byte c);

    // Function @ cimgui.h:2916:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igImParseFormatPrecision(CString8U format, int default_value);

    // Function @ cimgui.h:2915:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igImParseFormatTrimDecorations(CString8U format, CString8U buf, ulong buf_size);

    // Function @ cimgui.h:2914:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igImParseFormatFindEnd(CString8U format);

    // Function @ cimgui.h:2913:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igImParseFormatFindStart(CString8U format);

    // Function @ cimgui.h:2912:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igImFormatStringV(CString8U buf, ulong buf_size, CString8U fmt, IntPtr args);

    // Function @ cimgui.h:2911:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igImFormatString(CString8U buf, ulong buf_size, CString8U fmt);

    // Function @ cimgui.h:2910:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igImStrSkipBlank(CString8U str);

    // Function @ cimgui.h:2909:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImStrTrimBlanks(CString8U str);

    // Function @ cimgui.h:2908:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igImStristr(CString8U haystack, CString8U haystack_end, CString8U needle, CString8U needle_end);

    // Function @ cimgui.h:2907:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern char* igImStrbolW(char* buf_mid_line, char* buf_begin);

    // Function @ cimgui.h:2906:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igImStreolRange(CString8U str, CString8U str_end);

    // Function @ cimgui.h:2905:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igImStrlenW(char* str);

    // Function @ cimgui.h:2904:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igImStrchrRange(CString8U str_begin, CString8U str_end, byte c);

    // Function @ cimgui.h:2903:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igImStrdupcpy(CString8U dst, ulong* p_dst_size, CString8U str);

    // Function @ cimgui.h:2902:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igImStrdup(CString8U str);

    // Function @ cimgui.h:2901:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImStrncpy(CString8U dst, CString8U src, ulong count);

    // Function @ cimgui.h:2900:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igImStrnicmp(CString8U str1, CString8U str2, ulong count);

    // Function @ cimgui.h:2899:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igImStricmp(CString8U str1, CString8U str2);

    // Function @ cimgui.h:2898:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igImUpperPowerOfTwo(int v);

    // Function @ cimgui.h:2897:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igImIsPowerOfTwo_U64(ulong v);

    // Function @ cimgui.h:2896:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igImIsPowerOfTwo_Int(int v);

    // Function @ cimgui.h:2895:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern uint igImAlphaBlendColors(uint col_a, uint col_b);

    // Function @ cimgui.h:2894:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igImHashStr(CString8U data, ulong data_size, uint seed);

    // Function @ cimgui.h:2893:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igImHashData(void* data, ulong data_size, uint seed);

    // Function @ cimgui.h:2892:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiViewport_GetWorkCenter(Vector2* pOut, ImGuiViewport* self);

    // Function @ cimgui.h:2891:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiViewport_GetCenter(Vector2* pOut, ImGuiViewport* self);

    // Function @ cimgui.h:2890:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiViewport_destroy(ImGuiViewport* self);

    // Function @ cimgui.h:2889:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiViewport* ImGuiViewport_ImGuiViewport();

    // Function @ cimgui.h:2888:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImFont_IsGlyphRangeUnused(ImFont* self, uint c_begin, uint c_last);

    // Function @ cimgui.h:2887:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFont_SetFallbackChar(ImFont* self, char c);

    // Function @ cimgui.h:2886:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFont_SetGlyphVisible(ImFont* self, char c, CBool visible);

    // Function @ cimgui.h:2885:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFont_AddRemapChar(ImFont* self, char dst, char src, CBool overwrite_dst);

    // Function @ cimgui.h:2884:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFont_AddGlyph(ImFont* self, ImFontConfig* src_cfg, char c, float x0, float y0, float x1, float y1, float u0, float v0, float u1, float v1, float advance_x);

    // Function @ cimgui.h:2883:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFont_GrowIndex(ImFont* self, int new_size);

    // Function @ cimgui.h:2882:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFont_ClearOutputData(ImFont* self);

    // Function @ cimgui.h:2881:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFont_BuildLookupTable(ImFont* self);

    // Function @ cimgui.h:2880:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFont_RenderText(ImFont* self, ImDrawList* draw_list, float size, Vector2 pos, uint col, Vector4 clip_rect, CString8U text_begin, CString8U text_end, float wrap_width, CBool cpu_fine_clip);

    // Function @ cimgui.h:2879:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFont_RenderChar(ImFont* self, ImDrawList* draw_list, float size, Vector2 pos, uint col, char c);

    // Function @ cimgui.h:2878:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U ImFont_CalcWordWrapPositionA(ImFont* self, float scale, CString8U text, CString8U text_end, float wrap_width);

    // Function @ cimgui.h:2877:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFont_CalcTextSizeA(Vector2* pOut, ImFont* self, float size, float max_width, float wrap_width, CString8U text_begin, CString8U text_end, CString8U* remaining);

    // Function @ cimgui.h:2876:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U ImFont_GetDebugName(ImFont* self);

    // Function @ cimgui.h:2875:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImFont_IsLoaded(ImFont* self);

    // Function @ cimgui.h:2874:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float ImFont_GetCharAdvance(ImFont* self, char c);

    // Function @ cimgui.h:2873:31 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFontGlyph* ImFont_FindGlyphNoFallback(ImFont* self, char c);

    // Function @ cimgui.h:2872:31 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFontGlyph* ImFont_FindGlyph(ImFont* self, char c);

    // Function @ cimgui.h:2871:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFont_destroy(ImFont* self);

    // Function @ cimgui.h:2870:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFont* ImFont_ImFont();

    // Function @ cimgui.h:2869:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImFontAtlas_GetMouseCursorTexData(ImFontAtlas* self, ImGuiMouseCursor cursor, Vector2* out_offset, Vector2* out_size, Vector2* out_uv_border, Vector2* out_uv_fill);

    // Function @ cimgui.h:2868:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontAtlas_CalcCustomRectUV(ImFontAtlas* self, ImFontAtlasCustomRect* rect, Vector2* out_uv_min, Vector2* out_uv_max);

    // Function @ cimgui.h:2867:35 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFontAtlasCustomRect* ImFontAtlas_GetCustomRectByIndex(ImFontAtlas* self, int index);

    // Function @ cimgui.h:2866:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int ImFontAtlas_AddCustomRectFontGlyph(ImFontAtlas* self, ImFont* font, char id, int width, int height, float advance_x, Vector2 offset);

    // Function @ cimgui.h:2865:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int ImFontAtlas_AddCustomRectRegular(ImFontAtlas* self, int width, int height);

    // Function @ cimgui.h:2864:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern char* ImFontAtlas_GetGlyphRangesVietnamese(ImFontAtlas* self);

    // Function @ cimgui.h:2863:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern char* ImFontAtlas_GetGlyphRangesThai(ImFontAtlas* self);

    // Function @ cimgui.h:2862:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern char* ImFontAtlas_GetGlyphRangesCyrillic(ImFontAtlas* self);

    // Function @ cimgui.h:2861:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern char* ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon(ImFontAtlas* self);

    // Function @ cimgui.h:2860:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern char* ImFontAtlas_GetGlyphRangesChineseFull(ImFontAtlas* self);

    // Function @ cimgui.h:2859:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern char* ImFontAtlas_GetGlyphRangesJapanese(ImFontAtlas* self);

    // Function @ cimgui.h:2858:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern char* ImFontAtlas_GetGlyphRangesKorean(ImFontAtlas* self);

    // Function @ cimgui.h:2857:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern char* ImFontAtlas_GetGlyphRangesDefault(ImFontAtlas* self);

    // Function @ cimgui.h:2856:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontAtlas_SetTexID(ImFontAtlas* self, ImTextureID id);

    // Function @ cimgui.h:2855:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImFontAtlas_IsBuilt(ImFontAtlas* self);

    // Function @ cimgui.h:2854:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontAtlas_GetTexDataAsRGBA32(ImFontAtlas* self, ulong** out_pixels, long* out_width, long* out_height, long* out_bytes_per_pixel);

    // Function @ cimgui.h:2853:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontAtlas_GetTexDataAsAlpha8(ImFontAtlas* self, ulong** out_pixels, long* out_width, long* out_height, long* out_bytes_per_pixel);

    // Function @ cimgui.h:2852:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImFontAtlas_Build(ImFontAtlas* self);

    // Function @ cimgui.h:2851:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontAtlas_Clear(ImFontAtlas* self);

    // Function @ cimgui.h:2850:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontAtlas_ClearFonts(ImFontAtlas* self);

    // Function @ cimgui.h:2849:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontAtlas_ClearTexData(ImFontAtlas* self);

    // Function @ cimgui.h:2848:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontAtlas_ClearInputData(ImFontAtlas* self);

    // Function @ cimgui.h:2847:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFont* ImFontAtlas_AddFontFromMemoryCompressedBase85TTF(ImFontAtlas* self, CString8U compressed_font_data_base85, float size_pixels, ImFontConfig* font_cfg, char* glyph_ranges);

    // Function @ cimgui.h:2846:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFont* ImFontAtlas_AddFontFromMemoryCompressedTTF(ImFontAtlas* self, void* compressed_font_data, int compressed_font_size, float size_pixels, ImFontConfig* font_cfg, char* glyph_ranges);

    // Function @ cimgui.h:2845:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFont* ImFontAtlas_AddFontFromMemoryTTF(ImFontAtlas* self, void* font_data, int font_size, float size_pixels, ImFontConfig* font_cfg, char* glyph_ranges);

    // Function @ cimgui.h:2844:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFont* ImFontAtlas_AddFontFromFileTTF(ImFontAtlas* self, CString8U filename, float size_pixels, ImFontConfig* font_cfg, char* glyph_ranges);

    // Function @ cimgui.h:2843:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFont* ImFontAtlas_AddFontDefault(ImFontAtlas* self, ImFontConfig* font_cfg);

    // Function @ cimgui.h:2842:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFont* ImFontAtlas_AddFont(ImFontAtlas* self, ImFontConfig* font_cfg);

    // Function @ cimgui.h:2841:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontAtlas_destroy(ImFontAtlas* self);

    // Function @ cimgui.h:2840:25 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFontAtlas* ImFontAtlas_ImFontAtlas();

    // Function @ cimgui.h:2839:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImFontAtlasCustomRect_IsPacked(ImFontAtlasCustomRect* self);

    // Function @ cimgui.h:2838:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontAtlasCustomRect_destroy(ImFontAtlasCustomRect* self);

    // Function @ cimgui.h:2837:35 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFontAtlasCustomRect* ImFontAtlasCustomRect_ImFontAtlasCustomRect();

    // Function @ cimgui.h:2836:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontGlyphRangesBuilder_BuildRanges(ImFontGlyphRangesBuilder* self, ImVector_ImWchar* out_ranges);

    // Function @ cimgui.h:2835:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontGlyphRangesBuilder_AddRanges(ImFontGlyphRangesBuilder* self, char* ranges);

    // Function @ cimgui.h:2834:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontGlyphRangesBuilder_AddText(ImFontGlyphRangesBuilder* self, CString8U text, CString8U text_end);

    // Function @ cimgui.h:2833:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontGlyphRangesBuilder_AddChar(ImFontGlyphRangesBuilder* self, char c);

    // Function @ cimgui.h:2832:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontGlyphRangesBuilder_SetBit(ImFontGlyphRangesBuilder* self, ulong n);

    // Function @ cimgui.h:2831:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImFontGlyphRangesBuilder_GetBit(ImFontGlyphRangesBuilder* self, ulong n);

    // Function @ cimgui.h:2830:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontGlyphRangesBuilder_Clear(ImFontGlyphRangesBuilder* self);

    // Function @ cimgui.h:2829:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontGlyphRangesBuilder_destroy(ImFontGlyphRangesBuilder* self);

    // Function @ cimgui.h:2828:38 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFontGlyphRangesBuilder* ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder();

    // Function @ cimgui.h:2827:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImFontConfig_destroy(ImFontConfig* self);

    // Function @ cimgui.h:2826:26 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFontConfig* ImFontConfig_ImFontConfig();

    // Function @ cimgui.h:2825:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawData_ScaleClipRects(ImDrawData* self, Vector2 fb_scale);

    // Function @ cimgui.h:2824:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawData_DeIndexAllBuffers(ImDrawData* self);

    // Function @ cimgui.h:2823:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawData_Clear(ImDrawData* self);

    // Function @ cimgui.h:2822:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawData_destroy(ImDrawData* self);

    // Function @ cimgui.h:2821:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImDrawData* ImDrawData_ImDrawData();

    // Function @ cimgui.h:2820:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList__PathArcToN(ImDrawList* self, Vector2 center, float radius, float a_min, float a_max, int num_segments);

    // Function @ cimgui.h:2819:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList__PathArcToFastEx(ImDrawList* self, Vector2 center, float radius, int a_min_sample, int a_max_sample, int a_step);

    // Function @ cimgui.h:2818:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int ImDrawList__CalcCircleAutoSegmentCount(ImDrawList* self, float radius);

    // Function @ cimgui.h:2817:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList__OnChangedVtxOffset(ImDrawList* self);

    // Function @ cimgui.h:2816:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList__OnChangedTextureID(ImDrawList* self);

    // Function @ cimgui.h:2815:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList__OnChangedClipRect(ImDrawList* self);

    // Function @ cimgui.h:2814:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList__PopUnusedDrawCmd(ImDrawList* self);

    // Function @ cimgui.h:2813:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList__ClearFreeMemory(ImDrawList* self);

    // Function @ cimgui.h:2812:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList__ResetForNewFrame(ImDrawList* self);

    // Function @ cimgui.h:2811:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PrimVtx(ImDrawList* self, Vector2 pos, Vector2 uv, uint col);

    // Function @ cimgui.h:2810:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PrimWriteIdx(ImDrawList* self, ImDrawIdx idx);

    // Function @ cimgui.h:2809:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PrimWriteVtx(ImDrawList* self, Vector2 pos, Vector2 uv, uint col);

    // Function @ cimgui.h:2808:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PrimQuadUV(ImDrawList* self, Vector2 a, Vector2 b, Vector2 c, Vector2 d, Vector2 uv_a, Vector2 uv_b, Vector2 uv_c, Vector2 uv_d, uint col);

    // Function @ cimgui.h:2807:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PrimRectUV(ImDrawList* self, Vector2 a, Vector2 b, Vector2 uv_a, Vector2 uv_b, uint col);

    // Function @ cimgui.h:2806:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PrimRect(ImDrawList* self, Vector2 a, Vector2 b, uint col);

    // Function @ cimgui.h:2805:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PrimUnreserve(ImDrawList* self, int idx_count, int vtx_count);

    // Function @ cimgui.h:2804:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PrimReserve(ImDrawList* self, int idx_count, int vtx_count);

    // Function @ cimgui.h:2803:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_ChannelsSetCurrent(ImDrawList* self, int n);

    // Function @ cimgui.h:2802:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_ChannelsMerge(ImDrawList* self);

    // Function @ cimgui.h:2801:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_ChannelsSplit(ImDrawList* self, int count);

    // Function @ cimgui.h:2800:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImDrawList* ImDrawList_CloneOutput(ImDrawList* self);

    // Function @ cimgui.h:2799:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddDrawCmd(ImDrawList* self);

    // Function @ cimgui.h:2798:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddCallback(ImDrawList* self, ImDrawCallback callback, void* callback_data);

    // Function @ cimgui.h:2797:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PathRect(ImDrawList* self, Vector2 rect_min, Vector2 rect_max, float rounding, ImDrawFlags flags);

    // Function @ cimgui.h:2796:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PathBezierQuadraticCurveTo(ImDrawList* self, Vector2 p2, Vector2 p3, int num_segments);

    // Function @ cimgui.h:2795:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PathBezierCubicCurveTo(ImDrawList* self, Vector2 p2, Vector2 p3, Vector2 p4, int num_segments);

    // Function @ cimgui.h:2794:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PathArcToFast(ImDrawList* self, Vector2 center, float radius, int a_min_of_12, int a_max_of_12);

    // Function @ cimgui.h:2793:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PathArcTo(ImDrawList* self, Vector2 center, float radius, float a_min, float a_max, int num_segments);

    // Function @ cimgui.h:2792:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PathStroke(ImDrawList* self, uint col, ImDrawFlags flags, float thickness);

    // Function @ cimgui.h:2791:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PathFillConvex(ImDrawList* self, uint col);

    // Function @ cimgui.h:2790:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PathLineToMergeDuplicate(ImDrawList* self, Vector2 pos);

    // Function @ cimgui.h:2789:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PathLineTo(ImDrawList* self, Vector2 pos);

    // Function @ cimgui.h:2788:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PathClear(ImDrawList* self);

    // Function @ cimgui.h:2787:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddImageRounded(ImDrawList* self, ImTextureID user_texture_id, Vector2 p_min, Vector2 p_max, Vector2 uv_min, Vector2 uv_max, uint col, float rounding, ImDrawFlags flags);

    // Function @ cimgui.h:2786:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddImageQuad(ImDrawList* self, ImTextureID user_texture_id, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, Vector2 uv1, Vector2 uv2, Vector2 uv3, Vector2 uv4, uint col);

    // Function @ cimgui.h:2785:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddImage(ImDrawList* self, ImTextureID user_texture_id, Vector2 p_min, Vector2 p_max, Vector2 uv_min, Vector2 uv_max, uint col);

    // Function @ cimgui.h:2784:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddBezierQuadratic(ImDrawList* self, Vector2 p1, Vector2 p2, Vector2 p3, uint col, float thickness, int num_segments);

    // Function @ cimgui.h:2783:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddBezierCubic(ImDrawList* self, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, uint col, float thickness, int num_segments);

    // Function @ cimgui.h:2782:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddConvexPolyFilled(ImDrawList* self, Vector2* points, int num_points, uint col);

    // Function @ cimgui.h:2781:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddPolyline(ImDrawList* self, Vector2* points, int num_points, uint col, ImDrawFlags flags, float thickness);

    // Function @ cimgui.h:2780:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddText_FontPtr(ImDrawList* self, ImFont* font, float font_size, Vector2 pos, uint col, CString8U text_begin, CString8U text_end, float wrap_width, Vector4* cpu_fine_clip_rect);

    // Function @ cimgui.h:2779:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddText_Vec2(ImDrawList* self, Vector2 pos, uint col, CString8U text_begin, CString8U text_end);

    // Function @ cimgui.h:2778:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddNgonFilled(ImDrawList* self, Vector2 center, float radius, uint col, int num_segments);

    // Function @ cimgui.h:2777:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddNgon(ImDrawList* self, Vector2 center, float radius, uint col, int num_segments, float thickness);

    // Function @ cimgui.h:2776:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddCircleFilled(ImDrawList* self, Vector2 center, float radius, uint col, int num_segments);

    // Function @ cimgui.h:2775:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddCircle(ImDrawList* self, Vector2 center, float radius, uint col, int num_segments, float thickness);

    // Function @ cimgui.h:2774:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddTriangleFilled(ImDrawList* self, Vector2 p1, Vector2 p2, Vector2 p3, uint col);

    // Function @ cimgui.h:2773:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddTriangle(ImDrawList* self, Vector2 p1, Vector2 p2, Vector2 p3, uint col, float thickness);

    // Function @ cimgui.h:2772:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddQuadFilled(ImDrawList* self, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, uint col);

    // Function @ cimgui.h:2771:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddQuad(ImDrawList* self, Vector2 p1, Vector2 p2, Vector2 p3, Vector2 p4, uint col, float thickness);

    // Function @ cimgui.h:2770:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddRectFilledMultiColor(ImDrawList* self, Vector2 p_min, Vector2 p_max, uint col_upr_left, uint col_upr_right, uint col_bot_right, uint col_bot_left);

    // Function @ cimgui.h:2769:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddRectFilled(ImDrawList* self, Vector2 p_min, Vector2 p_max, uint col, float rounding, ImDrawFlags flags);

    // Function @ cimgui.h:2768:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddRect(ImDrawList* self, Vector2 p_min, Vector2 p_max, uint col, float rounding, ImDrawFlags flags, float thickness);

    // Function @ cimgui.h:2767:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_AddLine(ImDrawList* self, Vector2 p1, Vector2 p2, uint col, float thickness);

    // Function @ cimgui.h:2766:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_GetClipRectMax(Vector2* pOut, ImDrawList* self);

    // Function @ cimgui.h:2765:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_GetClipRectMin(Vector2* pOut, ImDrawList* self);

    // Function @ cimgui.h:2764:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PopTextureID(ImDrawList* self);

    // Function @ cimgui.h:2763:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PushTextureID(ImDrawList* self, ImTextureID texture_id);

    // Function @ cimgui.h:2762:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PopClipRect(ImDrawList* self);

    // Function @ cimgui.h:2761:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PushClipRectFullScreen(ImDrawList* self);

    // Function @ cimgui.h:2760:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_PushClipRect(ImDrawList* self, Vector2 clip_rect_min, Vector2 clip_rect_max, CBool intersect_with_current_clip_rect);

    // Function @ cimgui.h:2759:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawList_destroy(ImDrawList* self);

    // Function @ cimgui.h:2758:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImDrawList* ImDrawList_ImDrawList(ImDrawListSharedData* shared_data);

    // Function @ cimgui.h:2757:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawListSplitter_SetCurrentChannel(ImDrawListSplitter* self, ImDrawList* draw_list, int channel_idx);

    // Function @ cimgui.h:2756:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawListSplitter_Merge(ImDrawListSplitter* self, ImDrawList* draw_list);

    // Function @ cimgui.h:2755:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawListSplitter_Split(ImDrawListSplitter* self, ImDrawList* draw_list, int count);

    // Function @ cimgui.h:2754:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawListSplitter_ClearFreeMemory(ImDrawListSplitter* self);

    // Function @ cimgui.h:2753:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawListSplitter_Clear(ImDrawListSplitter* self);

    // Function @ cimgui.h:2752:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawListSplitter_destroy(ImDrawListSplitter* self);

    // Function @ cimgui.h:2751:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImDrawListSplitter* ImDrawListSplitter_ImDrawListSplitter();

    // Function @ cimgui.h:2750:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImDrawCmd_destroy(ImDrawCmd* self);

    // Function @ cimgui.h:2749:23 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImDrawCmd* ImDrawCmd_ImDrawCmd();

    // Function @ cimgui.h:2748:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImColor_HSV(ImColor* pOut, float h, float s, float v, float a);

    // Function @ cimgui.h:2747:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImColor_SetHSV(ImColor* self, float h, float s, float v, float a);

    // Function @ cimgui.h:2746:21 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImColor* ImColor_ImColor_Vec4(Vector4 col);

    // Function @ cimgui.h:2745:21 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImColor* ImColor_ImColor_Float(float r, float g, float b, float a);

    // Function @ cimgui.h:2744:21 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImColor* ImColor_ImColor_U32(uint rgba);

    // Function @ cimgui.h:2743:21 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImColor* ImColor_ImColor_Int(int r, int g, int b, int a);

    // Function @ cimgui.h:2742:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImColor_destroy(ImColor* self);

    // Function @ cimgui.h:2741:21 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImColor* ImColor_ImColor_Nil();

    // Function @ cimgui.h:2740:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImGuiListClipper_Step(ImGuiListClipper* self);

    // Function @ cimgui.h:2739:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiListClipper_End(ImGuiListClipper* self);

    // Function @ cimgui.h:2738:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiListClipper_Begin(ImGuiListClipper* self, int items_count, float items_height);

    // Function @ cimgui.h:2737:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiListClipper_destroy(ImGuiListClipper* self);

    // Function @ cimgui.h:2736:30 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiListClipper* ImGuiListClipper_ImGuiListClipper();

    // Function @ cimgui.h:2735:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiStorage_BuildSortByKey(ImGuiStorage* self);

    // Function @ cimgui.h:2734:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiStorage_SetAllInt(ImGuiStorage* self, int val);

    // Function @ cimgui.h:2733:19 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void** ImGuiStorage_GetVoidPtrRef(ImGuiStorage* self, ImGuiID key, void* default_val);

    // Function @ cimgui.h:2732:19 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float* ImGuiStorage_GetFloatRef(ImGuiStorage* self, ImGuiID key, float default_val);

    // Function @ cimgui.h:2731:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool* ImGuiStorage_GetBoolRef(ImGuiStorage* self, ImGuiID key, CBool default_val);

    // Function @ cimgui.h:2730:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern long* ImGuiStorage_GetIntRef(ImGuiStorage* self, ImGuiID key, int default_val);

    // Function @ cimgui.h:2729:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiStorage_SetVoidPtr(ImGuiStorage* self, ImGuiID key, void* val);

    // Function @ cimgui.h:2728:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void* ImGuiStorage_GetVoidPtr(ImGuiStorage* self, ImGuiID key);

    // Function @ cimgui.h:2727:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiStorage_SetFloat(ImGuiStorage* self, ImGuiID key, float val);

    // Function @ cimgui.h:2726:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float ImGuiStorage_GetFloat(ImGuiStorage* self, ImGuiID key, float default_val);

    // Function @ cimgui.h:2725:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiStorage_SetBool(ImGuiStorage* self, ImGuiID key, CBool val);

    // Function @ cimgui.h:2724:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImGuiStorage_GetBool(ImGuiStorage* self, ImGuiID key, CBool default_val);

    // Function @ cimgui.h:2723:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiStorage_SetInt(ImGuiStorage* self, ImGuiID key, int val);

    // Function @ cimgui.h:2722:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int ImGuiStorage_GetInt(ImGuiStorage* self, ImGuiID key, int default_val);

    // Function @ cimgui.h:2721:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiStorage_Clear(ImGuiStorage* self);

    // Function @ cimgui.h:2720:30 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiStoragePair* ImGuiStoragePair_ImGuiStoragePair_Ptr(ImGuiID _key, void* _val_p);

    // Function @ cimgui.h:2719:30 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiStoragePair* ImGuiStoragePair_ImGuiStoragePair_Float(ImGuiID _key, float _val_f);

    // Function @ cimgui.h:2718:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiStoragePair_destroy(ImGuiStoragePair* self);

    // Function @ cimgui.h:2717:30 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiStoragePair* ImGuiStoragePair_ImGuiStoragePair_Int(ImGuiID _key, int _val_i);

    // Function @ cimgui.h:2716:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTextBuffer_appendfv(ImGuiTextBuffer* self, CString8U fmt, IntPtr args);

    // Function @ cimgui.h:2715:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTextBuffer_append(ImGuiTextBuffer* self, CString8U str, CString8U str_end);

    // Function @ cimgui.h:2714:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U ImGuiTextBuffer_c_str(ImGuiTextBuffer* self);

    // Function @ cimgui.h:2713:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTextBuffer_reserve(ImGuiTextBuffer* self, int capacity);

    // Function @ cimgui.h:2712:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTextBuffer_clear(ImGuiTextBuffer* self);

    // Function @ cimgui.h:2711:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImGuiTextBuffer_empty(ImGuiTextBuffer* self);

    // Function @ cimgui.h:2710:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int ImGuiTextBuffer_size(ImGuiTextBuffer* self);

    // Function @ cimgui.h:2709:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U ImGuiTextBuffer_end(ImGuiTextBuffer* self);

    // Function @ cimgui.h:2708:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U ImGuiTextBuffer_begin(ImGuiTextBuffer* self);

    // Function @ cimgui.h:2707:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTextBuffer_destroy(ImGuiTextBuffer* self);

    // Function @ cimgui.h:2706:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTextBuffer* ImGuiTextBuffer_ImGuiTextBuffer();

    // Function @ cimgui.h:2705:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTextRange_split(ImGuiTextRange* self, byte separator, ImVector_ImGuiTextRange* @out);

    // Function @ cimgui.h:2704:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImGuiTextRange_empty(ImGuiTextRange* self);

    // Function @ cimgui.h:2703:28 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTextRange* ImGuiTextRange_ImGuiTextRange_Str(CString8U _b, CString8U _e);

    // Function @ cimgui.h:2702:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTextRange_destroy(ImGuiTextRange* self);

    // Function @ cimgui.h:2701:28 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTextRange* ImGuiTextRange_ImGuiTextRange_Nil();

    // Function @ cimgui.h:2700:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImGuiTextFilter_IsActive(ImGuiTextFilter* self);

    // Function @ cimgui.h:2699:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTextFilter_Clear(ImGuiTextFilter* self);

    // Function @ cimgui.h:2698:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTextFilter_Build(ImGuiTextFilter* self);

    // Function @ cimgui.h:2697:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImGuiTextFilter_PassFilter(ImGuiTextFilter* self, CString8U text, CString8U text_end);

    // Function @ cimgui.h:2696:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImGuiTextFilter_Draw(ImGuiTextFilter* self, CString8U label, float width);

    // Function @ cimgui.h:2695:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTextFilter_destroy(ImGuiTextFilter* self);

    // Function @ cimgui.h:2694:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTextFilter* ImGuiTextFilter_ImGuiTextFilter(CString8U default_filter);

    // Function @ cimgui.h:2693:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiOnceUponAFrame_destroy(ImGuiOnceUponAFrame* self);

    // Function @ cimgui.h:2692:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiOnceUponAFrame* ImGuiOnceUponAFrame_ImGuiOnceUponAFrame();

    // Function @ cimgui.h:2691:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTableSortSpecs_destroy(ImGuiTableSortSpecs* self);

    // Function @ cimgui.h:2690:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTableSortSpecs* ImGuiTableSortSpecs_ImGuiTableSortSpecs();

    // Function @ cimgui.h:2689:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiTableColumnSortSpecs_destroy(ImGuiTableColumnSortSpecs* self);

    // Function @ cimgui.h:2688:39 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTableColumnSortSpecs* ImGuiTableColumnSortSpecs_ImGuiTableColumnSortSpecs();

    // Function @ cimgui.h:2687:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImGuiPayload_IsDelivery(ImGuiPayload* self);

    // Function @ cimgui.h:2686:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImGuiPayload_IsPreview(ImGuiPayload* self);

    // Function @ cimgui.h:2685:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImGuiPayload_IsDataType(ImGuiPayload* self, CString8U type);

    // Function @ cimgui.h:2684:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiPayload_Clear(ImGuiPayload* self);

    // Function @ cimgui.h:2683:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiPayload_destroy(ImGuiPayload* self);

    // Function @ cimgui.h:2682:26 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiPayload* ImGuiPayload_ImGuiPayload();

    // Function @ cimgui.h:2681:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool ImGuiInputTextCallbackData_HasSelection(ImGuiInputTextCallbackData* self);

    // Function @ cimgui.h:2680:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiInputTextCallbackData_ClearSelection(ImGuiInputTextCallbackData* self);

    // Function @ cimgui.h:2679:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiInputTextCallbackData_SelectAll(ImGuiInputTextCallbackData* self);

    // Function @ cimgui.h:2678:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiInputTextCallbackData_InsertChars(ImGuiInputTextCallbackData* self, int pos, CString8U text, CString8U text_end);

    // Function @ cimgui.h:2677:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiInputTextCallbackData_DeleteChars(ImGuiInputTextCallbackData* self, int pos, int bytes_count);

    // Function @ cimgui.h:2676:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiInputTextCallbackData_destroy(ImGuiInputTextCallbackData* self);

    // Function @ cimgui.h:2675:40 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiInputTextCallbackData* ImGuiInputTextCallbackData_ImGuiInputTextCallbackData();

    // Function @ cimgui.h:2674:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiIO_destroy(ImGuiIO* self);

    // Function @ cimgui.h:2673:21 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiIO* ImGuiIO_ImGuiIO();

    // Function @ cimgui.h:2672:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiIO_ClearInputCharacters(ImGuiIO* self);

    // Function @ cimgui.h:2671:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiIO_AddInputCharactersUTF8(ImGuiIO* self, CString8U str);

    // Function @ cimgui.h:2670:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiIO_AddInputCharacterUTF16(ImGuiIO* self, char c);

    // Function @ cimgui.h:2669:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiIO_AddInputCharacter(ImGuiIO* self, uint c);

    // Function @ cimgui.h:2668:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiStyle_ScaleAllSizes(ImGuiStyle* self, float scale_factor);

    // Function @ cimgui.h:2667:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImGuiStyle_destroy(ImGuiStyle* self);

    // Function @ cimgui.h:2666:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiStyle* ImGuiStyle_ImGuiStyle();

    // Function @ cimgui.h:2665:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igMemFree(void* ptr);

    // Function @ cimgui.h:2664:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void* igMemAlloc(ulong size);

    // Function @ cimgui.h:2663:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetAllocatorFunctions(ImGuiMemAllocFunc* p_alloc_func, ImGuiMemFreeFunc* p_free_func, void** p_user_data);

    // Function @ cimgui.h:2662:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetAllocatorFunctions(ImGuiMemAllocFunc alloc_func, ImGuiMemFreeFunc free_func, void* user_data);

    // Function @ cimgui.h:2661:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDebugCheckVersionAndDataLayout(CString8U version_str, ulong sz_io, ulong sz_style, ulong sz_vec2, ulong sz_vec4, ulong sz_drawvert, ulong sz_drawidx);

    // Function @ cimgui.h:2660:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igSaveIniSettingsToMemory(ulong* out_ini_size);

    // Function @ cimgui.h:2659:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSaveIniSettingsToDisk(CString8U ini_filename);

    // Function @ cimgui.h:2658:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLoadIniSettingsFromMemory(CString8U ini_data, ulong ini_size);

    // Function @ cimgui.h:2657:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLoadIniSettingsFromDisk(CString8U ini_filename);

    // Function @ cimgui.h:2656:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetClipboardText(CString8U text);

    // Function @ cimgui.h:2655:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igGetClipboardText();

    // Function @ cimgui.h:2654:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igCaptureMouseFromApp(CBool want_capture_mouse_value);

    // Function @ cimgui.h:2653:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetMouseCursor(ImGuiMouseCursor cursor_type);

    // Function @ cimgui.h:2652:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiMouseCursor igGetMouseCursor();

    // Function @ cimgui.h:2651:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igResetMouseDragDelta(ImGuiMouseButton button);

    // Function @ cimgui.h:2650:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetMouseDragDelta(Vector2* pOut, ImGuiMouseButton button, float lock_threshold);

    // Function @ cimgui.h:2649:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsMouseDragging(ImGuiMouseButton button, float lock_threshold);

    // Function @ cimgui.h:2648:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetMousePosOnOpeningCurrentPopup(Vector2* pOut);

    // Function @ cimgui.h:2647:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetMousePos(Vector2* pOut);

    // Function @ cimgui.h:2646:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsAnyMouseDown();

    // Function @ cimgui.h:2645:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsMousePosValid(Vector2* mouse_pos);

    // Function @ cimgui.h:2644:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsMouseHoveringRect(Vector2 r_min, Vector2 r_max, CBool clip);

    // Function @ cimgui.h:2643:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsMouseDoubleClicked(ImGuiMouseButton button);

    // Function @ cimgui.h:2642:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsMouseReleased(ImGuiMouseButton button);

    // Function @ cimgui.h:2641:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsMouseClicked(ImGuiMouseButton button, CBool repeat);

    // Function @ cimgui.h:2640:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsMouseDown(ImGuiMouseButton button);

    // Function @ cimgui.h:2639:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igCaptureKeyboardFromApp(CBool want_capture_keyboard_value);

    // Function @ cimgui.h:2638:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igGetKeyPressedAmount(int key_index, float repeat_delay, float rate);

    // Function @ cimgui.h:2637:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsKeyReleased(int user_key_index);

    // Function @ cimgui.h:2636:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsKeyPressed(int user_key_index, CBool repeat);

    // Function @ cimgui.h:2635:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsKeyDown(int user_key_index);

    // Function @ cimgui.h:2634:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igGetKeyIndex(ImGuiKey imgui_key);

    // Function @ cimgui.h:2633:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igColorConvertHSVtoRGB(float h, float s, float v, float* out_r, float* out_g, float* out_b);

    // Function @ cimgui.h:2632:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igColorConvertRGBtoHSV(float r, float g, float b, float* out_h, float* out_s, float* out_v);

    // Function @ cimgui.h:2631:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern uint igColorConvertFloat4ToU32(Vector4 @in);

    // Function @ cimgui.h:2630:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igColorConvertU32ToFloat4(Vector4* pOut, uint @in);

    // Function @ cimgui.h:2629:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igCalcTextSize(Vector2* pOut, CString8U text, CString8U text_end, CBool hide_text_after_double_hash, float wrap_width);

    // Function @ cimgui.h:2628:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndChildFrame();

    // Function @ cimgui.h:2627:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginChildFrame(ImGuiID id, Vector2 size, ImGuiWindowFlags flags);

    // Function @ cimgui.h:2626:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igCalcListClipping(int items_count, float items_height, long* out_items_display_start, long* out_items_display_end);

    // Function @ cimgui.h:2625:26 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiStorage* igGetStateStorage();

    // Function @ cimgui.h:2624:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetStateStorage(ImGuiStorage* storage);

    // Function @ cimgui.h:2623:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igGetStyleColorName(ImGuiCol idx);

    // Function @ cimgui.h:2622:34 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImDrawListSharedData* igGetDrawListSharedData();

    // Function @ cimgui.h:2621:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImDrawList* igGetForegroundDrawList_Nil();

    // Function @ cimgui.h:2620:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImDrawList* igGetBackgroundDrawList_Nil();

    // Function @ cimgui.h:2619:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igGetFrameCount();

    // Function @ cimgui.h:2618:19 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern double igGetTime();

    // Function @ cimgui.h:2617:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsRectVisible_Vec2(Vector2 rect_min, Vector2 rect_max);

    // Function @ cimgui.h:2616:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsRectVisible_Nil(Vector2 size);

    // Function @ cimgui.h:2615:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiViewport* igGetMainViewport();

    // Function @ cimgui.h:2614:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetItemAllowOverlap();

    // Function @ cimgui.h:2613:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetItemRectSize(Vector2* pOut);

    // Function @ cimgui.h:2612:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetItemRectMax(Vector2* pOut);

    // Function @ cimgui.h:2611:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetItemRectMin(Vector2* pOut);

    // Function @ cimgui.h:2610:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsAnyItemFocused();

    // Function @ cimgui.h:2609:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsAnyItemActive();

    // Function @ cimgui.h:2608:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsAnyItemHovered();

    // Function @ cimgui.h:2607:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsItemToggledOpen();

    // Function @ cimgui.h:2606:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsItemDeactivatedAfterEdit();

    // Function @ cimgui.h:2605:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsItemDeactivated();

    // Function @ cimgui.h:2604:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsItemActivated();

    // Function @ cimgui.h:2603:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsItemEdited();

    // Function @ cimgui.h:2602:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsItemVisible();

    // Function @ cimgui.h:2601:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsItemClicked(ImGuiMouseButton mouse_button);

    // Function @ cimgui.h:2600:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsItemFocused();

    // Function @ cimgui.h:2599:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsItemActive();

    // Function @ cimgui.h:2598:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsItemHovered(ImGuiHoveredFlags flags);

    // Function @ cimgui.h:2597:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetKeyboardFocusHere(int offset);

    // Function @ cimgui.h:2596:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetItemDefaultFocus();

    // Function @ cimgui.h:2595:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPopClipRect();

    // Function @ cimgui.h:2594:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushClipRect(Vector2 clip_rect_min, Vector2 clip_rect_max, CBool intersect_with_current_clip_rect);

    // Function @ cimgui.h:2593:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiPayload* igGetDragDropPayload();

    // Function @ cimgui.h:2592:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndDragDropTarget();

    // Function @ cimgui.h:2591:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiPayload* igAcceptDragDropPayload(CString8U type, ImGuiDragDropFlags flags);

    // Function @ cimgui.h:2590:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginDragDropTarget();

    // Function @ cimgui.h:2589:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndDragDropSource();

    // Function @ cimgui.h:2588:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSetDragDropPayload(CString8U type, void* data, ulong sz, ImGuiCond cond);

    // Function @ cimgui.h:2587:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginDragDropSource(ImGuiDragDropFlags flags);

    // Function @ cimgui.h:2586:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLogTextV(CString8U fmt, IntPtr args);

    // Function @ cimgui.h:2585:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLogButtons();

    // Function @ cimgui.h:2584:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLogFinish();

    // Function @ cimgui.h:2583:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLogToClipboard(int auto_open_depth);

    // Function @ cimgui.h:2582:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLogToFile(int auto_open_depth, CString8U filename);

    // Function @ cimgui.h:2581:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLogToTTY(int auto_open_depth);

    // Function @ cimgui.h:2580:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetTabItemClosed(CString8U tab_or_docked_window_label);

    // Function @ cimgui.h:2579:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTabItemButton(CString8U label, ImGuiTabItemFlags flags);

    // Function @ cimgui.h:2578:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndTabItem();

    // Function @ cimgui.h:2577:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginTabItem(CString8U label, CBool* p_open, ImGuiTabItemFlags flags);

    // Function @ cimgui.h:2576:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndTabBar();

    // Function @ cimgui.h:2575:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginTabBar(CString8U str_id, ImGuiTabBarFlags flags);

    // Function @ cimgui.h:2574:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igGetColumnsCount();

    // Function @ cimgui.h:2573:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetColumnOffset(int column_index, float offset_x);

    // Function @ cimgui.h:2572:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetColumnOffset(int column_index);

    // Function @ cimgui.h:2571:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetColumnWidth(int column_index, float width);

    // Function @ cimgui.h:2570:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetColumnWidth(int column_index);

    // Function @ cimgui.h:2569:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igGetColumnIndex();

    // Function @ cimgui.h:2568:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igNextColumn();

    // Function @ cimgui.h:2567:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igColumns(int count, CString8U id, CBool border);

    // Function @ cimgui.h:2566:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableSetBgColor(ImGuiTableBgTarget target, uint color, int column_n);

    // Function @ cimgui.h:2565:34 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTableColumnFlags igTableGetColumnFlags(int column_n);

    // Function @ cimgui.h:2564:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igTableGetColumnName_Int(int column_n);

    // Function @ cimgui.h:2563:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igTableGetRowIndex();

    // Function @ cimgui.h:2562:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igTableGetColumnIndex();

    // Function @ cimgui.h:2561:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern int igTableGetColumnCount();

    // Function @ cimgui.h:2560:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiTableSortSpecs* igTableGetSortSpecs();

    // Function @ cimgui.h:2559:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableHeader(CString8U label);

    // Function @ cimgui.h:2558:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableHeadersRow();

    // Function @ cimgui.h:2557:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableSetupScrollFreeze(int cols, int rows);

    // Function @ cimgui.h:2556:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableSetupColumn(CString8U label, ImGuiTableColumnFlags flags, float init_width_or_weight, ImGuiID user_id);

    // Function @ cimgui.h:2555:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTableSetColumnIndex(int column_n);

    // Function @ cimgui.h:2554:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTableNextColumn();

    // Function @ cimgui.h:2553:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTableNextRow(ImGuiTableRowFlags row_flags, float min_row_height);

    // Function @ cimgui.h:2552:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndTable();

    // Function @ cimgui.h:2551:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginTable(CString8U str_id, int column, ImGuiTableFlags flags, Vector2 outer_size, float inner_width);

    // Function @ cimgui.h:2550:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsPopupOpen_Str(CString8U str_id, ImGuiPopupFlags flags);

    // Function @ cimgui.h:2549:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginPopupContextVoid(CString8U str_id, ImGuiPopupFlags popup_flags);

    // Function @ cimgui.h:2548:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginPopupContextWindow(CString8U str_id, ImGuiPopupFlags popup_flags);

    // Function @ cimgui.h:2547:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginPopupContextItem(CString8U str_id, ImGuiPopupFlags popup_flags);

    // Function @ cimgui.h:2546:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igCloseCurrentPopup();

    // Function @ cimgui.h:2545:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igOpenPopupOnItemClick(CString8U str_id, ImGuiPopupFlags popup_flags);

    // Function @ cimgui.h:2544:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igOpenPopup(CString8U str_id, ImGuiPopupFlags popup_flags);

    // Function @ cimgui.h:2543:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndPopup();

    // Function @ cimgui.h:2542:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginPopupModal(CString8U name, CBool* p_open, ImGuiWindowFlags flags);

    // Function @ cimgui.h:2541:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginPopup(CString8U str_id, ImGuiWindowFlags flags);

    // Function @ cimgui.h:2540:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetTooltipV(CString8U fmt, IntPtr args);

    // Function @ cimgui.h:2539:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetTooltip(CString8U fmt);

    // Function @ cimgui.h:2538:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndTooltip();

    // Function @ cimgui.h:2537:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igBeginTooltip();

    // Function @ cimgui.h:2536:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igMenuItem_BoolPtr(CString8U label, CString8U shortcut, CBool* p_selected, CBool enabled);

    // Function @ cimgui.h:2535:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igMenuItem_Bool(CString8U label, CString8U shortcut, CBool selected, CBool enabled);

    // Function @ cimgui.h:2534:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndMenu();

    // Function @ cimgui.h:2533:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginMenu(CString8U label, CBool enabled);

    // Function @ cimgui.h:2532:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndMainMenuBar();

    // Function @ cimgui.h:2531:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginMainMenuBar();

    // Function @ cimgui.h:2530:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndMenuBar();

    // Function @ cimgui.h:2529:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginMenuBar();

    // Function @ cimgui.h:2528:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igValue_Float(CString8U prefix, float v, CString8U float_format);

    // Function @ cimgui.h:2527:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igValue_Uint(CString8U prefix, uint v);

    // Function @ cimgui.h:2526:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igValue_Int(CString8U prefix, int v);

    // Function @ cimgui.h:2525:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igValue_Bool(CString8U prefix, CBool b);

    // Function @ cimgui.h:2524:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPlotHistogram_FnFloatPtr(CString8U label, FnPtr_IMGUI_VoidPtr_Int_Float values_getter, void* data, int values_count, int values_offset, CString8U overlay_text, float scale_min, float scale_max, Vector2 graph_size);

    // Function @ cimgui.h:2523:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPlotHistogram_FloatPtr(CString8U label, float* values, int values_count, int values_offset, CString8U overlay_text, float scale_min, float scale_max, Vector2 graph_size, int stride);

    // Function @ cimgui.h:2522:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPlotLines_FnFloatPtr(CString8U label, FnPtr_IMGUI_VoidPtr_Int_Float values_getter, void* data, int values_count, int values_offset, CString8U overlay_text, float scale_min, float scale_max, Vector2 graph_size);

    // Function @ cimgui.h:2521:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPlotLines_FloatPtr(CString8U label, float* values, int values_count, int values_offset, CString8U overlay_text, float scale_min, float scale_max, Vector2 graph_size, int stride);

    // Function @ cimgui.h:2520:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igListBox_FnBoolPtr(CString8U label, long* current_item, FnPtr_IMGUI_VoidPtr_Int_CString8UPtr_CBool items_getter, void* data, int items_count, int height_in_items);

    // Function @ cimgui.h:2519:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igListBox_Str_arr(CString8U label, long* current_item, CString8U* items, int items_count, int height_in_items);

    // Function @ cimgui.h:2518:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndListBox();

    // Function @ cimgui.h:2517:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginListBox(CString8U label, Vector2 size);

    // Function @ cimgui.h:2516:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSelectable_BoolPtr(CString8U label, CBool* p_selected, ImGuiSelectableFlags flags, Vector2 size);

    // Function @ cimgui.h:2515:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSelectable_Bool(CString8U label, CBool selected, ImGuiSelectableFlags flags, Vector2 size);

    // Function @ cimgui.h:2514:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetNextItemOpen(CBool is_open, ImGuiCond cond);

    // Function @ cimgui.h:2513:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igCollapsingHeader_BoolPtr(CString8U label, CBool* p_visible, ImGuiTreeNodeFlags flags);

    // Function @ cimgui.h:2512:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igCollapsingHeader_TreeNodeFlags(CString8U label, ImGuiTreeNodeFlags flags);

    // Function @ cimgui.h:2511:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetTreeNodeToLabelSpacing();

    // Function @ cimgui.h:2510:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTreePop();

    // Function @ cimgui.h:2509:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTreePush_Ptr(void* ptr_id);

    // Function @ cimgui.h:2508:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTreePush_Str(CString8U str_id);

    // Function @ cimgui.h:2507:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTreeNodeExV_Ptr(void* ptr_id, ImGuiTreeNodeFlags flags, CString8U fmt, IntPtr args);

    // Function @ cimgui.h:2506:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTreeNodeExV_Str(CString8U str_id, ImGuiTreeNodeFlags flags, CString8U fmt, IntPtr args);

    // Function @ cimgui.h:2505:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTreeNodeEx_Ptr(void* ptr_id, ImGuiTreeNodeFlags flags, CString8U fmt);

    // Function @ cimgui.h:2504:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTreeNodeEx_StrStr(CString8U str_id, ImGuiTreeNodeFlags flags, CString8U fmt);

    // Function @ cimgui.h:2503:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTreeNodeEx_Str(CString8U label, ImGuiTreeNodeFlags flags);

    // Function @ cimgui.h:2502:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTreeNodeV_Ptr(void* ptr_id, CString8U fmt, IntPtr args);

    // Function @ cimgui.h:2501:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTreeNodeV_Str(CString8U str_id, CString8U fmt, IntPtr args);

    // Function @ cimgui.h:2500:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTreeNode_Ptr(void* ptr_id, CString8U fmt);

    // Function @ cimgui.h:2499:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTreeNode_StrStr(CString8U str_id, CString8U fmt);

    // Function @ cimgui.h:2498:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igTreeNode_Str(CString8U label);

    // Function @ cimgui.h:2497:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetColorEditOptions(ImGuiColorEditFlags flags);

    // Function @ cimgui.h:2496:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igColorButton(CString8U desc_id, Vector4 col, ImGuiColorEditFlags flags, Vector2 size);

    // Function @ cimgui.h:2495:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igColorPicker4(CString8U label, float* col, ImGuiColorEditFlags flags, float* ref_col);

    // Function @ cimgui.h:2494:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igColorPicker3(CString8U label, float* col, ImGuiColorEditFlags flags);

    // Function @ cimgui.h:2493:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igColorEdit4(CString8U label, float* col, ImGuiColorEditFlags flags);

    // Function @ cimgui.h:2492:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igColorEdit3(CString8U label, float* col, ImGuiColorEditFlags flags);

    // Function @ cimgui.h:2491:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputScalarN(CString8U label, ImGuiDataType data_type, void* p_data, int components, void* p_step, void* p_step_fast, CString8U format, ImGuiInputTextFlags flags);

    // Function @ cimgui.h:2490:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputScalar(CString8U label, ImGuiDataType data_type, void* p_data, void* p_step, void* p_step_fast, CString8U format, ImGuiInputTextFlags flags);

    // Function @ cimgui.h:2489:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputDouble(CString8U label, double* v, double step, double step_fast, CString8U format, ImGuiInputTextFlags flags);

    // Function @ cimgui.h:2488:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputInt4(CString8U label, int* v, ImGuiInputTextFlags flags);

    // Function @ cimgui.h:2487:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputInt3(CString8U label, int* v, ImGuiInputTextFlags flags);

    // Function @ cimgui.h:2486:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputInt2(CString8U label, int* v, ImGuiInputTextFlags flags);

    // Function @ cimgui.h:2485:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputInt(CString8U label, long* v, int step, int step_fast, ImGuiInputTextFlags flags);

    // Function @ cimgui.h:2484:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputFloat4(CString8U label, float* v, CString8U format, ImGuiInputTextFlags flags);

    // Function @ cimgui.h:2483:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputFloat3(CString8U label, float* v, CString8U format, ImGuiInputTextFlags flags);

    // Function @ cimgui.h:2482:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputFloat2(CString8U label, float* v, CString8U format, ImGuiInputTextFlags flags);

    // Function @ cimgui.h:2481:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputFloat(CString8U label, float* v, float step, float step_fast, CString8U format, ImGuiInputTextFlags flags);

    // Function @ cimgui.h:2480:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputTextWithHint(CString8U label, CString8U hint, CString8U buf, ulong buf_size, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* user_data);

    // Function @ cimgui.h:2479:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputTextMultiline(CString8U label, CString8U buf, ulong buf_size, Vector2 size, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* user_data);

    // Function @ cimgui.h:2478:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInputText(CString8U label, CString8U buf, ulong buf_size, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* user_data);

    // Function @ cimgui.h:2477:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igVSliderScalar(CString8U label, Vector2 size, ImGuiDataType data_type, void* p_data, void* p_min, void* p_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2476:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igVSliderInt(CString8U label, Vector2 size, long* v, int v_min, int v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2475:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igVSliderFloat(CString8U label, Vector2 size, float* v, float v_min, float v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2474:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSliderScalarN(CString8U label, ImGuiDataType data_type, void* p_data, int components, void* p_min, void* p_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2473:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSliderScalar(CString8U label, ImGuiDataType data_type, void* p_data, void* p_min, void* p_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2472:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSliderInt4(CString8U label, int* v, int v_min, int v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2471:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSliderInt3(CString8U label, int* v, int v_min, int v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2470:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSliderInt2(CString8U label, int* v, int v_min, int v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2469:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSliderInt(CString8U label, long* v, int v_min, int v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2468:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSliderAngle(CString8U label, float* v_rad, float v_degrees_min, float v_degrees_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2467:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSliderFloat4(CString8U label, float* v, float v_min, float v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2466:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSliderFloat3(CString8U label, float* v, float v_min, float v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2465:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSliderFloat2(CString8U label, float* v, float v_min, float v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2464:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSliderFloat(CString8U label, float* v, float v_min, float v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2463:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDragScalarN(CString8U label, ImGuiDataType data_type, void* p_data, int components, float v_speed, void* p_min, void* p_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2462:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDragScalar(CString8U label, ImGuiDataType data_type, void* p_data, float v_speed, void* p_min, void* p_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2461:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDragIntRange2(CString8U label, long* v_current_min, long* v_current_max, float v_speed, int v_min, int v_max, CString8U format, CString8U format_max, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2460:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDragInt4(CString8U label, int* v, float v_speed, int v_min, int v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2459:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDragInt3(CString8U label, int* v, float v_speed, int v_min, int v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2458:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDragInt2(CString8U label, int* v, float v_speed, int v_min, int v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2457:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDragInt(CString8U label, long* v, float v_speed, int v_min, int v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2456:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDragFloatRange2(CString8U label, float* v_current_min, float* v_current_max, float v_speed, float v_min, float v_max, CString8U format, CString8U format_max, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2455:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDragFloat4(CString8U label, float* v, float v_speed, float v_min, float v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2454:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDragFloat3(CString8U label, float* v, float v_speed, float v_min, float v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2453:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDragFloat2(CString8U label, float* v, float v_speed, float v_min, float v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2452:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igDragFloat(CString8U label, float* v, float v_speed, float v_min, float v_max, CString8U format, ImGuiSliderFlags flags);

    // Function @ cimgui.h:2451:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igCombo_FnBoolPtr(CString8U label, long* current_item, FnPtr_IMGUI_VoidPtr_Int_CString8UPtr_CBool items_getter, void* data, int items_count, int popup_max_height_in_items);

    // Function @ cimgui.h:2450:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igCombo_Str(CString8U label, long* current_item, CString8U items_separated_by_zeros, int popup_max_height_in_items);

    // Function @ cimgui.h:2449:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igCombo_Str_arr(CString8U label, long* current_item, CString8U* items, int items_count, int popup_max_height_in_items);

    // Function @ cimgui.h:2448:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndCombo();

    // Function @ cimgui.h:2447:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginCombo(CString8U label, CString8U preview_value, ImGuiComboFlags flags);

    // Function @ cimgui.h:2446:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igBullet();

    // Function @ cimgui.h:2445:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igProgressBar(float fraction, Vector2 size_arg, CString8U overlay);

    // Function @ cimgui.h:2444:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igRadioButton_IntPtr(CString8U label, long* v, int v_button);

    // Function @ cimgui.h:2443:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igRadioButton_Bool(CString8U label, CBool active);

    // Function @ cimgui.h:2442:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igCheckboxFlags_UintPtr(CString8U label, ulong* flags, uint flags_value);

    // Function @ cimgui.h:2441:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igCheckboxFlags_IntPtr(CString8U label, long* flags, int flags_value);

    // Function @ cimgui.h:2440:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igCheckbox(CString8U label, CBool* v);

    // Function @ cimgui.h:2439:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igImageButton(ImTextureID user_texture_id, Vector2 size, Vector2 uv0, Vector2 uv1, int frame_padding, Vector4 bg_col, Vector4 tint_col);

    // Function @ cimgui.h:2438:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igImage(ImTextureID user_texture_id, Vector2 size, Vector2 uv0, Vector2 uv1, Vector4 tint_col, Vector4 border_col);

    // Function @ cimgui.h:2437:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igArrowButton(CString8U str_id, ImGuiDir dir);

    // Function @ cimgui.h:2436:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igInvisibleButton(CString8U str_id, Vector2 size, ImGuiButtonFlags flags);

    // Function @ cimgui.h:2435:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igSmallButton(CString8U label);

    // Function @ cimgui.h:2434:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igButton(CString8U label, Vector2 size);

    // Function @ cimgui.h:2433:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igBulletTextV(CString8U fmt, IntPtr args);

    // Function @ cimgui.h:2432:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igBulletText(CString8U fmt);

    // Function @ cimgui.h:2431:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLabelTextV(CString8U label, CString8U fmt, IntPtr args);

    // Function @ cimgui.h:2430:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igLabelText(CString8U label, CString8U fmt);

    // Function @ cimgui.h:2429:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTextWrappedV(CString8U fmt, IntPtr args);

    // Function @ cimgui.h:2428:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTextWrapped(CString8U fmt);

    // Function @ cimgui.h:2427:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTextDisabledV(CString8U fmt, IntPtr args);

    // Function @ cimgui.h:2426:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTextDisabled(CString8U fmt);

    // Function @ cimgui.h:2425:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTextColoredV(Vector4 col, CString8U fmt, IntPtr args);

    // Function @ cimgui.h:2424:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTextColored(Vector4 col, CString8U fmt);

    // Function @ cimgui.h:2423:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTextV(CString8U fmt, IntPtr args);

    // Function @ cimgui.h:2422:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igText(CString8U fmt);

    // Function @ cimgui.h:2421:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igTextUnformatted(CString8U text, CString8U text_end);

    // Function @ cimgui.h:2420:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igGetID_Ptr(void* ptr_id);

    // Function @ cimgui.h:2419:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igGetID_StrStr(CString8U str_id_begin, CString8U str_id_end);

    // Function @ cimgui.h:2418:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiID igGetID_Str(CString8U str_id);

    // Function @ cimgui.h:2417:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPopID();

    // Function @ cimgui.h:2416:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushID_Int(int int_id);

    // Function @ cimgui.h:2415:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushID_Ptr(void* ptr_id);

    // Function @ cimgui.h:2414:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushID_StrStr(CString8U str_id_begin, CString8U str_id_end);

    // Function @ cimgui.h:2413:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushID_Str(CString8U str_id);

    // Function @ cimgui.h:2412:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetFrameHeightWithSpacing();

    // Function @ cimgui.h:2411:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetFrameHeight();

    // Function @ cimgui.h:2410:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetTextLineHeightWithSpacing();

    // Function @ cimgui.h:2409:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetTextLineHeight();

    // Function @ cimgui.h:2408:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igAlignTextToFramePadding();

    // Function @ cimgui.h:2407:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetCursorScreenPos(Vector2 pos);

    // Function @ cimgui.h:2406:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetCursorScreenPos(Vector2* pOut);

    // Function @ cimgui.h:2405:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetCursorStartPos(Vector2* pOut);

    // Function @ cimgui.h:2404:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetCursorPosY(float local_y);

    // Function @ cimgui.h:2403:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetCursorPosX(float local_x);

    // Function @ cimgui.h:2402:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetCursorPos(Vector2 local_pos);

    // Function @ cimgui.h:2401:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetCursorPosY();

    // Function @ cimgui.h:2400:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetCursorPosX();

    // Function @ cimgui.h:2399:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetCursorPos(Vector2* pOut);

    // Function @ cimgui.h:2398:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndGroup();

    // Function @ cimgui.h:2397:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igBeginGroup();

    // Function @ cimgui.h:2396:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igUnindent(float indent_w);

    // Function @ cimgui.h:2395:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igIndent(float indent_w);

    // Function @ cimgui.h:2394:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDummy(Vector2 size);

    // Function @ cimgui.h:2393:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSpacing();

    // Function @ cimgui.h:2392:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igNewLine();

    // Function @ cimgui.h:2391:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSameLine(float offset_from_start_x, float spacing);

    // Function @ cimgui.h:2390:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSeparator();

    // Function @ cimgui.h:2389:26 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern Vector4* igGetStyleColorVec4(ImGuiCol idx);

    // Function @ cimgui.h:2388:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern uint igGetColorU32_U32(uint col);

    // Function @ cimgui.h:2387:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern uint igGetColorU32_Vec4(Vector4 col);

    // Function @ cimgui.h:2386:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern uint igGetColorU32_Col(ImGuiCol idx, float alpha_mul);

    // Function @ cimgui.h:2385:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetFontTexUvWhitePixel(Vector2* pOut);

    // Function @ cimgui.h:2384:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetFontSize();

    // Function @ cimgui.h:2383:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImFont* igGetFont();

    // Function @ cimgui.h:2382:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPopTextWrapPos();

    // Function @ cimgui.h:2381:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushTextWrapPos(float wrap_local_pos_x);

    // Function @ cimgui.h:2380:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igCalcItemWidth();

    // Function @ cimgui.h:2379:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetNextItemWidth(float item_width);

    // Function @ cimgui.h:2378:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPopItemWidth();

    // Function @ cimgui.h:2377:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushItemWidth(float item_width);

    // Function @ cimgui.h:2376:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPopButtonRepeat();

    // Function @ cimgui.h:2375:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushButtonRepeat(CBool repeat);

    // Function @ cimgui.h:2374:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPopAllowKeyboardFocus();

    // Function @ cimgui.h:2373:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushAllowKeyboardFocus(CBool allow_keyboard_focus);

    // Function @ cimgui.h:2372:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPopStyleVar(int count);

    // Function @ cimgui.h:2371:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushStyleVar_Vec2(ImGuiStyleVar idx, Vector2 val);

    // Function @ cimgui.h:2370:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushStyleVar_Float(ImGuiStyleVar idx, float val);

    // Function @ cimgui.h:2369:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPopStyleColor(int count);

    // Function @ cimgui.h:2368:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushStyleColor_Vec4(ImGuiCol idx, Vector4 col);

    // Function @ cimgui.h:2367:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushStyleColor_U32(ImGuiCol idx, uint col);

    // Function @ cimgui.h:2366:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPopFont();

    // Function @ cimgui.h:2365:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igPushFont(ImFont* font);

    // Function @ cimgui.h:2364:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetScrollFromPosY_Float(float local_y, float center_y_ratio);

    // Function @ cimgui.h:2363:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetScrollFromPosX_Float(float local_x, float center_x_ratio);

    // Function @ cimgui.h:2362:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetScrollHereY(float center_y_ratio);

    // Function @ cimgui.h:2361:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetScrollHereX(float center_x_ratio);

    // Function @ cimgui.h:2360:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetScrollMaxY();

    // Function @ cimgui.h:2359:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetScrollMaxX();

    // Function @ cimgui.h:2358:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetScrollY_Float(float scroll_y);

    // Function @ cimgui.h:2357:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetScrollX_Float(float scroll_x);

    // Function @ cimgui.h:2356:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetScrollY();

    // Function @ cimgui.h:2355:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetScrollX();

    // Function @ cimgui.h:2354:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetWindowContentRegionWidth();

    // Function @ cimgui.h:2353:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetWindowContentRegionMax(Vector2* pOut);

    // Function @ cimgui.h:2352:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetWindowContentRegionMin(Vector2* pOut);

    // Function @ cimgui.h:2351:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetContentRegionMax(Vector2* pOut);

    // Function @ cimgui.h:2350:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetContentRegionAvail(Vector2* pOut);

    // Function @ cimgui.h:2349:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetWindowFocus_Str(CString8U name);

    // Function @ cimgui.h:2348:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetWindowCollapsed_Str(CString8U name, CBool collapsed, ImGuiCond cond);

    // Function @ cimgui.h:2347:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetWindowSize_Str(CString8U name, Vector2 size, ImGuiCond cond);

    // Function @ cimgui.h:2346:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetWindowPos_Str(CString8U name, Vector2 pos, ImGuiCond cond);

    // Function @ cimgui.h:2345:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetWindowFontScale(float scale);

    // Function @ cimgui.h:2344:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetWindowFocus_Nil();

    // Function @ cimgui.h:2343:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetWindowCollapsed_Bool(CBool collapsed, ImGuiCond cond);

    // Function @ cimgui.h:2342:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetWindowSize_Vec2(Vector2 size, ImGuiCond cond);

    // Function @ cimgui.h:2341:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetWindowPos_Vec2(Vector2 pos, ImGuiCond cond);

    // Function @ cimgui.h:2340:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetNextWindowBgAlpha(float alpha);

    // Function @ cimgui.h:2339:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetNextWindowFocus();

    // Function @ cimgui.h:2338:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetNextWindowCollapsed(CBool collapsed, ImGuiCond cond);

    // Function @ cimgui.h:2337:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetNextWindowContentSize(Vector2 size);

    // Function @ cimgui.h:2336:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetNextWindowSizeConstraints(Vector2 size_min, Vector2 size_max, ImGuiSizeCallback custom_callback, void* custom_callback_data);

    // Function @ cimgui.h:2335:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetNextWindowSize(Vector2 size, ImGuiCond cond);

    // Function @ cimgui.h:2334:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetNextWindowPos(Vector2 pos, ImGuiCond cond, Vector2 pivot);

    // Function @ cimgui.h:2333:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetWindowHeight();

    // Function @ cimgui.h:2332:18 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern float igGetWindowWidth();

    // Function @ cimgui.h:2331:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetWindowSize(Vector2* pOut);

    // Function @ cimgui.h:2330:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igGetWindowPos(Vector2* pOut);

    // Function @ cimgui.h:2329:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImDrawList* igGetWindowDrawList();

    // Function @ cimgui.h:2328:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsWindowHovered(ImGuiHoveredFlags flags);

    // Function @ cimgui.h:2327:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsWindowFocused(ImGuiFocusedFlags flags);

    // Function @ cimgui.h:2326:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsWindowCollapsed();

    // Function @ cimgui.h:2325:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igIsWindowAppearing();

    // Function @ cimgui.h:2324:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndChild();

    // Function @ cimgui.h:2323:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginChild_ID(ImGuiID id, Vector2 size, CBool border, ImGuiWindowFlags flags);

    // Function @ cimgui.h:2322:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBeginChild_Str(CString8U str_id, Vector2 size, CBool border, ImGuiWindowFlags flags);

    // Function @ cimgui.h:2321:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEnd();

    // Function @ cimgui.h:2320:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igBegin(CString8U name, CBool* p_open, ImGuiWindowFlags flags);

    // Function @ cimgui.h:2319:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igStyleColorsClassic(ImGuiStyle* dst);

    // Function @ cimgui.h:2318:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igStyleColorsLight(ImGuiStyle* dst);

    // Function @ cimgui.h:2317:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igStyleColorsDark(ImGuiStyle* dst);

    // Function @ cimgui.h:2316:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CString8U igGetVersion();

    // Function @ cimgui.h:2315:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igShowUserGuide();

    // Function @ cimgui.h:2314:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igShowFontSelector(CString8U label);

    // Function @ cimgui.h:2313:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern CBool igShowStyleSelector(CString8U label);

    // Function @ cimgui.h:2312:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igShowStyleEditor(ImGuiStyle* @ref);

    // Function @ cimgui.h:2311:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igShowAboutWindow(CBool* p_open);

    // Function @ cimgui.h:2310:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igShowMetricsWindow(CBool* p_open);

    // Function @ cimgui.h:2309:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igShowDemoWindow(CBool* p_open);

    // Function @ cimgui.h:2308:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImDrawData* igGetDrawData();

    // Function @ cimgui.h:2307:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igRender();

    // Function @ cimgui.h:2306:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igEndFrame();

    // Function @ cimgui.h:2305:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igNewFrame();

    // Function @ cimgui.h:2304:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiStyle* igGetStyle();

    // Function @ cimgui.h:2303:21 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiIO* igGetIO();

    // Function @ cimgui.h:2302:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igSetCurrentContext(ImGuiContext* ctx);

    // Function @ cimgui.h:2301:26 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiContext* igGetCurrentContext();

    // Function @ cimgui.h:2300:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void igDestroyContext(ImGuiContext* ctx);

    // Function @ cimgui.h:2299:26 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern ImGuiContext* igCreateContext(ImFontAtlas* shared_font_atlas);

    // Function @ cimgui.h:2298:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern Vector4* ImVec4_ImVec4_Float(float _x, float _y, float _z, float _w);

    // Function @ cimgui.h:2297:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImVec4_destroy(Vector4* self);

    // Function @ cimgui.h:2296:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern Vector4* ImVec4_ImVec4_Nil();

    // Function @ cimgui.h:2295:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern Vector2* ImVec2_ImVec2_Float(float _x, float _y);

    // Function @ cimgui.h:2294:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern void ImVec2_destroy(Vector2* self);

    // Function @ cimgui.h:2293:20 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [DllImport(LibraryName)]
    public static extern Vector2* ImVec2_ImVec2_Nil();

    // FunctionPointer @ cimgui.h:2235:12 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_IMGUI_ImFontAtlasPtr_CBool
    {
        public delegate* unmanaged<ImFontAtlas*, CBool> Pointer;
    }

    // FunctionPointer @ cimgui.h:198:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ImDrawCallback
    {
        public delegate* unmanaged<ImDrawList*, ImDrawCmd*, void> Pointer;
    }

    // FunctionPointer @ cimgui.h:243:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ImGuiErrorLogCallback
    {
        public delegate* unmanaged<void*, CString8U, void> Pointer;
    }

    // FunctionPointer @ cimgui.h:3344:74 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_IMGUI_VoidPtr_Int_Float
    {
        public delegate* unmanaged<void*, int, float> Pointer;
    }

    // FunctionPointer @ cimgui.h:183:15 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ImGuiInputTextCallback
    {
        public delegate* unmanaged<ImGuiInputTextCallbackData*, int> Pointer;
    }

    // FunctionPointer @ cimgui.h:247:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ImGuiContextHookCallback
    {
        public delegate* unmanaged<ImGuiContext*, ImGuiContextHook*, void> Pointer;
    }

    // FunctionPointer @ cimgui.h:1623:12 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_IMGUI_ImGuiContextPtr_ImGuiSettingsHandlerPtr_ImGuiTextBufferPtr_Void
    {
        public delegate* unmanaged<ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*, void> Pointer;
    }

    // FunctionPointer @ cimgui.h:1621:12 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_IMGUI_ImGuiContextPtr_ImGuiSettingsHandlerPtr_VoidPtr_CString8U_Void
    {
        public delegate* unmanaged<ImGuiContext*, ImGuiSettingsHandler*, void*, CString8U, void> Pointer;
    }

    // FunctionPointer @ cimgui.h:1620:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_IMGUI_ImGuiContextPtr_ImGuiSettingsHandlerPtr_CString8U_VoidPtr
    {
        public delegate* unmanaged<ImGuiContext*, ImGuiSettingsHandler*, CString8U, void*> Pointer;
    }

    // FunctionPointer @ cimgui.h:1618:12 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_IMGUI_ImGuiContextPtr_ImGuiSettingsHandlerPtr_Void
    {
        public delegate* unmanaged<ImGuiContext*, ImGuiSettingsHandler*, void> Pointer;
    }

    // FunctionPointer @ cimgui.h:184:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ImGuiSizeCallback
    {
        public delegate* unmanaged<ImGuiSizeCallbackData*, void> Pointer;
    }

    // FunctionPointer @ cimgui.h:876:12 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_IMGUI_Int_Int_Void
    {
        public delegate* unmanaged<int, int, void> Pointer;
    }

    // FunctionPointer @ cimgui.h:874:12 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_IMGUI_VoidPtr_CString8U_Void
    {
        public delegate* unmanaged<void*, CString8U, void> Pointer;
    }

    // FunctionPointer @ cimgui.h:873:19 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_IMGUI_VoidPtr_CString8U
    {
        public delegate* unmanaged<void*, CString8U> Pointer;
    }

    // FunctionPointer @ cimgui.h:186:16 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ImGuiMemFreeFunc
    {
        public delegate* unmanaged<void*, void*, void> Pointer;
    }

    // FunctionPointer @ cimgui.h:185:17 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct ImGuiMemAllocFunc
    {
        public delegate* unmanaged<ulong, void*, void*> Pointer;
    }

    // FunctionPointer @ cimgui.h:2520:79 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Sequential)]
    public struct FnPtr_IMGUI_VoidPtr_Int_CString8UPtr_CBool
    {
        public delegate* unmanaged<void*, int, CString8U*, CBool> Pointer;
    }

    // Struct @ cimgui.h:289:72 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImWchar
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public char* Data;
    }

    // Struct @ cimgui.h:984:8 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImGuiTextBuffer
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public ImVector_char Buf;
    }

    // Struct @ cimgui.h:290:66 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_char
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public CString8U Data;
    }

    // Struct @ cimgui.h:108:28 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 1168, Pack = 8)]
    public struct ImFontAtlas
    {
        [FieldOffset(0)] // size = 4, padding = 4
        public ImFontAtlasFlags Flags;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImTextureID TexID;

        [FieldOffset(16)] // size = 4, padding = 0
        public int TexDesiredWidth;

        [FieldOffset(20)] // size = 4, padding = 0
        public int TexGlyphPadding;

        [FieldOffset(24)] // size = 1, padding = 0
        public CBool Locked;

        [FieldOffset(25)] // size = 1, padding = 6
        public CBool TexPixelsUseColors;

        [FieldOffset(32)] // size = 8, padding = 0
        public ulong* TexPixelsAlpha8;

        [FieldOffset(40)] // size = 8, padding = 0
        public ulong* TexPixelsRGBA32;

        [FieldOffset(48)] // size = 4, padding = 0
        public int TexWidth;

        [FieldOffset(52)] // size = 4, padding = 0
        public int TexHeight;

        [FieldOffset(56)] // size = 8, padding = 0
        public Vector2 TexUvScale;

        [FieldOffset(64)] // size = 8, padding = 0
        public Vector2 TexUvWhitePixel;

        [FieldOffset(72)] // size = 16, padding = 0
        public ImVector_ImFontPtr Fonts;

        [FieldOffset(88)] // size = 16, padding = 0
        public ImVector_ImFontAtlasCustomRect CustomRects;

        [FieldOffset(104)] // size = 16, padding = 0
        public ImVector_ImFontConfig ConfigData;

        [FieldOffset(120)] // size = 1024, padding = 0
        public fixed uint _TexUvLines[1024 / 4]; // ImVec4[64]

        public Span<Vector4> TexUvLines
        {
            get
            {
                fixed (ImFontAtlas* @this = &this)
                {
                    var pointer = &@this->_TexUvLines[0];
                    var span = new Span<Vector4>(pointer, 64);
                    return span;
                }
            }
        }

        [FieldOffset(1144)] // size = 8, padding = 0
        public ImFontBuilderIO* FontBuilderIO;

        [FieldOffset(1152)] // size = 4, padding = 0
        public uint FontBuilderFlags;

        [FieldOffset(1156)] // size = 4, padding = 0
        public int PackIdMouseCursors;

        [FieldOffset(1160)] // size = 4, padding = 4
        public int PackIdLines;
    }

    // Struct @ cimgui.h:107:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImFontBuilderIO
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public FnPtr_IMGUI_ImFontAtlasPtr_CBool FontBuilder_Build;
    }

    // Struct @ cimgui.h:265:82 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImFontConfig
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImFontConfig* Data;
    }

    // Struct @ cimgui.h:106:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 136, Pack = 8)]
    public struct ImFontConfig
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public void* FontData;

        [FieldOffset(8)] // size = 4, padding = 0
        public int FontDataSize;

        [FieldOffset(12)] // size = 1, padding = 3
        public CBool FontDataOwnedByAtlas;

        [FieldOffset(16)] // size = 4, padding = 0
        public int FontNo;

        [FieldOffset(20)] // size = 4, padding = 0
        public float SizePixels;

        [FieldOffset(24)] // size = 4, padding = 0
        public int OversampleH;

        [FieldOffset(28)] // size = 4, padding = 0
        public int OversampleV;

        [FieldOffset(32)] // size = 1, padding = 3
        public CBool PixelSnapH;

        [FieldOffset(36)] // size = 8, padding = 0
        public Vector2 GlyphExtraSpacing;

        [FieldOffset(44)] // size = 8, padding = 4
        public Vector2 GlyphOffset;

        [FieldOffset(56)] // size = 8, padding = 0
        public char* GlyphRanges;

        [FieldOffset(64)] // size = 4, padding = 0
        public float GlyphMinAdvanceX;

        [FieldOffset(68)] // size = 4, padding = 0
        public float GlyphMaxAdvanceX;

        [FieldOffset(72)] // size = 1, padding = 3
        public CBool MergeMode;

        [FieldOffset(76)] // size = 4, padding = 0
        public uint FontBuilderFlags;

        [FieldOffset(80)] // size = 4, padding = 0
        public float RasterizerMultiply;

        [FieldOffset(84)] // size = 2, padding = 0
        public char EllipsisChar;

        [FieldOffset(86)] // size = 40, padding = 2
        public fixed byte _Name[40 / 1]; // char[40]

        public string Name
        {
            get
            {
                fixed (ImFontConfig* @this = &this)
                {
                    var pointer = &@this->_Name[0];
                    var cString = new CString8U(pointer);
                    return Runtime.String8U(cString);
                }
            }
        }

        [FieldOffset(128)] // size = 8, padding = 0
        public ImFont* DstFont;
    }

    // Struct @ cimgui.h:109:23 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 112, Pack = 8)]
    public struct ImFont
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public ImVector_float IndexAdvanceX;

        [FieldOffset(16)] // size = 4, padding = 0
        public float FallbackAdvanceX;

        [FieldOffset(20)] // size = 4, padding = 0
        public float FontSize;

        [FieldOffset(24)] // size = 16, padding = 0
        public ImVector_ImWchar IndexLookup;

        [FieldOffset(40)] // size = 16, padding = 0
        public ImVector_ImFontGlyph Glyphs;

        [FieldOffset(56)] // size = 8, padding = 0
        public ImFontGlyph* FallbackGlyph;

        [FieldOffset(64)] // size = 8, padding = 0
        public ImFontAtlas* ContainerAtlas;

        [FieldOffset(72)] // size = 8, padding = 0
        public ImFontConfig* ConfigData;

        [FieldOffset(80)] // size = 2, padding = 0
        public short ConfigDataCount;

        [FieldOffset(82)] // size = 2, padding = 0
        public char FallbackChar;

        [FieldOffset(84)] // size = 2, padding = 0
        public char EllipsisChar;

        [FieldOffset(86)] // size = 1, padding = 1
        public CBool DirtyLookupTables;

        [FieldOffset(88)] // size = 4, padding = 0
        public float Scale;

        [FieldOffset(92)] // size = 4, padding = 0
        public float Ascent;

        [FieldOffset(96)] // size = 4, padding = 0
        public float Descent;

        [FieldOffset(100)] // size = 4, padding = 0
        public int MetricsTotalSurface;

        [FieldOffset(104)] // size = 2, padding = 6
        public fixed byte _Used4kPagesMap[2 / 1]; // ImU8[2]

        public Span<byte> Used4kPagesMap
        {
            get
            {
                fixed (ImFont* @this = &this)
                {
                    var pointer = &@this->_Used4kPagesMap[0];
                    var span = new Span<byte>(pointer, 2);
                    return span;
                }
            }
        }
    }

    // Struct @ cimgui.h:105:28 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 4)]
    public struct ImFontGlyph
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public uint Colored;

        [FieldOffset(0)] // size = 4, padding = 0
        public uint Visible;

        [FieldOffset(0)] // size = 4, padding = 0
        public uint Codepoint;

        [FieldOffset(4)] // size = 4, padding = 0
        public float AdvanceX;

        [FieldOffset(8)] // size = 4, padding = 0
        public float X0;

        [FieldOffset(12)] // size = 4, padding = 0
        public float Y0;

        [FieldOffset(16)] // size = 4, padding = 0
        public float X1;

        [FieldOffset(20)] // size = 4, padding = 0
        public float Y1;

        [FieldOffset(24)] // size = 4, padding = 0
        public float U0;

        [FieldOffset(28)] // size = 4, padding = 0
        public float V0;

        [FieldOffset(32)] // size = 4, padding = 0
        public float U1;

        [FieldOffset(36)] // size = 4, padding = 0
        public float V1;
    }

    // Struct @ cimgui.h:266:80 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImFontGlyph
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImFontGlyph* Data;
    }

    // Struct @ cimgui.h:291:68 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_float
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public float* Data;
    }

    // Struct @ cimgui.h:264:100 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImFontAtlasCustomRect
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImFontAtlasCustomRect* Data;
    }

    // Struct @ cimgui.h:83:38 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ImFontAtlasCustomRect
    {
        [FieldOffset(0)] // size = 2, padding = 0
        public ushort Width;

        [FieldOffset(2)] // size = 2, padding = 0
        public ushort Height;

        [FieldOffset(4)] // size = 2, padding = 0
        public ushort X;

        [FieldOffset(6)] // size = 2, padding = 0
        public ushort Y;

        [FieldOffset(8)] // size = 4, padding = 0
        public uint GlyphID;

        [FieldOffset(12)] // size = 4, padding = 0
        public float GlyphAdvanceX;

        [FieldOffset(16)] // size = 8, padding = 0
        public Vector2 GlyphOffset;

        [FieldOffset(24)] // size = 8, padding = 0
        public ImFont* Font;
    }

    // Struct @ cimgui.h:263:74 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImFontPtr
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImFont** Data;
    }

    // Struct @ cimgui.h:81:23 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 4)]
    public struct ImRect
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public Vector2 Min;

        [FieldOffset(8)] // size = 8, padding = 0
        public Vector2 Max;
    }

    // Struct @ cimgui.h:44:31 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 176, Pack = 8)]
    public struct ImGuiViewportP
    {
        [FieldOffset(0)] // size = 36, padding = 0
        public ImGuiViewport _ImGuiViewport;

        [FieldOffset(36)] // size = 8, padding = 4
        public fixed uint _DrawListsLastFrame[8 / 4]; // int[2]

        public Span<int> DrawListsLastFrame
        {
            get
            {
                fixed (ImGuiViewportP* @this = &this)
                {
                    var pointer = &@this->_DrawListsLastFrame[0];
                    var span = new Span<int>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(48)] // size = 16, padding = 0
        public fixed ulong _DrawLists[16 / 8]; // ImDrawList*[2]

        public Span<IntPtr> DrawLists
        {
            get
            {
                fixed (ImGuiViewportP* @this = &this)
                {
                    var pointer = &@this->_DrawLists[0];
                    var span = new Span<IntPtr>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(64)] // size = 48, padding = 0
        public ImDrawData DrawDataP;

        [FieldOffset(112)] // size = 32, padding = 0
        public ImDrawDataBuilder DrawDataBuilder;

        [FieldOffset(144)] // size = 8, padding = 0
        public Vector2 WorkOffsetMin;

        [FieldOffset(152)] // size = 8, padding = 0
        public Vector2 WorkOffsetMax;

        [FieldOffset(160)] // size = 8, padding = 0
        public Vector2 CurrWorkOffsetMin;

        [FieldOffset(168)] // size = 8, padding = 0
        public Vector2 CurrWorkOffsetMax;
    }

    // Struct @ cimgui.h:80:34 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ImDrawDataBuilder
    {
        [FieldOffset(0)] // size = 32, padding = 0
        public fixed ulong _Layers[32 / 8]; // ImVector_ImDrawListPtr[2]

        public Span<ImVector_ImDrawListPtr> Layers
        {
            get
            {
                fixed (ImDrawDataBuilder* @this = &this)
                {
                    var pointer = &@this->_Layers[0];
                    var span = new Span<ImVector_ImDrawListPtr>(pointer, 2);
                    return span;
                }
            }
        }
    }

    // Struct @ cimgui.h:261:82 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImDrawListPtr
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImDrawList** Data;
    }

    // Struct @ cimgui.h:114:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
    public struct ImDrawData
    {
        [FieldOffset(0)] // size = 1, padding = 3
        public CBool Valid;

        [FieldOffset(4)] // size = 4, padding = 0
        public int CmdListsCount;

        [FieldOffset(8)] // size = 4, padding = 0
        public int TotalIdxCount;

        [FieldOffset(12)] // size = 4, padding = 0
        public int TotalVtxCount;

        [FieldOffset(16)] // size = 8, padding = 0
        public ImDrawList** CmdLists;

        [FieldOffset(24)] // size = 8, padding = 0
        public Vector2 DisplayPos;

        [FieldOffset(32)] // size = 8, padding = 0
        public Vector2 DisplaySize;

        [FieldOffset(40)] // size = 8, padding = 0
        public Vector2 FramebufferScale;
    }

    // Struct @ cimgui.h:89:30 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 36, Pack = 4)]
    public struct ImGuiViewport
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiViewportFlags Flags;

        [FieldOffset(4)] // size = 8, padding = 0
        public Vector2 Pos;

        [FieldOffset(12)] // size = 8, padding = 0
        public Vector2 Size;

        [FieldOffset(20)] // size = 8, padding = 0
        public Vector2 WorkPos;

        [FieldOffset(28)] // size = 8, padding = 0
        public Vector2 WorkSize;
    }

    // Struct @ cimgui.h:113:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 200, Pack = 8)]
    public struct ImDrawList
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public ImVector_ImDrawCmd CmdBuffer;

        [FieldOffset(16)] // size = 16, padding = 0
        public ImVector_ImDrawIdx IdxBuffer;

        [FieldOffset(32)] // size = 16, padding = 0
        public ImVector_ImDrawVert VtxBuffer;

        [FieldOffset(48)] // size = 4, padding = 0
        public ImDrawListFlags Flags;

        [FieldOffset(52)] // size = 4, padding = 0
        public uint _VtxCurrentIdx;

        [FieldOffset(56)] // size = 8, padding = 0
        public ImDrawListSharedData* _Data;

        [FieldOffset(64)] // size = 8, padding = 0
        public CString8U _OwnerName;

        [FieldOffset(72)] // size = 8, padding = 0
        public ImDrawVert* _VtxWritePtr;

        [FieldOffset(80)] // size = 8, padding = 0
        public ImDrawIdx* _IdxWritePtr;

        [FieldOffset(88)] // size = 16, padding = 0
        public ImVector_ImVec4 _ClipRectStack;

        [FieldOffset(104)] // size = 16, padding = 0
        public ImVector_ImTextureID _TextureIdStack;

        [FieldOffset(120)] // size = 16, padding = 0
        public ImVector_ImVec2 _Path;

        [FieldOffset(136)] // size = 32, padding = 0
        public ImDrawCmdHeader _CmdHeader;

        [FieldOffset(168)] // size = 24, padding = 0
        public ImDrawListSplitter _Splitter;

        [FieldOffset(192)] // size = 4, padding = 4
        public float _FringeScale;
    }

    // Struct @ cimgui.h:111:35 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
    public struct ImDrawListSplitter
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int _Current;

        [FieldOffset(4)] // size = 4, padding = 0
        public int _Count;

        [FieldOffset(8)] // size = 16, padding = 0
        public ImVector_ImDrawChannel _Channels;
    }

    // Struct @ cimgui.h:258:84 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImDrawChannel
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImDrawChannel* Data;
    }

    // Struct @ cimgui.h:116:30 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ImDrawChannel
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public ImVector_ImDrawCmd _CmdBuffer;

        [FieldOffset(16)] // size = 16, padding = 0
        public ImVector_ImDrawIdx _IdxBuffer;
    }

    // Struct @ cimgui.h:84:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ImDrawCmdHeader
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public Vector4 ClipRect;

        [FieldOffset(16)] // size = 8, padding = 0
        public ImTextureID TextureId;

        [FieldOffset(24)] // size = 4, padding = 4
        public uint VtxOffset;
    }

    // Struct @ cimgui.h:287:70 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImVec2
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public Vector2* Data;
    }

    // Struct @ cimgui.h:285:80 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImTextureID
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImTextureID* Data;
    }

    // Struct @ cimgui.h:288:70 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImVec4
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public Vector4* Data;
    }

    // Struct @ cimgui.h:110:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 20, Pack = 4)]
    public struct ImDrawVert
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public Vector2 pos;

        [FieldOffset(8)] // size = 8, padding = 0
        public Vector2 uv;

        [FieldOffset(16)] // size = 4, padding = 0
        public uint col;
    }

    // Struct @ cimgui.h:112:37 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 512, Pack = 8)]
    public struct ImDrawListSharedData
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public Vector2 TexUvWhitePixel;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImFont* Font;

        [FieldOffset(16)] // size = 4, padding = 0
        public float FontSize;

        [FieldOffset(20)] // size = 4, padding = 0
        public float CurveTessellationTol;

        [FieldOffset(24)] // size = 4, padding = 0
        public float CircleSegmentMaxError;

        [FieldOffset(28)] // size = 16, padding = 0
        public Vector4 ClipRectFullscreen;

        [FieldOffset(44)] // size = 4, padding = 0
        public ImDrawListFlags InitialFlags;

        [FieldOffset(48)] // size = 384, padding = 0
        public fixed uint _ArcFastVtx[384 / 4]; // ImVec2[48]

        public Span<Vector2> ArcFastVtx
        {
            get
            {
                fixed (ImDrawListSharedData* @this = &this)
                {
                    var pointer = &@this->_ArcFastVtx[0];
                    var span = new Span<Vector2>(pointer, 48);
                    return span;
                }
            }
        }

        [FieldOffset(432)] // size = 4, padding = 0
        public float ArcFastRadiusCutoff;

        [FieldOffset(436)] // size = 64, padding = 4
        public fixed byte _CircleSegmentCounts[64 / 1]; // ImU8[64]

        public Span<byte> CircleSegmentCounts
        {
            get
            {
                fixed (ImDrawListSharedData* @this = &this)
                {
                    var pointer = &@this->_CircleSegmentCounts[0];
                    var span = new Span<byte>(pointer, 64);
                    return span;
                }
            }
        }

        [FieldOffset(504)] // size = 8, padding = 0
        public Vector4* TexUvLines;
    }

    // Struct @ cimgui.h:262:78 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImDrawVert
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImDrawVert* Data;
    }

    // Struct @ cimgui.h:260:76 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImDrawIdx
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImDrawIdx* Data;
    }

    // Struct @ cimgui.h:259:76 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImDrawCmd
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImDrawCmd* Data;
    }

    // Struct @ cimgui.h:115:26 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 56, Pack = 8)]
    public struct ImDrawCmd
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public Vector4 ClipRect;

        [FieldOffset(16)] // size = 8, padding = 0
        public ImTextureID TextureId;

        [FieldOffset(24)] // size = 4, padding = 0
        public uint VtxOffset;

        [FieldOffset(28)] // size = 4, padding = 0
        public uint IdxOffset;

        [FieldOffset(32)] // size = 4, padding = 4
        public uint ElemCount;

        [FieldOffset(40)] // size = 8, padding = 0
        public ImDrawCallback UserCallback;

        [FieldOffset(48)] // size = 8, padding = 0
        public void* UserCallbackData;
    }

    // Struct @ cimgui.h:284:84 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiWindowPtr
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiWindow** Data;
    }

    // Struct @ cimgui.h:56:28 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 1000, Pack = 8)]
    public struct ImGuiWindow
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public CString8U Name;

        [FieldOffset(8)] // size = 4, padding = 0
        public ImGuiID ID;

        [FieldOffset(12)] // size = 4, padding = 0
        public ImGuiWindowFlags Flags;

        [FieldOffset(16)] // size = 8, padding = 0
        public Vector2 Pos;

        [FieldOffset(24)] // size = 8, padding = 0
        public Vector2 Size;

        [FieldOffset(32)] // size = 8, padding = 0
        public Vector2 SizeFull;

        [FieldOffset(40)] // size = 8, padding = 0
        public Vector2 ContentSize;

        [FieldOffset(48)] // size = 8, padding = 0
        public Vector2 ContentSizeIdeal;

        [FieldOffset(56)] // size = 8, padding = 0
        public Vector2 ContentSizeExplicit;

        [FieldOffset(64)] // size = 8, padding = 0
        public Vector2 WindowPadding;

        [FieldOffset(72)] // size = 4, padding = 0
        public float WindowRounding;

        [FieldOffset(76)] // size = 4, padding = 0
        public float WindowBorderSize;

        [FieldOffset(80)] // size = 4, padding = 0
        public int NameBufLen;

        [FieldOffset(84)] // size = 4, padding = 0
        public ImGuiID MoveId;

        [FieldOffset(88)] // size = 4, padding = 0
        public ImGuiID ChildId;

        [FieldOffset(92)] // size = 8, padding = 0
        public Vector2 Scroll;

        [FieldOffset(100)] // size = 8, padding = 0
        public Vector2 ScrollMax;

        [FieldOffset(108)] // size = 8, padding = 0
        public Vector2 ScrollTarget;

        [FieldOffset(116)] // size = 8, padding = 0
        public Vector2 ScrollTargetCenterRatio;

        [FieldOffset(124)] // size = 8, padding = 0
        public Vector2 ScrollTargetEdgeSnapDist;

        [FieldOffset(132)] // size = 8, padding = 0
        public Vector2 ScrollbarSizes;

        [FieldOffset(140)] // size = 1, padding = 0
        public CBool ScrollbarX;

        [FieldOffset(141)] // size = 1, padding = 0
        public CBool ScrollbarY;

        [FieldOffset(142)] // size = 1, padding = 0
        public CBool Active;

        [FieldOffset(143)] // size = 1, padding = 0
        public CBool WasActive;

        [FieldOffset(144)] // size = 1, padding = 0
        public CBool WriteAccessed;

        [FieldOffset(145)] // size = 1, padding = 0
        public CBool Collapsed;

        [FieldOffset(146)] // size = 1, padding = 0
        public CBool WantCollapseToggle;

        [FieldOffset(147)] // size = 1, padding = 0
        public CBool SkipItems;

        [FieldOffset(148)] // size = 1, padding = 0
        public CBool Appearing;

        [FieldOffset(149)] // size = 1, padding = 0
        public CBool Hidden;

        [FieldOffset(150)] // size = 1, padding = 0
        public CBool IsFallbackWindow;

        [FieldOffset(151)] // size = 1, padding = 0
        public CBool HasCloseButton;

        [FieldOffset(152)] // size = 1, padding = 1
        public sbyte ResizeBorderHeld;

        [FieldOffset(154)] // size = 2, padding = 0
        public short BeginCount;

        [FieldOffset(156)] // size = 2, padding = 0
        public short BeginOrderWithinParent;

        [FieldOffset(158)] // size = 2, padding = 0
        public short BeginOrderWithinContext;

        [FieldOffset(160)] // size = 4, padding = 0
        public ImGuiID PopupId;

        [FieldOffset(164)] // size = 1, padding = 0
        public sbyte AutoFitFramesX;

        [FieldOffset(165)] // size = 1, padding = 0
        public sbyte AutoFitFramesY;

        [FieldOffset(166)] // size = 1, padding = 0
        public sbyte AutoFitChildAxises;

        [FieldOffset(167)] // size = 1, padding = 0
        public CBool AutoFitOnlyGrows;

        [FieldOffset(168)] // size = 4, padding = 0
        public ImGuiDir AutoPosLastDirection;

        [FieldOffset(172)] // size = 1, padding = 0
        public sbyte HiddenFramesCanSkipItems;

        [FieldOffset(173)] // size = 1, padding = 0
        public sbyte HiddenFramesCannotSkipItems;

        [FieldOffset(174)] // size = 1, padding = 0
        public sbyte HiddenFramesForRenderOnly;

        [FieldOffset(175)] // size = 4, padding = -3
        public ImGuiCond SetWindowPosAllowFlags;

        [FieldOffset(176)] // size = 4, padding = -3
        public ImGuiCond SetWindowSizeAllowFlags;

        [FieldOffset(177)] // size = 4, padding = -1
        public ImGuiCond SetWindowCollapsedAllowFlags;

        [FieldOffset(180)] // size = 8, padding = 0
        public Vector2 SetWindowPosVal;

        [FieldOffset(188)] // size = 8, padding = 4
        public Vector2 SetWindowPosPivot;

        [FieldOffset(200)] // size = 16, padding = 0
        public ImVector_ImGuiID IDStack;

        [FieldOffset(216)] // size = 304, padding = 0
        public ImGuiWindowTempData DC;

        [FieldOffset(520)] // size = 16, padding = 0
        public ImRect OuterRectClipped;

        [FieldOffset(536)] // size = 16, padding = 0
        public ImRect InnerRect;

        [FieldOffset(552)] // size = 16, padding = 0
        public ImRect InnerClipRect;

        [FieldOffset(568)] // size = 16, padding = 0
        public ImRect WorkRect;

        [FieldOffset(584)] // size = 16, padding = 0
        public ImRect ParentWorkRect;

        [FieldOffset(600)] // size = 16, padding = 0
        public ImRect ClipRect;

        [FieldOffset(616)] // size = 16, padding = 0
        public ImRect ContentRegionRect;

        [FieldOffset(632)] // size = 4, padding = 0
        public ImVec2ih HitTestHoleSize;

        [FieldOffset(636)] // size = 4, padding = 0
        public ImVec2ih HitTestHoleOffset;

        [FieldOffset(640)] // size = 4, padding = 0
        public int LastFrameActive;

        [FieldOffset(644)] // size = 4, padding = 0
        public float LastTimeActive;

        [FieldOffset(648)] // size = 4, padding = 4
        public float ItemWidthDefault;

        [FieldOffset(656)] // size = 16, padding = 0
        public ImGuiStorage StateStorage;

        [FieldOffset(672)] // size = 16, padding = 0
        public ImVector_ImGuiOldColumns ColumnsStorage;

        [FieldOffset(688)] // size = 4, padding = 0
        public float FontWindowScale;

        [FieldOffset(692)] // size = 4, padding = 0
        public int SettingsOffset;

        [FieldOffset(696)] // size = 8, padding = 0
        public ImDrawList* DrawList;

        [FieldOffset(704)] // size = 200, padding = 0
        public ImDrawList DrawListInst;

        [FieldOffset(904)] // size = 8, padding = 0
        public ImGuiWindow* ParentWindow;

        [FieldOffset(912)] // size = 8, padding = 0
        public ImGuiWindow* RootWindow;

        [FieldOffset(920)] // size = 8, padding = 0
        public ImGuiWindow* RootWindowForTitleBarHighlight;

        [FieldOffset(928)] // size = 8, padding = 0
        public ImGuiWindow* RootWindowForNav;

        [FieldOffset(936)] // size = 8, padding = 0
        public ImGuiWindow* NavLastChildNavWindow;

        [FieldOffset(944)] // size = 8, padding = 0
        public fixed uint _NavLastIds[8 / 4]; // ImGuiID[2]

        public Span<ImGuiID> NavLastIds
        {
            get
            {
                fixed (ImGuiWindow* @this = &this)
                {
                    var pointer = &@this->_NavLastIds[0];
                    var span = new Span<ImGuiID>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(952)] // size = 32, padding = 0
        public fixed uint _NavRectRel[32 / 4]; // ImRect[2]

        public Span<ImRect> NavRectRel
        {
            get
            {
                fixed (ImGuiWindow* @this = &this)
                {
                    var pointer = &@this->_NavRectRel[0];
                    var span = new Span<ImRect>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(984)] // size = 4, padding = 0
        public int MemoryDrawListIdxCapacity;

        [FieldOffset(988)] // size = 4, padding = 0
        public int MemoryDrawListVtxCapacity;

        [FieldOffset(992)] // size = 1, padding = 7
        public CBool MemoryCompacted;
    }

    // Struct @ cimgui.h:273:88 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiOldColumns
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiOldColumns* Data;
    }

    // Struct @ cimgui.h:67:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 136, Pack = 8)]
    public struct ImGuiOldColumns
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiID ID;

        [FieldOffset(4)] // size = 4, padding = 0
        public ImGuiOldColumnFlags Flags;

        [FieldOffset(8)] // size = 1, padding = 0
        public CBool IsFirstFrame;

        [FieldOffset(9)] // size = 1, padding = 2
        public CBool IsBeingResized;

        [FieldOffset(12)] // size = 4, padding = 0
        public int Current;

        [FieldOffset(16)] // size = 4, padding = 0
        public int Count;

        [FieldOffset(20)] // size = 4, padding = 0
        public float OffMinX;

        [FieldOffset(24)] // size = 4, padding = 0
        public float OffMaxX;

        [FieldOffset(28)] // size = 4, padding = 0
        public float LineMinY;

        [FieldOffset(32)] // size = 4, padding = 0
        public float LineMaxY;

        [FieldOffset(36)] // size = 4, padding = 0
        public float HostCursorPosY;

        [FieldOffset(40)] // size = 4, padding = 0
        public float HostCursorMaxPosX;

        [FieldOffset(44)] // size = 16, padding = 0
        public ImRect HostInitialClipRect;

        [FieldOffset(60)] // size = 16, padding = 0
        public ImRect HostBackupClipRect;

        [FieldOffset(76)] // size = 16, padding = 4
        public ImRect HostBackupParentWorkRect;

        [FieldOffset(96)] // size = 16, padding = 0
        public ImVector_ImGuiOldColumnData Columns;

        [FieldOffset(112)] // size = 24, padding = 0
        public ImDrawListSplitter Splitter;
    }

    // Struct @ cimgui.h:272:94 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiOldColumnData
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiOldColumnData* Data;
    }

    // Struct @ cimgui.h:68:35 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 28, Pack = 4)]
    public struct ImGuiOldColumnData
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public float OffsetNorm;

        [FieldOffset(4)] // size = 4, padding = 0
        public float OffsetNormBeforeResize;

        [FieldOffset(8)] // size = 4, padding = 0
        public ImGuiOldColumnFlags Flags;

        [FieldOffset(12)] // size = 16, padding = 0
        public ImRect ClipRect;
    }

    // Struct @ cimgui.h:95:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImGuiStorage
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public ImVector_ImGuiStoragePair Data;
    }

    // Struct @ cimgui.h:278:90 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiStoragePair
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiStoragePair* Data;
    }

    // Struct @ cimgui.h:85:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImGuiStoragePair
    {
        [FieldOffset(0)] // size = 4, padding = 12
        public ImGuiID key;
    }

    // Struct @ cimgui.h:48:25 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 2)]
    public struct ImVec2ih
    {
        [FieldOffset(0)] // size = 2, padding = 0
        public short x;

        [FieldOffset(2)] // size = 2, padding = 0
        public short y;
    }

    // Struct @ cimgui.h:55:36 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 304, Pack = 8)]
    public struct ImGuiWindowTempData
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public Vector2 CursorPos;

        [FieldOffset(8)] // size = 8, padding = 0
        public Vector2 CursorPosPrevLine;

        [FieldOffset(16)] // size = 8, padding = 0
        public Vector2 CursorStartPos;

        [FieldOffset(24)] // size = 8, padding = 0
        public Vector2 CursorMaxPos;

        [FieldOffset(32)] // size = 8, padding = 0
        public Vector2 IdealMaxPos;

        [FieldOffset(40)] // size = 8, padding = 0
        public Vector2 CurrLineSize;

        [FieldOffset(48)] // size = 8, padding = 0
        public Vector2 PrevLineSize;

        [FieldOffset(56)] // size = 4, padding = 0
        public float CurrLineTextBaseOffset;

        [FieldOffset(60)] // size = 4, padding = 0
        public float PrevLineTextBaseOffset;

        [FieldOffset(64)] // size = 4, padding = 0
        public float Indent;

        [FieldOffset(68)] // size = 4, padding = 0
        public float ColumnsOffset;

        [FieldOffset(72)] // size = 4, padding = 0
        public float GroupOffset;

        [FieldOffset(76)] // size = 4, padding = 0
        public ImGuiID LastItemId;

        [FieldOffset(80)] // size = 4, padding = 0
        public ImGuiItemStatusFlags LastItemStatusFlags;

        [FieldOffset(84)] // size = 16, padding = 0
        public ImRect LastItemRect;

        [FieldOffset(100)] // size = 16, padding = 0
        public ImRect LastItemDisplayRect;

        [FieldOffset(116)] // size = 4, padding = 0
        public ImGuiNavLayer NavLayerCurrent;

        [FieldOffset(120)] // size = 4, padding = 0
        public int NavLayerActiveMask;

        [FieldOffset(124)] // size = 4, padding = 0
        public int NavLayerActiveMaskNext;

        [FieldOffset(128)] // size = 4, padding = 0
        public ImGuiID NavFocusScopeIdCurrent;

        [FieldOffset(132)] // size = 1, padding = 0
        public CBool NavHideHighlightOneFrame;

        [FieldOffset(133)] // size = 1, padding = 0
        public CBool NavHasScroll;

        [FieldOffset(134)] // size = 1, padding = 1
        public CBool MenuBarAppending;

        [FieldOffset(136)] // size = 8, padding = 0
        public Vector2 MenuBarOffset;

        [FieldOffset(144)] // size = 36, padding = 0
        public ImGuiMenuColumns MenuColumns;

        [FieldOffset(180)] // size = 4, padding = 0
        public int TreeDepth;

        [FieldOffset(184)] // size = 4, padding = 4
        public uint TreeJumpToParentOnPopMask;

        [FieldOffset(192)] // size = 16, padding = 0
        public ImVector_ImGuiWindowPtr ChildWindows;

        [FieldOffset(208)] // size = 8, padding = 0
        public ImGuiStorage* StateStorage;

        [FieldOffset(216)] // size = 8, padding = 0
        public ImGuiOldColumns* CurrentColumns;

        [FieldOffset(224)] // size = 4, padding = 0
        public int CurrentTableIdx;

        [FieldOffset(228)] // size = 4, padding = 0
        public ImGuiLayoutType LayoutType;

        [FieldOffset(232)] // size = 4, padding = 0
        public ImGuiLayoutType ParentLayoutType;

        [FieldOffset(236)] // size = 4, padding = 0
        public int FocusCounterRegular;

        [FieldOffset(240)] // size = 4, padding = 0
        public int FocusCounterTabStop;

        [FieldOffset(244)] // size = 4, padding = 0
        public ImGuiItemFlags ItemFlags;

        [FieldOffset(248)] // size = 4, padding = 0
        public float ItemWidth;

        [FieldOffset(252)] // size = 4, padding = 0
        public float TextWrapPos;

        [FieldOffset(256)] // size = 16, padding = 0
        public ImVector_float ItemWidthStack;

        [FieldOffset(272)] // size = 16, padding = 0
        public ImVector_float TextWrapPosStack;

        [FieldOffset(288)] // size = 14, padding = 2
        public ImGuiStackSizes StackSizesOnBegin;
    }

    // Struct @ cimgui.h:64:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 14, Pack = 2)]
    public struct ImGuiStackSizes
    {
        [FieldOffset(0)] // size = 2, padding = 0
        public short SizeOfIDStack;

        [FieldOffset(2)] // size = 2, padding = 0
        public short SizeOfColorStack;

        [FieldOffset(4)] // size = 2, padding = 0
        public short SizeOfStyleVarStack;

        [FieldOffset(6)] // size = 2, padding = 0
        public short SizeOfFontStack;

        [FieldOffset(8)] // size = 2, padding = 0
        public short SizeOfFocusScopeStack;

        [FieldOffset(10)] // size = 2, padding = 0
        public short SizeOfGroupStack;

        [FieldOffset(12)] // size = 2, padding = 0
        public short SizeOfBeginPopupStack;
    }

    // Struct @ cimgui.h:73:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 36, Pack = 4)]
    public struct ImGuiMenuColumns
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public float Spacing;

        [FieldOffset(4)] // size = 4, padding = 0
        public float Width;

        [FieldOffset(8)] // size = 4, padding = 0
        public float NextWidth;

        [FieldOffset(12)] // size = 12, padding = 0
        public fixed uint _Pos[12 / 4]; // float[3]

        public Span<float> Pos
        {
            get
            {
                fixed (ImGuiMenuColumns* @this = &this)
                {
                    var pointer = &@this->_Pos[0];
                    var span = new Span<float>(pointer, 3);
                    return span;
                }
            }
        }

        [FieldOffset(24)] // size = 12, padding = 0
        public fixed uint _NextWidths[12 / 4]; // float[3]

        public Span<float> NextWidths
        {
            get
            {
                fixed (ImGuiMenuColumns* @this = &this)
                {
                    var pointer = &@this->_NextWidths[0];
                    var span = new Span<float>(pointer, 3);
                    return span;
                }
            }
        }
    }

    // Struct @ cimgui.h:270:72 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiID
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiID* Data;
    }

    // Struct @ cimgui.h:54:36 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 4)]
    public struct ImGuiWindowSettings
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiID ID;

        [FieldOffset(4)] // size = 4, padding = 0
        public ImVec2ih Pos;

        [FieldOffset(8)] // size = 4, padding = 0
        public ImVec2ih Size;

        [FieldOffset(12)] // size = 1, padding = 0
        public CBool Collapsed;

        [FieldOffset(13)] // size = 1, padding = 2
        public CBool WantApply;
    }

    // Struct @ cimgui.h:58:35 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 4)]
    public struct ImGuiTableSettings
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiID ID;

        [FieldOffset(4)] // size = 4, padding = 0
        public ImGuiTableFlags SaveFlags;

        [FieldOffset(8)] // size = 4, padding = 0
        public float RefScale;

        [FieldOffset(12)] // size = 1, padding = 0
        public ImGuiTableColumnIdx ColumnsCount;

        [FieldOffset(13)] // size = 1, padding = 0
        public ImGuiTableColumnIdx ColumnsCountMax;

        [FieldOffset(14)] // size = 1, padding = 1
        public CBool WantApply;
    }

    // Struct @ cimgui.h:60:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 600, Pack = 8)]
    public struct ImGuiTable
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiID ID;

        [FieldOffset(4)] // size = 4, padding = 0
        public ImGuiTableFlags Flags;

        [FieldOffset(8)] // size = 8, padding = 0
        public void* RawData;

        [FieldOffset(16)] // size = 16, padding = 0
        public ImSpan_ImGuiTableColumn Columns;

        [FieldOffset(32)] // size = 16, padding = 0
        public ImSpan_ImGuiTableColumnIdx DisplayOrderToIndex;

        [FieldOffset(48)] // size = 16, padding = 0
        public ImSpan_ImGuiTableCellData RowCellData;

        [FieldOffset(64)] // size = 8, padding = 0
        public ulong EnabledMaskByDisplayOrder;

        [FieldOffset(72)] // size = 8, padding = 0
        public ulong EnabledMaskByIndex;

        [FieldOffset(80)] // size = 8, padding = 0
        public ulong VisibleMaskByIndex;

        [FieldOffset(88)] // size = 8, padding = 0
        public ulong RequestOutputMaskByIndex;

        [FieldOffset(96)] // size = 4, padding = 0
        public ImGuiTableFlags SettingsLoadedFlags;

        [FieldOffset(100)] // size = 4, padding = 0
        public int SettingsOffset;

        [FieldOffset(104)] // size = 4, padding = 0
        public int LastFrameActive;

        [FieldOffset(108)] // size = 4, padding = 0
        public int ColumnsCount;

        [FieldOffset(112)] // size = 4, padding = 0
        public int CurrentRow;

        [FieldOffset(116)] // size = 4, padding = 0
        public int CurrentColumn;

        [FieldOffset(120)] // size = 2, padding = 0
        public short InstanceCurrent;

        [FieldOffset(122)] // size = 2, padding = 0
        public short InstanceInteracted;

        [FieldOffset(124)] // size = 4, padding = 0
        public float RowPosY1;

        [FieldOffset(128)] // size = 4, padding = 0
        public float RowPosY2;

        [FieldOffset(132)] // size = 4, padding = 0
        public float RowMinHeight;

        [FieldOffset(136)] // size = 4, padding = 0
        public float RowTextBaseline;

        [FieldOffset(140)] // size = 4, padding = 0
        public float RowIndentOffsetX;

        [FieldOffset(144)] // size = 4, padding = -2
        public ImGuiTableRowFlags RowFlags;

        [FieldOffset(146)] // size = 4, padding = -2
        public ImGuiTableRowFlags LastRowFlags;

        [FieldOffset(148)] // size = 4, padding = 0
        public int RowBgColorCounter;

        [FieldOffset(152)] // size = 8, padding = 0
        public fixed uint _RowBgColor[8 / 4]; // ImU32[2]

        public Span<uint> RowBgColor
        {
            get
            {
                fixed (ImGuiTable* @this = &this)
                {
                    var pointer = &@this->_RowBgColor[0];
                    var span = new Span<uint>(pointer, 2);
                    return span;
                }
            }
        }

        [FieldOffset(160)] // size = 4, padding = 0
        public uint BorderColorStrong;

        [FieldOffset(164)] // size = 4, padding = 0
        public uint BorderColorLight;

        [FieldOffset(168)] // size = 4, padding = 0
        public float BorderX1;

        [FieldOffset(172)] // size = 4, padding = 0
        public float BorderX2;

        [FieldOffset(176)] // size = 4, padding = 0
        public float HostIndentX;

        [FieldOffset(180)] // size = 4, padding = 0
        public float MinColumnWidth;

        [FieldOffset(184)] // size = 4, padding = 0
        public float OuterPaddingX;

        [FieldOffset(188)] // size = 4, padding = 0
        public float CellPaddingX;

        [FieldOffset(192)] // size = 4, padding = 0
        public float CellPaddingY;

        [FieldOffset(196)] // size = 4, padding = 0
        public float CellSpacingX1;

        [FieldOffset(200)] // size = 4, padding = 0
        public float CellSpacingX2;

        [FieldOffset(204)] // size = 4, padding = 0
        public float LastOuterHeight;

        [FieldOffset(208)] // size = 4, padding = 0
        public float LastFirstRowHeight;

        [FieldOffset(212)] // size = 4, padding = 0
        public float InnerWidth;

        [FieldOffset(216)] // size = 4, padding = 0
        public float ColumnsGivenWidth;

        [FieldOffset(220)] // size = 4, padding = 0
        public float ColumnsAutoFitWidth;

        [FieldOffset(224)] // size = 4, padding = 0
        public float ResizedColumnNextWidth;

        [FieldOffset(228)] // size = 4, padding = 0
        public float ResizeLockMinContentsX2;

        [FieldOffset(232)] // size = 4, padding = 0
        public float RefScale;

        [FieldOffset(236)] // size = 16, padding = 0
        public ImRect OuterRect;

        [FieldOffset(252)] // size = 16, padding = 0
        public ImRect InnerRect;

        [FieldOffset(268)] // size = 16, padding = 0
        public ImRect WorkRect;

        [FieldOffset(284)] // size = 16, padding = 0
        public ImRect InnerClipRect;

        [FieldOffset(300)] // size = 16, padding = 0
        public ImRect BgClipRect;

        [FieldOffset(316)] // size = 16, padding = 0
        public ImRect Bg0ClipRectForDrawCmd;

        [FieldOffset(332)] // size = 16, padding = 0
        public ImRect Bg2ClipRectForDrawCmd;

        [FieldOffset(348)] // size = 16, padding = 0
        public ImRect HostClipRect;

        [FieldOffset(364)] // size = 16, padding = 0
        public ImRect HostBackupWorkRect;

        [FieldOffset(380)] // size = 16, padding = 0
        public ImRect HostBackupParentWorkRect;

        [FieldOffset(396)] // size = 16, padding = 0
        public ImRect HostBackupInnerClipRect;

        [FieldOffset(412)] // size = 8, padding = 0
        public Vector2 HostBackupPrevLineSize;

        [FieldOffset(420)] // size = 8, padding = 0
        public Vector2 HostBackupCurrLineSize;

        [FieldOffset(428)] // size = 8, padding = 0
        public Vector2 HostBackupCursorMaxPos;

        [FieldOffset(436)] // size = 8, padding = 0
        public Vector2 UserOuterSize;

        [FieldOffset(444)] // size = 4, padding = 0
        public float HostBackupColumnsOffset;

        [FieldOffset(448)] // size = 4, padding = 0
        public float HostBackupItemWidth;

        [FieldOffset(452)] // size = 4, padding = 0
        public int HostBackupItemWidthStackSize;

        [FieldOffset(456)] // size = 8, padding = 0
        public ImGuiWindow* OuterWindow;

        [FieldOffset(464)] // size = 8, padding = 0
        public ImGuiWindow* InnerWindow;

        [FieldOffset(472)] // size = 16, padding = 0
        public ImGuiTextBuffer ColumnsNames;

        [FieldOffset(488)] // size = 24, padding = 0
        public ImDrawListSplitter DrawSplitter;

        [FieldOffset(512)] // size = 12, padding = 4
        public ImGuiTableColumnSortSpecs SortSpecsSingle;

        [FieldOffset(528)] // size = 16, padding = 0
        public ImVector_ImGuiTableColumnSortSpecs SortSpecsMulti;

        [FieldOffset(544)] // size = 16, padding = 0
        public ImGuiTableSortSpecs SortSpecs;

        [FieldOffset(560)] // size = 1, padding = 0
        public ImGuiTableColumnIdx SortSpecsCount;

        [FieldOffset(561)] // size = 1, padding = 0
        public ImGuiTableColumnIdx ColumnsEnabledCount;

        [FieldOffset(562)] // size = 1, padding = 0
        public ImGuiTableColumnIdx ColumnsEnabledFixedCount;

        [FieldOffset(563)] // size = 1, padding = 0
        public ImGuiTableColumnIdx DeclColumnsCount;

        [FieldOffset(564)] // size = 1, padding = 0
        public ImGuiTableColumnIdx HoveredColumnBody;

        [FieldOffset(565)] // size = 1, padding = 0
        public ImGuiTableColumnIdx HoveredColumnBorder;

        [FieldOffset(566)] // size = 1, padding = 0
        public ImGuiTableColumnIdx AutoFitSingleColumn;

        [FieldOffset(567)] // size = 1, padding = 0
        public ImGuiTableColumnIdx ResizedColumn;

        [FieldOffset(568)] // size = 1, padding = 0
        public ImGuiTableColumnIdx LastResizedColumn;

        [FieldOffset(569)] // size = 1, padding = 0
        public ImGuiTableColumnIdx HeldHeaderColumn;

        [FieldOffset(570)] // size = 1, padding = 0
        public ImGuiTableColumnIdx ReorderColumn;

        [FieldOffset(571)] // size = 1, padding = 0
        public ImGuiTableColumnIdx ReorderColumnDir;

        [FieldOffset(572)] // size = 1, padding = 0
        public ImGuiTableColumnIdx LeftMostEnabledColumn;

        [FieldOffset(573)] // size = 1, padding = 0
        public ImGuiTableColumnIdx RightMostEnabledColumn;

        [FieldOffset(574)] // size = 1, padding = 0
        public ImGuiTableColumnIdx LeftMostStretchedColumn;

        [FieldOffset(575)] // size = 1, padding = 0
        public ImGuiTableColumnIdx RightMostStretchedColumn;

        [FieldOffset(576)] // size = 1, padding = 0
        public ImGuiTableColumnIdx ContextPopupColumn;

        [FieldOffset(577)] // size = 1, padding = 0
        public ImGuiTableColumnIdx FreezeRowsRequest;

        [FieldOffset(578)] // size = 1, padding = 0
        public ImGuiTableColumnIdx FreezeRowsCount;

        [FieldOffset(579)] // size = 1, padding = 0
        public ImGuiTableColumnIdx FreezeColumnsRequest;

        [FieldOffset(580)] // size = 1, padding = 0
        public ImGuiTableColumnIdx FreezeColumnsCount;

        [FieldOffset(581)] // size = 1, padding = 0
        public ImGuiTableColumnIdx RowCellDataCurrent;

        [FieldOffset(582)] // size = 1, padding = 0
        public ImGuiTableDrawChannelIdx DummyDrawChannel;

        [FieldOffset(583)] // size = 1, padding = 0
        public ImGuiTableDrawChannelIdx Bg2DrawChannelCurrent;

        [FieldOffset(584)] // size = 1, padding = 0
        public ImGuiTableDrawChannelIdx Bg2DrawChannelUnfrozen;

        [FieldOffset(585)] // size = 1, padding = 0
        public CBool IsLayoutLocked;

        [FieldOffset(586)] // size = 1, padding = 0
        public CBool IsInsideRow;

        [FieldOffset(587)] // size = 1, padding = 0
        public CBool IsInitializing;

        [FieldOffset(588)] // size = 1, padding = 0
        public CBool IsSortSpecsDirty;

        [FieldOffset(589)] // size = 1, padding = 0
        public CBool IsUsingHeaders;

        [FieldOffset(590)] // size = 1, padding = 0
        public CBool IsContextPopupOpen;

        [FieldOffset(591)] // size = 1, padding = 0
        public CBool IsSettingsRequestLoad;

        [FieldOffset(592)] // size = 1, padding = 0
        public CBool IsSettingsDirty;

        [FieldOffset(593)] // size = 1, padding = 0
        public CBool IsDefaultDisplayOrder;

        [FieldOffset(594)] // size = 1, padding = 0
        public CBool IsResetAllRequest;

        [FieldOffset(595)] // size = 1, padding = 0
        public CBool IsResetDisplayOrderRequest;

        [FieldOffset(596)] // size = 1, padding = 0
        public CBool IsUnfrozenRows;

        [FieldOffset(597)] // size = 1, padding = 0
        public CBool IsDefaultSizingPolicy;

        [FieldOffset(598)] // size = 1, padding = 0
        public CBool MemoryCompacted;

        [FieldOffset(599)] // size = 1, padding = 0
        public CBool HostSkipItems;
    }

    // Struct @ cimgui.h:93:36 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImGuiTableSortSpecs
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ImGuiTableColumnSortSpecs* Specs;

        [FieldOffset(8)] // size = 4, padding = 0
        public int SpecsCount;

        [FieldOffset(12)] // size = 1, padding = 3
        public CBool SpecsDirty;
    }

    // Struct @ cimgui.h:281:108 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiTableColumnSortSpecs
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiTableColumnSortSpecs* Data;
    }

    // Struct @ cimgui.h:92:42 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ImGuiTableColumnSortSpecs
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiID ColumnUserID;

        [FieldOffset(4)] // size = 2, padding = 0
        public short ColumnIndex;

        [FieldOffset(6)] // size = 2, padding = 0
        public short SortOrder;

        [FieldOffset(8)] // size = 4, padding = 0
        public ImGuiSortDirection SortDirection;
    }

    // Struct @ cimgui.h:255:98 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImSpan_ImGuiTableCellData
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ImGuiTableCellData* Data;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiTableCellData* DataEnd;
    }

    // Struct @ cimgui.h:43:35 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 4)]
    public struct ImGuiTableCellData
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public uint BgColor;

        [FieldOffset(4)] // size = 1, padding = 3
        public ImGuiTableColumnIdx Column;
    }

    // Struct @ cimgui.h:257:101 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImSpan_ImGuiTableColumnIdx
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ImGuiTableColumnIdx* Data;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiTableColumnIdx* DataEnd;
    }

    // Struct @ cimgui.h:256:92 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImSpan_ImGuiTableColumn
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ImGuiTableColumn* Data;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiTableColumn* DataEnd;
    }

    // Struct @ cimgui.h:59:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 104, Pack = 4)]
    public struct ImGuiTableColumn
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiTableColumnFlags Flags;

        [FieldOffset(4)] // size = 4, padding = 0
        public float WidthGiven;

        [FieldOffset(8)] // size = 4, padding = 0
        public float MinX;

        [FieldOffset(12)] // size = 4, padding = 0
        public float MaxX;

        [FieldOffset(16)] // size = 4, padding = 0
        public float WidthRequest;

        [FieldOffset(20)] // size = 4, padding = 0
        public float WidthAuto;

        [FieldOffset(24)] // size = 4, padding = 0
        public float StretchWeight;

        [FieldOffset(28)] // size = 4, padding = 0
        public float InitStretchWeightOrWidth;

        [FieldOffset(32)] // size = 16, padding = 0
        public ImRect ClipRect;

        [FieldOffset(48)] // size = 4, padding = 0
        public ImGuiID UserID;

        [FieldOffset(52)] // size = 4, padding = 0
        public float WorkMinX;

        [FieldOffset(56)] // size = 4, padding = 0
        public float WorkMaxX;

        [FieldOffset(60)] // size = 4, padding = 0
        public float ItemWidth;

        [FieldOffset(64)] // size = 4, padding = 0
        public float ContentMaxXFrozen;

        [FieldOffset(68)] // size = 4, padding = 0
        public float ContentMaxXUnfrozen;

        [FieldOffset(72)] // size = 4, padding = 0
        public float ContentMaxXHeadersUsed;

        [FieldOffset(76)] // size = 4, padding = 0
        public float ContentMaxXHeadersIdeal;

        [FieldOffset(80)] // size = 2, padding = 0
        public short NameOffset;

        [FieldOffset(82)] // size = 1, padding = 0
        public ImGuiTableColumnIdx DisplayOrder;

        [FieldOffset(83)] // size = 1, padding = 0
        public ImGuiTableColumnIdx IndexWithinEnabledSet;

        [FieldOffset(84)] // size = 1, padding = 0
        public ImGuiTableColumnIdx PrevEnabledColumn;

        [FieldOffset(85)] // size = 1, padding = 0
        public ImGuiTableColumnIdx NextEnabledColumn;

        [FieldOffset(86)] // size = 1, padding = 0
        public ImGuiTableColumnIdx SortOrder;

        [FieldOffset(87)] // size = 1, padding = 0
        public ImGuiTableDrawChannelIdx DrawChannelCurrent;

        [FieldOffset(88)] // size = 1, padding = 0
        public ImGuiTableDrawChannelIdx DrawChannelFrozen;

        [FieldOffset(89)] // size = 1, padding = 0
        public ImGuiTableDrawChannelIdx DrawChannelUnfrozen;

        [FieldOffset(90)] // size = 1, padding = 0
        public CBool IsEnabled;

        [FieldOffset(91)] // size = 1, padding = 0
        public CBool IsEnabledNextFrame;

        [FieldOffset(92)] // size = 1, padding = 0
        public CBool IsVisibleX;

        [FieldOffset(93)] // size = 1, padding = 0
        public CBool IsVisibleY;

        [FieldOffset(94)] // size = 1, padding = 0
        public CBool IsRequestOutput;

        [FieldOffset(95)] // size = 1, padding = 0
        public CBool IsSkipItems;

        [FieldOffset(96)] // size = 1, padding = 0
        public CBool IsPreserveWidthAuto;

        [FieldOffset(97)] // size = 1, padding = 0
        public sbyte NavLayerCurrent;

        [FieldOffset(98)] // size = 1, padding = 0
        public byte AutoFitQueue;

        [FieldOffset(99)] // size = 1, padding = 0
        public byte CannotSkipItemsQueue;

        [FieldOffset(100)] // size = 1, padding = -1
        public byte SortDirection;

        [FieldOffset(100)] // size = 1, padding = -1
        public byte SortDirectionsAvailCount;

        [FieldOffset(100)] // size = 1, padding = 0
        public byte SortDirectionsAvailMask;

        [FieldOffset(101)] // size = 1, padding = 2
        public byte SortDirectionsAvailList;
    }

    // Struct @ cimgui.h:62:28 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 152, Pack = 8)]
    public struct ImGuiTabBar
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public ImVector_ImGuiTabItem Tabs;

        [FieldOffset(16)] // size = 4, padding = 0
        public ImGuiTabBarFlags Flags;

        [FieldOffset(20)] // size = 4, padding = 0
        public ImGuiID ID;

        [FieldOffset(24)] // size = 4, padding = 0
        public ImGuiID SelectedTabId;

        [FieldOffset(28)] // size = 4, padding = 0
        public ImGuiID NextSelectedTabId;

        [FieldOffset(32)] // size = 4, padding = 0
        public ImGuiID VisibleTabId;

        [FieldOffset(36)] // size = 4, padding = 0
        public int CurrFrameVisible;

        [FieldOffset(40)] // size = 4, padding = 0
        public int PrevFrameVisible;

        [FieldOffset(44)] // size = 16, padding = 0
        public ImRect BarRect;

        [FieldOffset(60)] // size = 4, padding = 0
        public float CurrTabsContentsHeight;

        [FieldOffset(64)] // size = 4, padding = 0
        public float PrevTabsContentsHeight;

        [FieldOffset(68)] // size = 4, padding = 0
        public float WidthAllTabs;

        [FieldOffset(72)] // size = 4, padding = 0
        public float WidthAllTabsIdeal;

        [FieldOffset(76)] // size = 4, padding = 0
        public float ScrollingAnim;

        [FieldOffset(80)] // size = 4, padding = 0
        public float ScrollingTarget;

        [FieldOffset(84)] // size = 4, padding = 0
        public float ScrollingTargetDistToVisibility;

        [FieldOffset(88)] // size = 4, padding = 0
        public float ScrollingSpeed;

        [FieldOffset(92)] // size = 4, padding = 0
        public float ScrollingRectMinX;

        [FieldOffset(96)] // size = 4, padding = 0
        public float ScrollingRectMaxX;

        [FieldOffset(100)] // size = 4, padding = 0
        public ImGuiID ReorderRequestTabId;

        [FieldOffset(104)] // size = 1, padding = 0
        public sbyte ReorderRequestDir;

        [FieldOffset(105)] // size = 1, padding = 0
        public sbyte BeginCount;

        [FieldOffset(106)] // size = 1, padding = 0
        public CBool WantLayout;

        [FieldOffset(107)] // size = 1, padding = 0
        public CBool VisibleTabWasSubmitted;

        [FieldOffset(108)] // size = 1, padding = 1
        public CBool TabsAddedNew;

        [FieldOffset(110)] // size = 2, padding = 0
        public short TabsActiveCount;

        [FieldOffset(112)] // size = 2, padding = 2
        public short LastTabItemIdx;

        [FieldOffset(116)] // size = 4, padding = 0
        public float ItemSpacingY;

        [FieldOffset(120)] // size = 8, padding = 0
        public Vector2 FramePadding;

        [FieldOffset(128)] // size = 8, padding = 0
        public Vector2 BackupCursorPos;

        [FieldOffset(136)] // size = 16, padding = 0
        public ImGuiTextBuffer TabsNames;
    }

    // Struct @ cimgui.h:280:82 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiTabItem
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiTabItem* Data;
    }

    // Struct @ cimgui.h:61:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 36, Pack = 4)]
    public struct ImGuiTabItem
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiID ID;

        [FieldOffset(4)] // size = 4, padding = 0
        public ImGuiTabItemFlags Flags;

        [FieldOffset(8)] // size = 4, padding = 0
        public int LastFrameVisible;

        [FieldOffset(12)] // size = 4, padding = 0
        public int LastFrameSelected;

        [FieldOffset(16)] // size = 4, padding = 0
        public float Offset;

        [FieldOffset(20)] // size = 4, padding = 0
        public float Width;

        [FieldOffset(24)] // size = 4, padding = 0
        public float ContentWidth;

        [FieldOffset(28)] // size = 2, padding = 0
        public short NameOffset;

        [FieldOffset(30)] // size = 2, padding = 0
        public short BeginOrder;

        [FieldOffset(32)] // size = 2, padding = 0
        public short IndexDuringLayout;

        [FieldOffset(34)] // size = 1, padding = 1
        public CBool WantClose;
    }

    // Struct @ cimgui.h:75:36 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 3736, Pack = 8)]
    public struct ImGuiInputTextState
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiID ID;

        [FieldOffset(4)] // size = 4, padding = 0
        public int CurLenW;

        [FieldOffset(8)] // size = 4, padding = 4
        public int CurLenA;

        [FieldOffset(16)] // size = 16, padding = 0
        public ImVector_ImWchar TextW;

        [FieldOffset(32)] // size = 16, padding = 0
        public ImVector_char TextA;

        [FieldOffset(48)] // size = 16, padding = 0
        public ImVector_char InitialTextA;

        [FieldOffset(64)] // size = 1, padding = 3
        public CBool TextAIsValid;

        [FieldOffset(68)] // size = 4, padding = 0
        public int BufCapacityA;

        [FieldOffset(72)] // size = 4, padding = 0
        public float ScrollX;

        [FieldOffset(76)] // size = 3628, padding = 0
        public STB_TexteditState Stb;

        [FieldOffset(3704)] // size = 4, padding = 0
        public float CursorAnim;

        [FieldOffset(3708)] // size = 1, padding = 0
        public CBool CursorFollow;

        [FieldOffset(3709)] // size = 1, padding = 0
        public CBool SelectedAllMouseLock;

        [FieldOffset(3710)] // size = 1, padding = 1
        public CBool Edited;

        [FieldOffset(3712)] // size = 4, padding = 4
        public ImGuiInputTextFlags UserFlags;

        [FieldOffset(3720)] // size = 8, padding = 0
        public ImGuiInputTextCallback UserCallback;

        [FieldOffset(3728)] // size = 8, padding = 0
        public void* UserCallbackData;
    }

    // Struct @ cimgui.h:100:43 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 56, Pack = 8)]
    public struct ImGuiInputTextCallbackData
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiInputTextFlags EventFlag;

        [FieldOffset(4)] // size = 4, padding = 0
        public ImGuiInputTextFlags Flags;

        [FieldOffset(8)] // size = 8, padding = 0
        public void* UserData;

        [FieldOffset(16)] // size = 2, padding = 2
        public char EventChar;

        [FieldOffset(20)] // size = 4, padding = 0
        public ImGuiKey EventKey;

        [FieldOffset(24)] // size = 8, padding = 0
        public CString8U Buf;

        [FieldOffset(32)] // size = 4, padding = 0
        public int BufTextLen;

        [FieldOffset(36)] // size = 4, padding = 0
        public int BufSize;

        [FieldOffset(40)] // size = 1, padding = 3
        public CBool BufDirty;

        [FieldOffset(44)] // size = 4, padding = 0
        public int CursorPos;

        [FieldOffset(48)] // size = 4, padding = 0
        public int SelectionStart;

        [FieldOffset(52)] // size = 4, padding = 0
        public int SelectionEnd;
    }

    // Struct @ cimgui.h:51:34 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 3628, Pack = 4)]
    public struct STB_TexteditState
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int cursor;

        [FieldOffset(4)] // size = 4, padding = 0
        public int select_start;

        [FieldOffset(8)] // size = 4, padding = 0
        public int select_end;

        [FieldOffset(12)] // size = 1, padding = 3
        public byte insert_mode;

        [FieldOffset(16)] // size = 4, padding = 0
        public int row_count_per_page;

        [FieldOffset(20)] // size = 1, padding = 0
        public byte cursor_at_end_of_line;

        [FieldOffset(21)] // size = 1, padding = 0
        public byte initialized;

        [FieldOffset(22)] // size = 1, padding = 0
        public byte has_preferred_x;

        [FieldOffset(23)] // size = 1, padding = 0
        public byte single_line;

        [FieldOffset(24)] // size = 1, padding = 0
        public byte padding1;

        [FieldOffset(25)] // size = 1, padding = 0
        public byte padding2;

        [FieldOffset(26)] // size = 1, padding = 1
        public byte padding3;

        [FieldOffset(28)] // size = 4, padding = 0
        public float preferred_x;

        [FieldOffset(32)] // size = 3596, padding = 0
        public StbUndoState undostate;
    }

    // Struct @ cimgui.h:52:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 3596, Pack = 4)]
    public struct StbUndoState
    {
        [FieldOffset(0)] // size = 1584, padding = 0
        public fixed uint _undo_rec[1584 / 4]; // StbUndoRecord[99]

        public Span<StbUndoRecord> undo_rec
        {
            get
            {
                fixed (StbUndoState* @this = &this)
                {
                    var pointer = &@this->_undo_rec[0];
                    var span = new Span<StbUndoRecord>(pointer, 99);
                    return span;
                }
            }
        }

        [FieldOffset(1584)] // size = 1998, padding = 0
        public fixed ushort _undo_char[1998 / 2]; // ImWchar[999]

        public Span<char> undo_char
        {
            get
            {
                fixed (StbUndoState* @this = &this)
                {
                    var pointer = &@this->_undo_char[0];
                    var span = new Span<char>(pointer, 999);
                    return span;
                }
            }
        }

        [FieldOffset(3582)] // size = 2, padding = 0
        public short undo_point;

        [FieldOffset(3584)] // size = 2, padding = 2
        public short redo_point;

        [FieldOffset(3588)] // size = 4, padding = 0
        public int undo_char_point;

        [FieldOffset(3592)] // size = 4, padding = 0
        public int redo_char_point;
    }

    // Struct @ cimgui.h:53:30 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 4)]
    public struct StbUndoRecord
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int where;

        [FieldOffset(4)] // size = 4, padding = 0
        public int insert_length;

        [FieldOffset(8)] // size = 4, padding = 0
        public int delete_length;

        [FieldOffset(12)] // size = 4, padding = 0
        public int char_storage;
    }

    // Struct @ cimgui.h:77:34 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ImGuiDataTypeInfo
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ulong Size;

        [FieldOffset(8)] // size = 8, padding = 0
        public CString8U Name;

        [FieldOffset(16)] // size = 8, padding = 0
        public CString8U PrintFmt;

        [FieldOffset(24)] // size = 8, padding = 0
        public CString8U ScanFmt;
    }

    // Struct @ cimgui.h:102:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16088, Pack = 8)]
    public struct ImGuiContext
    {
        [FieldOffset(0)] // size = 1, padding = 0
        public CBool Initialized;

        [FieldOffset(1)] // size = 1, padding = 6
        public CBool FontAtlasOwnedByContext;

        [FieldOffset(8)] // size = 5464, padding = 0
        public ImGuiIO IO;

        [FieldOffset(5472)] // size = 1044, padding = 4
        public ImGuiStyle Style;

        [FieldOffset(6520)] // size = 8, padding = 0
        public ImFont* Font;

        [FieldOffset(6528)] // size = 4, padding = 0
        public float FontSize;

        [FieldOffset(6532)] // size = 4, padding = 0
        public float FontBaseSize;

        [FieldOffset(6536)] // size = 512, padding = 0
        public ImDrawListSharedData DrawListSharedData;

        [FieldOffset(7048)] // size = 8, padding = 0
        public double Time;

        [FieldOffset(7056)] // size = 4, padding = 0
        public int FrameCount;

        [FieldOffset(7060)] // size = 4, padding = 0
        public int FrameCountEnded;

        [FieldOffset(7064)] // size = 4, padding = 0
        public int FrameCountRendered;

        [FieldOffset(7068)] // size = 1, padding = 0
        public CBool WithinFrameScope;

        [FieldOffset(7069)] // size = 1, padding = 0
        public CBool WithinFrameScopeWithImplicitWindow;

        [FieldOffset(7070)] // size = 1, padding = 0
        public CBool WithinEndChild;

        [FieldOffset(7071)] // size = 1, padding = 0
        public CBool GcCompactAll;

        [FieldOffset(7072)] // size = 1, padding = 3
        public CBool TestEngineHookItems;

        [FieldOffset(7076)] // size = 4, padding = 0
        public ImGuiID TestEngineHookIdInfo;

        [FieldOffset(7080)] // size = 8, padding = 0
        public void* TestEngine;

        [FieldOffset(7088)] // size = 16, padding = 0
        public ImVector_ImGuiWindowPtr Windows;

        [FieldOffset(7104)] // size = 16, padding = 0
        public ImVector_ImGuiWindowPtr WindowsFocusOrder;

        [FieldOffset(7120)] // size = 16, padding = 0
        public ImVector_ImGuiWindowPtr WindowsTempSortBuffer;

        [FieldOffset(7136)] // size = 16, padding = 0
        public ImVector_ImGuiWindowPtr CurrentWindowStack;

        [FieldOffset(7152)] // size = 16, padding = 0
        public ImGuiStorage WindowsById;

        [FieldOffset(7168)] // size = 4, padding = 4
        public int WindowsActiveCount;

        [FieldOffset(7176)] // size = 8, padding = 0
        public ImGuiWindow* CurrentWindow;

        [FieldOffset(7184)] // size = 8, padding = 0
        public ImGuiWindow* HoveredWindow;

        [FieldOffset(7192)] // size = 8, padding = 0
        public ImGuiWindow* HoveredWindowUnderMovingWindow;

        [FieldOffset(7200)] // size = 8, padding = 0
        public ImGuiWindow* MovingWindow;

        [FieldOffset(7208)] // size = 8, padding = 0
        public ImGuiWindow* WheelingWindow;

        [FieldOffset(7216)] // size = 8, padding = 0
        public Vector2 WheelingWindowRefMousePos;

        [FieldOffset(7224)] // size = 4, padding = 0
        public float WheelingWindowTimer;

        [FieldOffset(7228)] // size = 4, padding = 0
        public ImGuiID HoveredId;

        [FieldOffset(7232)] // size = 4, padding = 0
        public ImGuiID HoveredIdPreviousFrame;

        [FieldOffset(7236)] // size = 1, padding = 0
        public CBool HoveredIdAllowOverlap;

        [FieldOffset(7237)] // size = 1, padding = 0
        public CBool HoveredIdUsingMouseWheel;

        [FieldOffset(7238)] // size = 1, padding = 0
        public CBool HoveredIdPreviousFrameUsingMouseWheel;

        [FieldOffset(7239)] // size = 1, padding = 0
        public CBool HoveredIdDisabled;

        [FieldOffset(7240)] // size = 4, padding = 0
        public float HoveredIdTimer;

        [FieldOffset(7244)] // size = 4, padding = 0
        public float HoveredIdNotActiveTimer;

        [FieldOffset(7248)] // size = 4, padding = 0
        public ImGuiID ActiveId;

        [FieldOffset(7252)] // size = 4, padding = 0
        public ImGuiID ActiveIdIsAlive;

        [FieldOffset(7256)] // size = 4, padding = 0
        public float ActiveIdTimer;

        [FieldOffset(7260)] // size = 1, padding = 0
        public CBool ActiveIdIsJustActivated;

        [FieldOffset(7261)] // size = 1, padding = 0
        public CBool ActiveIdAllowOverlap;

        [FieldOffset(7262)] // size = 1, padding = 0
        public CBool ActiveIdNoClearOnFocusLoss;

        [FieldOffset(7263)] // size = 1, padding = 0
        public CBool ActiveIdHasBeenPressedBefore;

        [FieldOffset(7264)] // size = 1, padding = 0
        public CBool ActiveIdHasBeenEditedBefore;

        [FieldOffset(7265)] // size = 1, padding = 0
        public CBool ActiveIdHasBeenEditedThisFrame;

        [FieldOffset(7266)] // size = 1, padding = 1
        public CBool ActiveIdUsingMouseWheel;

        [FieldOffset(7268)] // size = 4, padding = 0
        public uint ActiveIdUsingNavDirMask;

        [FieldOffset(7272)] // size = 4, padding = 4
        public uint ActiveIdUsingNavInputMask;

        [FieldOffset(7280)] // size = 8, padding = 0
        public ulong ActiveIdUsingKeyInputMask;

        [FieldOffset(7288)] // size = 8, padding = 0
        public Vector2 ActiveIdClickOffset;

        [FieldOffset(7296)] // size = 8, padding = 0
        public ImGuiWindow* ActiveIdWindow;

        [FieldOffset(7304)] // size = 4, padding = 0
        public ImGuiInputSource ActiveIdSource;

        [FieldOffset(7308)] // size = 4, padding = 0
        public int ActiveIdMouseButton;

        [FieldOffset(7312)] // size = 4, padding = 0
        public ImGuiID ActiveIdPreviousFrame;

        [FieldOffset(7316)] // size = 1, padding = 0
        public CBool ActiveIdPreviousFrameIsAlive;

        [FieldOffset(7317)] // size = 1, padding = 2
        public CBool ActiveIdPreviousFrameHasBeenEditedBefore;

        [FieldOffset(7320)] // size = 8, padding = 0
        public ImGuiWindow* ActiveIdPreviousFrameWindow;

        [FieldOffset(7328)] // size = 4, padding = 0
        public ImGuiID LastActiveId;

        [FieldOffset(7332)] // size = 4, padding = 0
        public float LastActiveIdTimer;

        [FieldOffset(7336)] // size = 112, padding = 0
        public ImGuiNextWindowData NextWindowData;

        [FieldOffset(7448)] // size = 20, padding = 4
        public ImGuiNextItemData NextItemData;

        [FieldOffset(7472)] // size = 16, padding = 0
        public ImVector_ImGuiColorMod ColorStack;

        [FieldOffset(7488)] // size = 16, padding = 0
        public ImVector_ImGuiStyleMod StyleVarStack;

        [FieldOffset(7504)] // size = 16, padding = 0
        public ImVector_ImFontPtr FontStack;

        [FieldOffset(7520)] // size = 16, padding = 0
        public ImVector_ImGuiID FocusScopeStack;

        [FieldOffset(7536)] // size = 16, padding = 0
        public ImVector_ImGuiItemFlags ItemFlagsStack;

        [FieldOffset(7552)] // size = 16, padding = 0
        public ImVector_ImGuiGroupData GroupStack;

        [FieldOffset(7568)] // size = 16, padding = 0
        public ImVector_ImGuiPopupData OpenPopupStack;

        [FieldOffset(7584)] // size = 16, padding = 0
        public ImVector_ImGuiPopupData BeginPopupStack;

        [FieldOffset(7600)] // size = 16, padding = 0
        public ImVector_ImGuiViewportPPtr Viewports;

        [FieldOffset(7616)] // size = 8, padding = 0
        public ImGuiWindow* NavWindow;

        [FieldOffset(7624)] // size = 4, padding = 0
        public ImGuiID NavId;

        [FieldOffset(7628)] // size = 4, padding = 0
        public ImGuiID NavFocusScopeId;

        [FieldOffset(7632)] // size = 4, padding = 0
        public ImGuiID NavActivateId;

        [FieldOffset(7636)] // size = 4, padding = 0
        public ImGuiID NavActivateDownId;

        [FieldOffset(7640)] // size = 4, padding = 0
        public ImGuiID NavActivatePressedId;

        [FieldOffset(7644)] // size = 4, padding = 0
        public ImGuiID NavInputId;

        [FieldOffset(7648)] // size = 4, padding = 0
        public ImGuiID NavJustTabbedId;

        [FieldOffset(7652)] // size = 4, padding = 0
        public ImGuiID NavJustMovedToId;

        [FieldOffset(7656)] // size = 4, padding = 0
        public ImGuiID NavJustMovedToFocusScopeId;

        [FieldOffset(7660)] // size = 4, padding = 0
        public ImGuiKeyModFlags NavJustMovedToKeyMods;

        [FieldOffset(7664)] // size = 4, padding = 0
        public ImGuiID NavNextActivateId;

        [FieldOffset(7668)] // size = 4, padding = 0
        public ImGuiInputSource NavInputSource;

        [FieldOffset(7672)] // size = 16, padding = 0
        public ImRect NavScoringRect;

        [FieldOffset(7688)] // size = 4, padding = 0
        public int NavScoringCount;

        [FieldOffset(7692)] // size = 4, padding = 0
        public ImGuiNavLayer NavLayer;

        [FieldOffset(7696)] // size = 4, padding = 0
        public int NavIdTabCounter;

        [FieldOffset(7700)] // size = 1, padding = 0
        public CBool NavIdIsAlive;

        [FieldOffset(7701)] // size = 1, padding = 0
        public CBool NavMousePosDirty;

        [FieldOffset(7702)] // size = 1, padding = 0
        public CBool NavDisableHighlight;

        [FieldOffset(7703)] // size = 1, padding = 0
        public CBool NavDisableMouseHover;

        [FieldOffset(7704)] // size = 1, padding = 0
        public CBool NavAnyRequest;

        [FieldOffset(7705)] // size = 1, padding = 0
        public CBool NavInitRequest;

        [FieldOffset(7706)] // size = 1, padding = 1
        public CBool NavInitRequestFromMove;

        [FieldOffset(7708)] // size = 4, padding = 0
        public ImGuiID NavInitResultId;

        [FieldOffset(7712)] // size = 16, padding = 0
        public ImRect NavInitResultRectRel;

        [FieldOffset(7728)] // size = 1, padding = 3
        public CBool NavMoveRequest;

        [FieldOffset(7732)] // size = 4, padding = 0
        public ImGuiNavMoveFlags NavMoveRequestFlags;

        [FieldOffset(7736)] // size = 4, padding = 0
        public ImGuiNavForward NavMoveRequestForward;

        [FieldOffset(7740)] // size = 4, padding = 0
        public ImGuiKeyModFlags NavMoveRequestKeyMods;

        [FieldOffset(7744)] // size = 4, padding = 0
        public ImGuiDir NavMoveDir;

        [FieldOffset(7748)] // size = 4, padding = 0
        public ImGuiDir NavMoveDirLast;

        [FieldOffset(7752)] // size = 4, padding = 4
        public ImGuiDir NavMoveClipDir;

        [FieldOffset(7760)] // size = 48, padding = 0
        public ImGuiNavMoveResult NavMoveResultLocal;

        [FieldOffset(7808)] // size = 48, padding = 0
        public ImGuiNavMoveResult NavMoveResultLocalVisibleSet;

        [FieldOffset(7856)] // size = 48, padding = 0
        public ImGuiNavMoveResult NavMoveResultOther;

        [FieldOffset(7904)] // size = 8, padding = 0
        public ImGuiWindow* NavWrapRequestWindow;

        [FieldOffset(7912)] // size = 4, padding = 4
        public ImGuiNavMoveFlags NavWrapRequestFlags;

        [FieldOffset(7920)] // size = 8, padding = 0
        public ImGuiWindow* NavWindowingTarget;

        [FieldOffset(7928)] // size = 8, padding = 0
        public ImGuiWindow* NavWindowingTargetAnim;

        [FieldOffset(7936)] // size = 8, padding = 0
        public ImGuiWindow* NavWindowingListWindow;

        [FieldOffset(7944)] // size = 4, padding = 0
        public float NavWindowingTimer;

        [FieldOffset(7948)] // size = 4, padding = 0
        public float NavWindowingHighlightAlpha;

        [FieldOffset(7952)] // size = 1, padding = 7
        public CBool NavWindowingToggleLayer;

        [FieldOffset(7960)] // size = 8, padding = 0
        public ImGuiWindow* TabFocusRequestCurrWindow;

        [FieldOffset(7968)] // size = 8, padding = 0
        public ImGuiWindow* TabFocusRequestNextWindow;

        [FieldOffset(7976)] // size = 4, padding = 0
        public int TabFocusRequestCurrCounterRegular;

        [FieldOffset(7980)] // size = 4, padding = 0
        public int TabFocusRequestCurrCounterTabStop;

        [FieldOffset(7984)] // size = 4, padding = 0
        public int TabFocusRequestNextCounterRegular;

        [FieldOffset(7988)] // size = 4, padding = 0
        public int TabFocusRequestNextCounterTabStop;

        [FieldOffset(7992)] // size = 1, padding = 3
        public CBool TabFocusPressed;

        [FieldOffset(7996)] // size = 4, padding = 0
        public float DimBgRatio;

        [FieldOffset(8000)] // size = 4, padding = 0
        public ImGuiMouseCursor MouseCursor;

        [FieldOffset(8004)] // size = 1, padding = 0
        public CBool DragDropActive;

        [FieldOffset(8005)] // size = 1, padding = 0
        public CBool DragDropWithinSource;

        [FieldOffset(8006)] // size = 1, padding = 1
        public CBool DragDropWithinTarget;

        [FieldOffset(8008)] // size = 4, padding = 0
        public ImGuiDragDropFlags DragDropSourceFlags;

        [FieldOffset(8012)] // size = 4, padding = 0
        public int DragDropSourceFrameCount;

        [FieldOffset(8016)] // size = 4, padding = 4
        public int DragDropMouseButton;

        [FieldOffset(8024)] // size = 64, padding = 0
        public ImGuiPayload DragDropPayload;

        [FieldOffset(8088)] // size = 16, padding = 0
        public ImRect DragDropTargetRect;

        [FieldOffset(8104)] // size = 4, padding = 0
        public ImGuiID DragDropTargetId;

        [FieldOffset(8108)] // size = 4, padding = 0
        public ImGuiDragDropFlags DragDropAcceptFlags;

        [FieldOffset(8112)] // size = 4, padding = 0
        public float DragDropAcceptIdCurrRectSurface;

        [FieldOffset(8116)] // size = 4, padding = 0
        public ImGuiID DragDropAcceptIdCurr;

        [FieldOffset(8120)] // size = 4, padding = 0
        public ImGuiID DragDropAcceptIdPrev;

        [FieldOffset(8124)] // size = 4, padding = 0
        public int DragDropAcceptFrameCount;

        [FieldOffset(8128)] // size = 4, padding = 4
        public ImGuiID DragDropHoldJustPressedId;

        [FieldOffset(8136)] // size = 16, padding = 0
        public ImVector_unsigned_char DragDropPayloadBufHeap;

        [FieldOffset(8152)] // size = 16, padding = 0
        public fixed byte _DragDropPayloadBufLocal[16 / 1]; // unsigned char[16]

        public Span<byte> DragDropPayloadBufLocal
        {
            get
            {
                fixed (ImGuiContext* @this = &this)
                {
                    var pointer = &@this->_DragDropPayloadBufLocal[0];
                    var span = new Span<byte>(pointer, 16);
                    return span;
                }
            }
        }

        [FieldOffset(8168)] // size = 8, padding = 0
        public ImGuiTable* CurrentTable;

        [FieldOffset(8176)] // size = 40, padding = 0
        public ImPool_ImGuiTable Tables;

        [FieldOffset(8216)] // size = 16, padding = 0
        public ImVector_ImGuiPtrOrIndex CurrentTableStack;

        [FieldOffset(8232)] // size = 16, padding = 0
        public ImVector_float TablesLastTimeActive;

        [FieldOffset(8248)] // size = 16, padding = 0
        public ImVector_ImDrawChannel DrawChannelsTempMergeBuffer;

        [FieldOffset(8264)] // size = 8, padding = 0
        public ImGuiTabBar* CurrentTabBar;

        [FieldOffset(8272)] // size = 40, padding = 0
        public ImPool_ImGuiTabBar TabBars;

        [FieldOffset(8312)] // size = 16, padding = 0
        public ImVector_ImGuiPtrOrIndex CurrentTabBarStack;

        [FieldOffset(8328)] // size = 16, padding = 0
        public ImVector_ImGuiShrinkWidthItem ShrinkWidthBuffer;

        [FieldOffset(8344)] // size = 8, padding = 0
        public Vector2 LastValidMousePos;

        [FieldOffset(8352)] // size = 3736, padding = 0
        public ImGuiInputTextState InputTextState;

        [FieldOffset(12088)] // size = 112, padding = 0
        public ImFont InputTextPasswordFont;

        [FieldOffset(12200)] // size = 4, padding = 0
        public ImGuiID TempInputId;

        [FieldOffset(12204)] // size = 4, padding = 0
        public ImGuiColorEditFlags ColorEditOptions;

        [FieldOffset(12208)] // size = 4, padding = 0
        public float ColorEditLastHue;

        [FieldOffset(12212)] // size = 4, padding = 0
        public float ColorEditLastSat;

        [FieldOffset(12216)] // size = 12, padding = 0
        public fixed uint _ColorEditLastColor[12 / 4]; // float[3]

        public Span<float> ColorEditLastColor
        {
            get
            {
                fixed (ImGuiContext* @this = &this)
                {
                    var pointer = &@this->_ColorEditLastColor[0];
                    var span = new Span<float>(pointer, 3);
                    return span;
                }
            }
        }

        [FieldOffset(12228)] // size = 16, padding = 0
        public Vector4 ColorPickerRef;

        [FieldOffset(12244)] // size = 4, padding = 0
        public float SliderCurrentAccum;

        [FieldOffset(12248)] // size = 1, padding = 0
        public CBool SliderCurrentAccumDirty;

        [FieldOffset(12249)] // size = 1, padding = 2
        public CBool DragCurrentAccumDirty;

        [FieldOffset(12252)] // size = 4, padding = 0
        public float DragCurrentAccum;

        [FieldOffset(12256)] // size = 4, padding = 0
        public float DragSpeedDefaultRatio;

        [FieldOffset(12260)] // size = 4, padding = 0
        public float ScrollbarClickDeltaToGrabCenter;

        [FieldOffset(12264)] // size = 4, padding = 0
        public int TooltipOverrideCount;

        [FieldOffset(12268)] // size = 4, padding = 0
        public float TooltipSlowDelay;

        [FieldOffset(12272)] // size = 16, padding = 0
        public ImVector_char ClipboardHandlerData;

        [FieldOffset(12288)] // size = 16, padding = 0
        public ImVector_ImGuiID MenusIdSubmittedThisFrame;

        [FieldOffset(12304)] // size = 8, padding = 0
        public Vector2 PlatformImePos;

        [FieldOffset(12312)] // size = 8, padding = 0
        public Vector2 PlatformImeLastPos;

        [FieldOffset(12320)] // size = 1, padding = 0
        public byte PlatformLocaleDecimalPoint;

        [FieldOffset(12321)] // size = 1, padding = 2
        public CBool SettingsLoaded;

        [FieldOffset(12324)] // size = 4, padding = 0
        public float SettingsDirtyTimer;

        [FieldOffset(12328)] // size = 16, padding = 0
        public ImGuiTextBuffer SettingsIniData;

        [FieldOffset(12344)] // size = 16, padding = 0
        public ImVector_ImGuiSettingsHandler SettingsHandlers;

        [FieldOffset(12360)] // size = 16, padding = 0
        public ImChunkStream_ImGuiWindowSettings SettingsWindows;

        [FieldOffset(12376)] // size = 16, padding = 0
        public ImChunkStream_ImGuiTableSettings SettingsTables;

        [FieldOffset(12392)] // size = 16, padding = 0
        public ImVector_ImGuiContextHook Hooks;

        [FieldOffset(12408)] // size = 4, padding = 0
        public ImGuiID HookIdNext;

        [FieldOffset(12412)] // size = 1, padding = 3
        public CBool LogEnabled;

        [FieldOffset(12416)] // size = 4, padding = 4
        public ImGuiLogType LogType;

        [FieldOffset(12424)] // size = 8, padding = 0
        public ImFileHandle LogFile;

        [FieldOffset(12432)] // size = 16, padding = 0
        public ImGuiTextBuffer LogBuffer;

        [FieldOffset(12448)] // size = 8, padding = 0
        public CString8U LogNextPrefix;

        [FieldOffset(12456)] // size = 8, padding = 0
        public CString8U LogNextSuffix;

        [FieldOffset(12464)] // size = 4, padding = 0
        public float LogLinePosY;

        [FieldOffset(12468)] // size = 1, padding = 3
        public CBool LogLineFirstItem;

        [FieldOffset(12472)] // size = 4, padding = 0
        public int LogDepthRef;

        [FieldOffset(12476)] // size = 4, padding = 0
        public int LogDepthToExpand;

        [FieldOffset(12480)] // size = 4, padding = 0
        public int LogDepthToExpandDefault;

        [FieldOffset(12484)] // size = 1, padding = 3
        public CBool DebugItemPickerActive;

        [FieldOffset(12488)] // size = 4, padding = 0
        public ImGuiID DebugItemPickerBreakId;

        [FieldOffset(12492)] // size = 16, padding = 0
        public ImGuiMetricsConfig DebugMetricsConfig;

        [FieldOffset(12508)] // size = 480, padding = 0
        public fixed uint _FramerateSecPerFrame[480 / 4]; // float[120]

        public Span<float> FramerateSecPerFrame
        {
            get
            {
                fixed (ImGuiContext* @this = &this)
                {
                    var pointer = &@this->_FramerateSecPerFrame[0];
                    var span = new Span<float>(pointer, 120);
                    return span;
                }
            }
        }

        [FieldOffset(12988)] // size = 4, padding = 0
        public int FramerateSecPerFrameIdx;

        [FieldOffset(12992)] // size = 4, padding = 0
        public float FramerateSecPerFrameAccum;

        [FieldOffset(12996)] // size = 4, padding = 0
        public int WantCaptureMouseNextFrame;

        [FieldOffset(13000)] // size = 4, padding = 0
        public int WantCaptureKeyboardNextFrame;

        [FieldOffset(13004)] // size = 4, padding = 0
        public int WantTextInputNextFrame;

        [FieldOffset(13008)] // size = 3073, padding = 7
        public fixed byte _TempBuffer[3073 / 1]; // char[3073]

        public string TempBuffer
        {
            get
            {
                fixed (ImGuiContext* @this = &this)
                {
                    var pointer = &@this->_TempBuffer[0];
                    var cString = new CString8U(pointer);
                    return Runtime.String8U(cString);
                }
            }
        }
    }

    // Struct @ cimgui.h:71:35 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 4)]
    public struct ImGuiMetricsConfig
    {
        [FieldOffset(0)] // size = 1, padding = 0
        public CBool ShowWindowsRects;

        [FieldOffset(1)] // size = 1, padding = 0
        public CBool ShowWindowsBeginOrder;

        [FieldOffset(2)] // size = 1, padding = 0
        public CBool ShowTablesRects;

        [FieldOffset(3)] // size = 1, padding = 0
        public CBool ShowDrawCmdMesh;

        [FieldOffset(4)] // size = 1, padding = 3
        public CBool ShowDrawCmdBoundingBoxes;

        [FieldOffset(8)] // size = 4, padding = 0
        public int ShowWindowsRectsType;

        [FieldOffset(12)] // size = 4, padding = 0
        public int ShowTablesRectsType;
    }

    // Struct @ cimgui.h:268:90 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiContextHook
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiContextHook* Data;
    }

    // Struct @ cimgui.h:78:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ImGuiContextHook
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiID HookId;

        [FieldOffset(4)] // size = 4, padding = 0
        public ImGuiContextHookType Type;

        [FieldOffset(8)] // size = 4, padding = 4
        public ImGuiID Owner;

        [FieldOffset(16)] // size = 8, padding = 0
        public ImGuiContextHookCallback Callback;

        [FieldOffset(24)] // size = 8, padding = 0
        public void* UserData;
    }

    // Struct @ cimgui.h:252:84 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImChunkStream_ImGuiTableSettings
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public ImVector_ImGuiTableSettings Buf;
    }

    // Struct @ cimgui.h:251:94 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiTableSettings
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiTableSettings* Data;
    }

    // Struct @ cimgui.h:254:86 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImChunkStream_ImGuiWindowSettings
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public ImVector_ImGuiWindowSettings Buf;
    }

    // Struct @ cimgui.h:253:96 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiWindowSettings
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiWindowSettings* Data;
    }

    // Struct @ cimgui.h:276:98 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiSettingsHandler
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiSettingsHandler* Data;
    }

    // Struct @ cimgui.h:65:37 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 72, Pack = 8)]
    public struct ImGuiSettingsHandler
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public CString8U TypeName;

        [FieldOffset(8)] // size = 4, padding = 4
        public ImGuiID TypeHash;

        [FieldOffset(16)] // size = 8, padding = 0
        public FnPtr_IMGUI_ImGuiContextPtr_ImGuiSettingsHandlerPtr_Void ClearAllFn;

        [FieldOffset(24)] // size = 8, padding = 0
        public FnPtr_IMGUI_ImGuiContextPtr_ImGuiSettingsHandlerPtr_Void ReadInitFn;

        [FieldOffset(32)] // size = 8, padding = 0
        public FnPtr_IMGUI_ImGuiContextPtr_ImGuiSettingsHandlerPtr_CString8U_VoidPtr ReadOpenFn;

        [FieldOffset(40)] // size = 8, padding = 0
        public FnPtr_IMGUI_ImGuiContextPtr_ImGuiSettingsHandlerPtr_VoidPtr_CString8U_Void ReadLineFn;

        [FieldOffset(48)] // size = 8, padding = 0
        public FnPtr_IMGUI_ImGuiContextPtr_ImGuiSettingsHandlerPtr_Void ApplyAllFn;

        [FieldOffset(56)] // size = 8, padding = 0
        public FnPtr_IMGUI_ImGuiContextPtr_ImGuiSettingsHandlerPtr_ImGuiTextBufferPtr_Void WriteAllFn;

        [FieldOffset(64)] // size = 8, padding = 0
        public void* UserData;
    }

    // Struct @ cimgui.h:277:98 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiShrinkWidthItem
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiShrinkWidthItem* Data;
    }

    // Struct @ cimgui.h:46:37 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 4)]
    public struct ImGuiShrinkWidthItem
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Index;

        [FieldOffset(4)] // size = 4, padding = 0
        public float Width;
    }

    // Struct @ cimgui.h:998:98 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
    public struct ImPool_ImGuiTabBar
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public ImVector_ImGuiTabBar Buf;

        [FieldOffset(16)] // size = 16, padding = 0
        public ImGuiStorage Map;

        [FieldOffset(32)] // size = 4, padding = 4
        public ImPoolIdx FreeIdx;
    }

    // Struct @ cimgui.h:997:80 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiTabBar
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiTabBar* Data;
    }

    // Struct @ cimgui.h:275:88 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiPtrOrIndex
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiPtrOrIndex* Data;
    }

    // Struct @ cimgui.h:45:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImGuiPtrOrIndex
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public void* Ptr;

        [FieldOffset(8)] // size = 4, padding = 4
        public int Index;
    }

    // Struct @ cimgui.h:1000:96 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
    public struct ImPool_ImGuiTable
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public ImVector_ImGuiTable Buf;

        [FieldOffset(16)] // size = 16, padding = 0
        public ImGuiStorage Map;

        [FieldOffset(32)] // size = 4, padding = 4
        public ImPoolIdx FreeIdx;
    }

    // Struct @ cimgui.h:999:78 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiTable
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiTable* Data;
    }

    // Struct @ cimgui.h:292:84 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_unsigned_char
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ulong* Data;
    }

    // Struct @ cimgui.h:97:29 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 64, Pack = 8)]
    public struct ImGuiPayload
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public void* Data;

        [FieldOffset(8)] // size = 4, padding = 0
        public int DataSize;

        [FieldOffset(12)] // size = 4, padding = 0
        public ImGuiID SourceId;

        [FieldOffset(16)] // size = 4, padding = 0
        public ImGuiID SourceParentId;

        [FieldOffset(20)] // size = 4, padding = 0
        public int DataFrameCount;

        [FieldOffset(24)] // size = 33, padding = 0
        public fixed byte _DataType[33 / 1]; // char[33]

        public string DataType
        {
            get
            {
                fixed (ImGuiPayload* @this = &this)
                {
                    var pointer = &@this->_DataType[0];
                    var cString = new CString8U(pointer);
                    return Runtime.String8U(cString);
                }
            }
        }

        [FieldOffset(57)] // size = 1, padding = 0
        public CBool Preview;

        [FieldOffset(58)] // size = 1, padding = 5
        public CBool Delivery;
    }

    // Struct @ cimgui.h:72:35 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
    public struct ImGuiNavMoveResult
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public ImGuiWindow* Window;

        [FieldOffset(8)] // size = 4, padding = 0
        public ImGuiID ID;

        [FieldOffset(12)] // size = 4, padding = 0
        public ImGuiID FocusScopeId;

        [FieldOffset(16)] // size = 4, padding = 0
        public float DistBox;

        [FieldOffset(20)] // size = 4, padding = 0
        public float DistCenter;

        [FieldOffset(24)] // size = 4, padding = 0
        public float DistAxial;

        [FieldOffset(28)] // size = 16, padding = 4
        public ImRect RectRel;
    }

    // Struct @ cimgui.h:283:90 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiViewportPPtr
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiViewportP** Data;
    }

    // Struct @ cimgui.h:274:86 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiPopupData
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiPopupData* Data;
    }

    // Struct @ cimgui.h:66:31 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
    public struct ImGuiPopupData
    {
        [FieldOffset(0)] // size = 4, padding = 4
        public ImGuiID PopupId;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiWindow* Window;

        [FieldOffset(16)] // size = 8, padding = 0
        public ImGuiWindow* SourceWindow;

        [FieldOffset(24)] // size = 4, padding = 0
        public int OpenFrameCount;

        [FieldOffset(28)] // size = 4, padding = 0
        public ImGuiID OpenParentId;

        [FieldOffset(32)] // size = 8, padding = 0
        public Vector2 OpenPopupPos;

        [FieldOffset(40)] // size = 8, padding = 0
        public Vector2 OpenMousePos;
    }

    // Struct @ cimgui.h:269:86 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiGroupData
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiGroupData* Data;
    }

    // Struct @ cimgui.h:76:31 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 4)]
    public struct ImGuiGroupData
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiID WindowID;

        [FieldOffset(4)] // size = 8, padding = 0
        public Vector2 BackupCursorPos;

        [FieldOffset(12)] // size = 8, padding = 0
        public Vector2 BackupCursorMaxPos;

        [FieldOffset(20)] // size = 4, padding = 0
        public float BackupIndent;

        [FieldOffset(24)] // size = 4, padding = 0
        public float BackupGroupOffset;

        [FieldOffset(28)] // size = 8, padding = 0
        public Vector2 BackupCurrLineSize;

        [FieldOffset(36)] // size = 4, padding = 0
        public float BackupCurrLineTextBaseOffset;

        [FieldOffset(40)] // size = 4, padding = 0
        public ImGuiID BackupActiveIdIsAlive;

        [FieldOffset(44)] // size = 1, padding = 0
        public CBool BackupActiveIdPreviousFrameIsAlive;

        [FieldOffset(45)] // size = 1, padding = 0
        public CBool BackupHoveredIdIsAlive;

        [FieldOffset(46)] // size = 1, padding = 1
        public CBool EmitItem;
    }

    // Struct @ cimgui.h:271:86 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiItemFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiItemFlags* Data;
    }

    // Struct @ cimgui.h:279:84 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiStyleMod
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiStyleMod* Data;
    }

    // Struct @ cimgui.h:63:30 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ImGuiStyleMod
    {
        [FieldOffset(0)] // size = 4, padding = 8
        public ImGuiStyleVar VarIdx;
    }

    // Struct @ cimgui.h:267:84 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiColorMod
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiColorMod* Data;
    }

    // Struct @ cimgui.h:79:30 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 20, Pack = 4)]
    public struct ImGuiColorMod
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiCol Col;

        [FieldOffset(4)] // size = 16, padding = 0
        public Vector4 BackupValue;
    }

    // Struct @ cimgui.h:69:34 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 20, Pack = 4)]
    public struct ImGuiNextItemData
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiNextItemDataFlags Flags;

        [FieldOffset(4)] // size = 4, padding = 0
        public float Width;

        [FieldOffset(8)] // size = 4, padding = 0
        public ImGuiID FocusScopeId;

        [FieldOffset(12)] // size = 4, padding = 0
        public ImGuiCond OpenCond;

        [FieldOffset(16)] // size = 1, padding = 3
        public CBool OpenVal;
    }

    // Struct @ cimgui.h:70:36 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 112, Pack = 8)]
    public struct ImGuiNextWindowData
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiNextWindowDataFlags Flags;

        [FieldOffset(4)] // size = 4, padding = 0
        public ImGuiCond PosCond;

        [FieldOffset(8)] // size = 4, padding = 0
        public ImGuiCond SizeCond;

        [FieldOffset(12)] // size = 4, padding = 0
        public ImGuiCond CollapsedCond;

        [FieldOffset(16)] // size = 8, padding = 0
        public Vector2 PosVal;

        [FieldOffset(24)] // size = 8, padding = 0
        public Vector2 PosPivotVal;

        [FieldOffset(32)] // size = 8, padding = 0
        public Vector2 SizeVal;

        [FieldOffset(40)] // size = 8, padding = 0
        public Vector2 ContentSizeVal;

        [FieldOffset(48)] // size = 8, padding = 0
        public Vector2 ScrollVal;

        [FieldOffset(56)] // size = 1, padding = 3
        public CBool CollapsedVal;

        [FieldOffset(60)] // size = 16, padding = 4
        public ImRect SizeConstraintRect;

        [FieldOffset(80)] // size = 8, padding = 0
        public ImGuiSizeCallback SizeCallback;

        [FieldOffset(88)] // size = 8, padding = 0
        public void* SizeCallbackUserData;

        [FieldOffset(96)] // size = 4, padding = 0
        public float BgAlphaVal;

        [FieldOffset(100)] // size = 8, padding = 4
        public Vector2 MenuBarOffsetMinVal;
    }

    // Struct @ cimgui.h:96:38 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
    public struct ImGuiSizeCallbackData
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public void* UserData;

        [FieldOffset(8)] // size = 8, padding = 0
        public Vector2 Pos;

        [FieldOffset(16)] // size = 8, padding = 0
        public Vector2 CurrentSize;

        [FieldOffset(24)] // size = 8, padding = 0
        public Vector2 DesiredSize;
    }

    // Struct @ cimgui.h:94:27 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 1044, Pack = 4)]
    public struct ImGuiStyle
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public float Alpha;

        [FieldOffset(4)] // size = 8, padding = 0
        public Vector2 WindowPadding;

        [FieldOffset(12)] // size = 4, padding = 0
        public float WindowRounding;

        [FieldOffset(16)] // size = 4, padding = 0
        public float WindowBorderSize;

        [FieldOffset(20)] // size = 8, padding = 0
        public Vector2 WindowMinSize;

        [FieldOffset(28)] // size = 8, padding = 0
        public Vector2 WindowTitleAlign;

        [FieldOffset(36)] // size = 4, padding = 0
        public ImGuiDir WindowMenuButtonPosition;

        [FieldOffset(40)] // size = 4, padding = 0
        public float ChildRounding;

        [FieldOffset(44)] // size = 4, padding = 0
        public float ChildBorderSize;

        [FieldOffset(48)] // size = 4, padding = 0
        public float PopupRounding;

        [FieldOffset(52)] // size = 4, padding = 0
        public float PopupBorderSize;

        [FieldOffset(56)] // size = 8, padding = 0
        public Vector2 FramePadding;

        [FieldOffset(64)] // size = 4, padding = 0
        public float FrameRounding;

        [FieldOffset(68)] // size = 4, padding = 0
        public float FrameBorderSize;

        [FieldOffset(72)] // size = 8, padding = 0
        public Vector2 ItemSpacing;

        [FieldOffset(80)] // size = 8, padding = 0
        public Vector2 ItemInnerSpacing;

        [FieldOffset(88)] // size = 8, padding = 0
        public Vector2 CellPadding;

        [FieldOffset(96)] // size = 8, padding = 0
        public Vector2 TouchExtraPadding;

        [FieldOffset(104)] // size = 4, padding = 0
        public float IndentSpacing;

        [FieldOffset(108)] // size = 4, padding = 0
        public float ColumnsMinSpacing;

        [FieldOffset(112)] // size = 4, padding = 0
        public float ScrollbarSize;

        [FieldOffset(116)] // size = 4, padding = 0
        public float ScrollbarRounding;

        [FieldOffset(120)] // size = 4, padding = 0
        public float GrabMinSize;

        [FieldOffset(124)] // size = 4, padding = 0
        public float GrabRounding;

        [FieldOffset(128)] // size = 4, padding = 0
        public float LogSliderDeadzone;

        [FieldOffset(132)] // size = 4, padding = 0
        public float TabRounding;

        [FieldOffset(136)] // size = 4, padding = 0
        public float TabBorderSize;

        [FieldOffset(140)] // size = 4, padding = 0
        public float TabMinWidthForCloseButton;

        [FieldOffset(144)] // size = 4, padding = 0
        public ImGuiDir ColorButtonPosition;

        [FieldOffset(148)] // size = 8, padding = 0
        public Vector2 ButtonTextAlign;

        [FieldOffset(156)] // size = 8, padding = 0
        public Vector2 SelectableTextAlign;

        [FieldOffset(164)] // size = 8, padding = 0
        public Vector2 DisplayWindowPadding;

        [FieldOffset(172)] // size = 8, padding = 0
        public Vector2 DisplaySafeAreaPadding;

        [FieldOffset(180)] // size = 4, padding = 0
        public float MouseCursorScale;

        [FieldOffset(184)] // size = 1, padding = 0
        public CBool AntiAliasedLines;

        [FieldOffset(185)] // size = 1, padding = 0
        public CBool AntiAliasedLinesUseTex;

        [FieldOffset(186)] // size = 1, padding = 1
        public CBool AntiAliasedFill;

        [FieldOffset(188)] // size = 4, padding = 0
        public float CurveTessellationTol;

        [FieldOffset(192)] // size = 4, padding = 0
        public float CircleTessellationMaxError;

        [FieldOffset(196)] // size = 848, padding = 0
        public fixed uint _Colors[848 / 4]; // ImVec4[53]

        public Span<Vector4> Colors
        {
            get
            {
                fixed (ImGuiStyle* @this = &this)
                {
                    var pointer = &@this->_Colors[0];
                    var span = new Span<Vector4>(pointer, 53);
                    return span;
                }
            }
        }
    }

    // Struct @ cimgui.h:101:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 5464, Pack = 8)]
    public struct ImGuiIO
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiConfigFlags ConfigFlags;

        [FieldOffset(4)] // size = 4, padding = 0
        public ImGuiBackendFlags BackendFlags;

        [FieldOffset(8)] // size = 8, padding = 0
        public Vector2 DisplaySize;

        [FieldOffset(16)] // size = 4, padding = 0
        public float DeltaTime;

        [FieldOffset(20)] // size = 4, padding = 0
        public float IniSavingRate;

        [FieldOffset(24)] // size = 8, padding = 0
        public CString8U IniFilename;

        [FieldOffset(32)] // size = 8, padding = 0
        public CString8U LogFilename;

        [FieldOffset(40)] // size = 4, padding = 0
        public float MouseDoubleClickTime;

        [FieldOffset(44)] // size = 4, padding = 0
        public float MouseDoubleClickMaxDist;

        [FieldOffset(48)] // size = 4, padding = 0
        public float MouseDragThreshold;

        [FieldOffset(52)] // size = 88, padding = 0
        public fixed uint _KeyMap[88 / 4]; // int[22]

        public Span<int> KeyMap
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_KeyMap[0];
                    var span = new Span<int>(pointer, 22);
                    return span;
                }
            }
        }

        [FieldOffset(140)] // size = 4, padding = 0
        public float KeyRepeatDelay;

        [FieldOffset(144)] // size = 4, padding = 4
        public float KeyRepeatRate;

        [FieldOffset(152)] // size = 8, padding = 0
        public void* UserData;

        [FieldOffset(160)] // size = 8, padding = 0
        public ImFontAtlas* Fonts;

        [FieldOffset(168)] // size = 4, padding = 0
        public float FontGlobalScale;

        [FieldOffset(172)] // size = 1, padding = 3
        public CBool FontAllowUserScaling;

        [FieldOffset(176)] // size = 8, padding = 0
        public ImFont* FontDefault;

        [FieldOffset(184)] // size = 8, padding = 0
        public Vector2 DisplayFramebufferScale;

        [FieldOffset(192)] // size = 1, padding = 0
        public CBool MouseDrawCursor;

        [FieldOffset(193)] // size = 1, padding = 0
        public CBool ConfigMacOSXBehaviors;

        [FieldOffset(194)] // size = 1, padding = 0
        public CBool ConfigInputTextCursorBlink;

        [FieldOffset(195)] // size = 1, padding = 0
        public CBool ConfigDragClickToInputText;

        [FieldOffset(196)] // size = 1, padding = 0
        public CBool ConfigWindowsResizeFromEdges;

        [FieldOffset(197)] // size = 1, padding = 2
        public CBool ConfigWindowsMoveFromTitleBarOnly;

        [FieldOffset(200)] // size = 4, padding = 4
        public float ConfigMemoryCompactTimer;

        [FieldOffset(208)] // size = 8, padding = 0
        public CString8U BackendPlatformName;

        [FieldOffset(216)] // size = 8, padding = 0
        public CString8U BackendRendererName;

        [FieldOffset(224)] // size = 8, padding = 0
        public void* BackendPlatformUserData;

        [FieldOffset(232)] // size = 8, padding = 0
        public void* BackendRendererUserData;

        [FieldOffset(240)] // size = 8, padding = 0
        public void* BackendLanguageUserData;

        [FieldOffset(248)] // size = 8, padding = 0
        public FnPtr_IMGUI_VoidPtr_CString8U GetClipboardTextFn;

        [FieldOffset(256)] // size = 8, padding = 0
        public FnPtr_IMGUI_VoidPtr_CString8U_Void SetClipboardTextFn;

        [FieldOffset(264)] // size = 8, padding = 0
        public void* ClipboardUserData;

        [FieldOffset(272)] // size = 8, padding = 0
        public FnPtr_IMGUI_Int_Int_Void ImeSetInputScreenPosFn;

        [FieldOffset(280)] // size = 8, padding = 0
        public void* ImeWindowHandle;

        [FieldOffset(288)] // size = 8, padding = 0
        public Vector2 MousePos;

        [FieldOffset(296)] // size = 5, padding = 3
        public fixed byte _MouseDown[5 / 1]; // _Bool[5]

        public Span<CBool> MouseDown
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDown[0];
                    var span = new Span<CBool>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(304)] // size = 4, padding = 0
        public float MouseWheel;

        [FieldOffset(308)] // size = 4, padding = 0
        public float MouseWheelH;

        [FieldOffset(312)] // size = 1, padding = 0
        public CBool KeyCtrl;

        [FieldOffset(313)] // size = 1, padding = 0
        public CBool KeyShift;

        [FieldOffset(314)] // size = 1, padding = 0
        public CBool KeyAlt;

        [FieldOffset(315)] // size = 1, padding = 0
        public CBool KeySuper;

        [FieldOffset(316)] // size = 512, padding = 0
        public fixed byte _KeysDown[512 / 1]; // _Bool[512]

        public Span<CBool> KeysDown
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_KeysDown[0];
                    var span = new Span<CBool>(pointer, 512);
                    return span;
                }
            }
        }

        [FieldOffset(828)] // size = 84, padding = 0
        public fixed uint _NavInputs[84 / 4]; // float[21]

        public Span<float> NavInputs
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_NavInputs[0];
                    var span = new Span<float>(pointer, 21);
                    return span;
                }
            }
        }

        [FieldOffset(912)] // size = 1, padding = 0
        public CBool WantCaptureMouse;

        [FieldOffset(913)] // size = 1, padding = 0
        public CBool WantCaptureKeyboard;

        [FieldOffset(914)] // size = 1, padding = 0
        public CBool WantTextInput;

        [FieldOffset(915)] // size = 1, padding = 0
        public CBool WantSetMousePos;

        [FieldOffset(916)] // size = 1, padding = 0
        public CBool WantSaveIniSettings;

        [FieldOffset(917)] // size = 1, padding = 0
        public CBool NavActive;

        [FieldOffset(918)] // size = 1, padding = 1
        public CBool NavVisible;

        [FieldOffset(920)] // size = 4, padding = 0
        public float Framerate;

        [FieldOffset(924)] // size = 4, padding = 0
        public int MetricsRenderVertices;

        [FieldOffset(928)] // size = 4, padding = 0
        public int MetricsRenderIndices;

        [FieldOffset(932)] // size = 4, padding = 0
        public int MetricsRenderWindows;

        [FieldOffset(936)] // size = 4, padding = 0
        public int MetricsActiveWindows;

        [FieldOffset(940)] // size = 4, padding = 0
        public int MetricsActiveAllocations;

        [FieldOffset(944)] // size = 8, padding = 0
        public Vector2 MouseDelta;

        [FieldOffset(952)] // size = 4, padding = 0
        public ImGuiKeyModFlags KeyMods;

        [FieldOffset(956)] // size = 8, padding = 0
        public Vector2 MousePosPrev;

        [FieldOffset(964)] // size = 40, padding = 4
        public fixed uint _MouseClickedPos[40 / 4]; // ImVec2[5]

        public Span<Vector2> MouseClickedPos
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseClickedPos[0];
                    var span = new Span<Vector2>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(1008)] // size = 40, padding = 0
        public fixed ulong _MouseClickedTime[40 / 8]; // double[5]

        public Span<double> MouseClickedTime
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseClickedTime[0];
                    var span = new Span<double>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(1048)] // size = 5, padding = 0
        public fixed byte _MouseClicked[5 / 1]; // _Bool[5]

        public Span<CBool> MouseClicked
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseClicked[0];
                    var span = new Span<CBool>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(1053)] // size = 5, padding = 0
        public fixed byte _MouseDoubleClicked[5 / 1]; // _Bool[5]

        public Span<CBool> MouseDoubleClicked
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDoubleClicked[0];
                    var span = new Span<CBool>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(1058)] // size = 5, padding = 0
        public fixed byte _MouseReleased[5 / 1]; // _Bool[5]

        public Span<CBool> MouseReleased
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseReleased[0];
                    var span = new Span<CBool>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(1063)] // size = 5, padding = 0
        public fixed byte _MouseDownOwned[5 / 1]; // _Bool[5]

        public Span<CBool> MouseDownOwned
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDownOwned[0];
                    var span = new Span<CBool>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(1068)] // size = 5, padding = 3
        public fixed byte _MouseDownWasDoubleClick[5 / 1]; // _Bool[5]

        public Span<CBool> MouseDownWasDoubleClick
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDownWasDoubleClick[0];
                    var span = new Span<CBool>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(1076)] // size = 20, padding = 0
        public fixed uint _MouseDownDuration[20 / 4]; // float[5]

        public Span<float> MouseDownDuration
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDownDuration[0];
                    var span = new Span<float>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(1096)] // size = 20, padding = 0
        public fixed uint _MouseDownDurationPrev[20 / 4]; // float[5]

        public Span<float> MouseDownDurationPrev
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDownDurationPrev[0];
                    var span = new Span<float>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(1116)] // size = 40, padding = 0
        public fixed uint _MouseDragMaxDistanceAbs[40 / 4]; // ImVec2[5]

        public Span<Vector2> MouseDragMaxDistanceAbs
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDragMaxDistanceAbs[0];
                    var span = new Span<Vector2>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(1156)] // size = 20, padding = 0
        public fixed uint _MouseDragMaxDistanceSqr[20 / 4]; // float[5]

        public Span<float> MouseDragMaxDistanceSqr
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_MouseDragMaxDistanceSqr[0];
                    var span = new Span<float>(pointer, 5);
                    return span;
                }
            }
        }

        [FieldOffset(1176)] // size = 2048, padding = 0
        public fixed uint _KeysDownDuration[2048 / 4]; // float[512]

        public Span<float> KeysDownDuration
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_KeysDownDuration[0];
                    var span = new Span<float>(pointer, 512);
                    return span;
                }
            }
        }

        [FieldOffset(3224)] // size = 2048, padding = 0
        public fixed uint _KeysDownDurationPrev[2048 / 4]; // float[512]

        public Span<float> KeysDownDurationPrev
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_KeysDownDurationPrev[0];
                    var span = new Span<float>(pointer, 512);
                    return span;
                }
            }
        }

        [FieldOffset(5272)] // size = 84, padding = 0
        public fixed uint _NavInputsDownDuration[84 / 4]; // float[21]

        public Span<float> NavInputsDownDuration
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_NavInputsDownDuration[0];
                    var span = new Span<float>(pointer, 21);
                    return span;
                }
            }
        }

        [FieldOffset(5356)] // size = 84, padding = 0
        public fixed uint _NavInputsDownDurationPrev[84 / 4]; // float[21]

        public Span<float> NavInputsDownDurationPrev
        {
            get
            {
                fixed (ImGuiIO* @this = &this)
                {
                    var pointer = &@this->_NavInputsDownDurationPrev[0];
                    var span = new Span<float>(pointer, 21);
                    return span;
                }
            }
        }

        [FieldOffset(5440)] // size = 4, padding = 0
        public float PenPressure;

        [FieldOffset(5444)] // size = 2, padding = 2
        public char InputQueueSurrogate;

        [FieldOffset(5448)] // size = 16, padding = 0
        public ImVector_ImWchar InputQueueCharacters;
    }

    // Struct @ cimgui.h:42:41 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 12, Pack = 4)]
    public struct ImGuiTableColumnSettings
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public float WidthOrWeight;

        [FieldOffset(4)] // size = 4, padding = 0
        public ImGuiID UserID;

        [FieldOffset(8)] // size = 1, padding = 0
        public ImGuiTableColumnIdx Index;

        [FieldOffset(9)] // size = 1, padding = 0
        public ImGuiTableColumnIdx DisplayOrder;

        [FieldOffset(10)] // size = 1, padding = 0
        public ImGuiTableColumnIdx SortOrder;

        [FieldOffset(11)] // size = 1, padding = -1
        public byte SortDirection;

        [FieldOffset(11)] // size = 1, padding = -1
        public byte IsEnabled;

        [FieldOffset(11)] // size = 1, padding = 0
        public byte IsStretch;
    }

    // Struct @ cimgui.h:74:40 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 4)]
    public struct ImGuiLastItemDataBackup
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public ImGuiID LastItemId;

        [FieldOffset(4)] // size = 4, padding = 0
        public ImGuiItemStatusFlags LastItemStatusFlags;

        [FieldOffset(8)] // size = 16, padding = 0
        public ImRect LastItemRect;

        [FieldOffset(24)] // size = 16, padding = 0
        public ImRect LastItemDisplayRect;
    }

    // Struct @ cimgui.h:82:28 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImBitVector
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public ImVector_ImU32 Storage;
    }

    // Struct @ cimgui.h:286:68 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImU32
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public uint* Data;
    }

    // Struct @ cimgui.h:104:41 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImFontGlyphRangesBuilder
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public ImVector_ImU32 UsedChars;
    }

    // Struct @ cimgui.h:103:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 4)]
    public struct ImColor
    {
        [FieldOffset(0)] // size = 16, padding = 0
        public Vector4 Value;
    }

    // Struct @ cimgui.h:99:33 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 28, Pack = 4)]
    public struct ImGuiListClipper
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int DisplayStart;

        [FieldOffset(4)] // size = 4, padding = 0
        public int DisplayEnd;

        [FieldOffset(8)] // size = 4, padding = 0
        public int ItemsCount;

        [FieldOffset(12)] // size = 4, padding = 0
        public int StepNo;

        [FieldOffset(16)] // size = 4, padding = 0
        public int ItemsFrozen;

        [FieldOffset(20)] // size = 4, padding = 0
        public float ItemsHeight;

        [FieldOffset(24)] // size = 4, padding = 0
        public float StartPosY;
    }

    // Struct @ cimgui.h:282:86 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImVector_ImGuiTextRange
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Size;

        [FieldOffset(4)] // size = 4, padding = 0
        public int Capacity;

        [FieldOffset(8)] // size = 8, padding = 0
        public ImGuiTextRange* Data;
    }

    // Struct @ cimgui.h:86:31 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
    public struct ImGuiTextRange
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public CString8U b;

        [FieldOffset(8)] // size = 8, padding = 0
        public CString8U e;
    }

    // Struct @ cimgui.h:90:32 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 280, Pack = 8)]
    public struct ImGuiTextFilter
    {
        [FieldOffset(0)] // size = 256, padding = 0
        public fixed byte _InputBuf[256 / 1]; // char[256]

        public string InputBuf
        {
            get
            {
                fixed (ImGuiTextFilter* @this = &this)
                {
                    var pointer = &@this->_InputBuf[0];
                    var cString = new CString8U(pointer);
                    return Runtime.String8U(cString);
                }
            }
        }

        [FieldOffset(256)] // size = 16, padding = 0
        public ImVector_ImGuiTextRange Filters;

        [FieldOffset(272)] // size = 4, padding = 4
        public int CountGrep;
    }

    // Struct @ cimgui.h:98:36 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiOnceUponAFrame
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int RefFrame;
    }

    // Typedef @ cimgui.h:181:15 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImTextureID
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public void* Data;

        public static implicit operator void*(ImTextureID data) => data.Data;
        public static implicit operator ImTextureID(void* data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:159:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImFontAtlasFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImFontAtlasFlags data) => data.Data;
        public static implicit operator ImFontAtlasFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:179:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiViewportFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiViewportFlags data) => data.Data;
        public static implicit operator ImGuiViewportFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:199:24 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 2, Pack = 2)]
    public struct ImDrawIdx
    {
        [FieldOffset(0)] // size = 2, padding = 0
        public ushort Data;

        public static implicit operator ushort(ImDrawIdx data) => data.Data;
        public static implicit operator ImDrawIdx(ushort data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:158:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImDrawListFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImDrawListFlags data) => data.Data;
        public static implicit operator ImDrawListFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:234:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiOldColumnFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiOldColumnFlags data) => data.Data;
        public static implicit operator ImGuiOldColumnFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:232:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiItemFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiItemFlags data) => data.Data;
        public static implicit operator ImGuiItemFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:231:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiLayoutType
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiLayoutType data) => data.Data;
        public static implicit operator ImGuiLayoutType(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:233:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiItemStatusFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiItemStatusFlags data) => data.Data;
        public static implicit operator ImGuiItemStatusFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:147:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiCond
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiCond data) => data.Data;
        public static implicit operator ImGuiCond(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:149:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiDir
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiDir data) => data.Data;
        public static implicit operator ImGuiDir(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:180:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiWindowFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiWindowFlags data) => data.Data;
        public static implicit operator ImGuiWindowFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:182:22 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiID
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public uint Data;

        public static implicit operator uint(ImGuiID data) => data.Data;
        public static implicit operator ImGuiID(uint data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:248:14 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
    public struct ImGuiTableColumnIdx
    {
        [FieldOffset(0)] // size = 1, padding = 0
        public sbyte Data;

        public static implicit operator sbyte(ImGuiTableColumnIdx data) => data.Data;
        public static implicit operator ImGuiTableColumnIdx(sbyte data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:175:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiTableFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiTableFlags data) => data.Data;
        public static implicit operator ImGuiTableFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:249:14 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
    public struct ImGuiTableDrawChannelIdx
    {
        [FieldOffset(0)] // size = 1, padding = 0
        public byte Data;

        public static implicit operator byte(ImGuiTableDrawChannelIdx data) => data.Data;
        public static implicit operator ImGuiTableDrawChannelIdx(byte data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:154:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiSortDirection
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiSortDirection data) => data.Data;
        public static implicit operator ImGuiSortDirection(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:177:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiTableRowFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiTableRowFlags data) => data.Data;
        public static implicit operator ImGuiTableRowFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:176:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiTableColumnFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiTableColumnFlags data) => data.Data;
        public static implicit operator ImGuiTableColumnFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:173:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiTabBarFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiTabBarFlags data) => data.Data;
        public static implicit operator ImGuiTabBarFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:174:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiTabItemFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiTabItemFlags data) => data.Data;
        public static implicit operator ImGuiTabItemFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:162:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiColorEditFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiColorEditFlags data) => data.Data;
        public static implicit operator ImGuiColorEditFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:150:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiKey
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiKey data) => data.Data;
        public static implicit operator ImGuiKey(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:168:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiInputTextFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiInputTextFlags data) => data.Data;
        public static implicit operator ImGuiInputTextFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:148:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiDataType
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiDataType data) => data.Data;
        public static implicit operator ImGuiDataType(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:178:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiTreeNodeFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiTreeNodeFlags data) => data.Data;
        public static implicit operator ImGuiTreeNodeFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:172:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiSliderFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiSliderFlags data) => data.Data;
        public static implicit operator ImGuiSliderFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:161:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiButtonFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiButtonFlags data) => data.Data;
        public static implicit operator ImGuiButtonFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:240:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiSeparatorFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiSeparatorFlags data) => data.Data;
        public static implicit operator ImGuiSeparatorFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:157:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImDrawFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImDrawFlags data) => data.Data;
        public static implicit operator ImDrawFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:241:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiTextFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiTextFlags data) => data.Data;
        public static implicit operator ImGuiTextFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:153:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiMouseCursor
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiMouseCursor data) => data.Data;
        public static implicit operator ImGuiMouseCursor(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:235:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiNavHighlightFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiNavHighlightFlags data) => data.Data;
        public static implicit operator ImGuiNavHighlightFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:245:15 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
    public struct ImFileHandle
    {
        [FieldOffset(0)] // size = 8, padding = 0
        public FILE* Data;

        public static implicit operator FILE*(ImFileHandle data) => data.Data;
        public static implicit operator ImFileHandle(FILE* data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:246:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImPoolIdx
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImPoolIdx data) => data.Data;
        public static implicit operator ImPoolIdx(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:165:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiDragDropFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiDragDropFlags data) => data.Data;
        public static implicit operator ImGuiDragDropFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:237:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiNavMoveFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiNavMoveFlags data) => data.Data;
        public static implicit operator ImGuiNavMoveFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:169:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiKeyModFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiKeyModFlags data) => data.Data;
        public static implicit operator ImGuiKeyModFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:155:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiStyleVar
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiStyleVar data) => data.Data;
        public static implicit operator ImGuiStyleVar(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:146:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiCol
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiCol data) => data.Data;
        public static implicit operator ImGuiCol(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:238:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiNextItemDataFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiNextItemDataFlags data) => data.Data;
        public static implicit operator ImGuiNextItemDataFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:239:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiNextWindowDataFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiNextWindowDataFlags data) => data.Data;
        public static implicit operator ImGuiNextWindowDataFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:160:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiBackendFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiBackendFlags data) => data.Data;
        public static implicit operator ImGuiBackendFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:163:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiConfigFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiConfigFlags data) => data.Data;
        public static implicit operator ImGuiConfigFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:151:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiNavInput
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiNavInput data) => data.Data;
        public static implicit operator ImGuiNavInput(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:152:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiMouseButton
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiMouseButton data) => data.Data;
        public static implicit operator ImGuiMouseButton(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:236:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiNavDirSourceFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiNavDirSourceFlags data) => data.Data;
        public static implicit operator ImGuiNavDirSourceFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:242:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiTooltipFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiTooltipFlags data) => data.Data;
        public static implicit operator ImGuiTooltipFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:170:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiPopupFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiPopupFlags data) => data.Data;
        public static implicit operator ImGuiPopupFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:167:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiHoveredFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiHoveredFlags data) => data.Data;
        public static implicit operator ImGuiHoveredFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:156:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiTableBgTarget
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiTableBgTarget data) => data.Data;
        public static implicit operator ImGuiTableBgTarget(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:171:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiSelectableFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiSelectableFlags data) => data.Data;
        public static implicit operator ImGuiSelectableFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:164:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiComboFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiComboFlags data) => data.Data;
        public static implicit operator ImGuiComboFlags(int data) => new() { Data = data };
    }

    // Typedef @ cimgui.h:166:13 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
    public struct ImGuiFocusedFlags
    {
        [FieldOffset(0)] // size = 4, padding = 0
        public int Data;

        public static implicit operator int(ImGuiFocusedFlags data) => data.Data;
        public static implicit operator ImGuiFocusedFlags(int data) => new() { Data = data };
    }

    // Enum @ cimgui.h:1418:2 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    public enum ImGuiNavLayer : uint
    {
        ImGuiNavLayer_Main = 0U,
        ImGuiNavLayer_Menu = 1U,
        ImGuiNavLayer_COUNT = 2U
    }

    // Enum @ cimgui.h:1369:2 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    public enum ImGuiPlotType : uint
    {
        ImGuiPlotType_Lines = 0U,
        ImGuiPlotType_Histogram = 1U
    }

    // Enum @ cimgui.h:1365:2 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    public enum ImGuiAxis : uint
    {
        ImGuiAxis_None = 4294967295U,
        ImGuiAxis_X = 0U,
        ImGuiAxis_Y = 1U
    }

    // Enum @ cimgui.h:1360:2 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    public enum ImGuiLogType : uint
    {
        ImGuiLogType_None = 0U,
        ImGuiLogType_TTY = 1U,
        ImGuiLogType_File = 2U,
        ImGuiLogType_Buffer = 3U,
        ImGuiLogType_Clipboard = 4U
    }

    // Enum @ cimgui.h:1646:288 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    public enum ImGuiContextHookType : uint
    {
        ImGuiContextHookType_NewFramePre = 0U,
        ImGuiContextHookType_NewFramePost = 1U,
        ImGuiContextHookType_EndFramePre = 2U,
        ImGuiContextHookType_EndFramePost = 3U,
        ImGuiContextHookType_RenderPre = 4U,
        ImGuiContextHookType_RenderPost = 5U,
        ImGuiContextHookType_Shutdown = 6U,
        ImGuiContextHookType_PendingRemoval_ = 7U
    }

    // Enum @ cimgui.h:1413:2 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    public enum ImGuiNavForward : uint
    {
        ImGuiNavForward_None = 0U,
        ImGuiNavForward_ForwardQueued = 1U,
        ImGuiNavForward_ForwardActive = 2U
    }

    // Enum @ cimgui.h:1377:2 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    public enum ImGuiInputSource : uint
    {
        ImGuiInputSource_None = 0U,
        ImGuiInputSource_Mouse = 1U,
        ImGuiInputSource_Keyboard = 2U,
        ImGuiInputSource_Gamepad = 3U,
        ImGuiInputSource_Nav = 4U,
        ImGuiInputSource_COUNT = 5U
    }

    // Enum @ cimgui.h:1385:2 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    public enum ImGuiInputReadMode : uint
    {
        ImGuiInputReadMode_Down = 0U,
        ImGuiInputReadMode_Pressed = 1U,
        ImGuiInputReadMode_Released = 2U,
        ImGuiInputReadMode_Repeat = 3U,
        ImGuiInputReadMode_RepeatSlow = 4U,
        ImGuiInputReadMode_RepeatFast = 5U
    }

    // Enum @ cimgui.h:1423:2 (/home/runner/work/imgui-cs/imgui-cs/ext/cimgui/cimgui.h)
    public enum ImGuiPopupPositionPolicy : uint
    {
        ImGuiPopupPositionPolicy_Default = 0U,
        ImGuiPopupPositionPolicy_ComboBox = 1U,
        ImGuiPopupPositionPolicy_Tooltip = 2U
    }
}
